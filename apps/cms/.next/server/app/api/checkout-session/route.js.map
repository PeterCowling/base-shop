{"version":3,"file":"app/api/checkout-session/route.js","mappings":"wFAEA,MAAW,EAAQ,IAAe,EAElC,EAAa,EAAQ,IAAiB,EACtC,CAHkB,CAGN,EAAQ,IAAgB,EAIpC,CALoB,CAKpB,QAHoB,CADD,CACS,IAAgB,GAG5C,UAH2B,uBCF3B,sBACA,8EAA2F,SAC3F,oCAA4C,SAG5C,SACA,iBACA,YACA,uBAEA,qBAAkE,MAAlE,4BACA,qBAAqE,MAArE,2BAHgC,SAehC,aADA,KADA,GAEA,EAAsB,SACtB,OADsC,QACtC,+CAEA,oDAAyG,MAAzG,8BAF2E,SAI3E,sCACA,2BAEA,iDAF6C,KAEiB,CAFjB,GAI7C,uDAEA,MAAkD,sBAApB,SAAoB,MAClD,GAfA,EAckD,GAClD,2BAAuE,QACvE,CAEA,QACA,8BC1CA,MAAc,EAAQ,GAAgB,EAEtC,EAAiB,EAAQ,IAAgB,EAUzC,WAVwB,CAUxB,MAMA,IAJA,IAEA,EAFA,IAIQ,iBAA4B,IACpC,aAOA,OANA,cACA,IAEA,OAA0D,OAC1D,UAEA,CAGA,EALsB,EAQtB,cACA,MAGA,EAb0D,EAa1D,SACA,kBACA,EAEA,kBACA,aACA,EACA,UAGA,OAAsF,CACtF,CAD4F,GAC5F,EACA,MAF4B,CAE5B,KACA,OACA,CAAG,EAYH,gBACA,KACA,gBAEA,EAGA,GAvBsF,MAuBtF,YAQA,IAH8D,EAG9D,GACA,mBACA,aACA,kDAEA,CAAG,CACH,mBACA,gBACA,SAIA,OAHA,aACA,WAEA,GACA,CAAG,CACH,gBACA,aACA,CAAG,CACH,oBAxCA,EAyCA,MAxCA,GADA,EAyCA,IArCA,MAqCA,EACA,CAAG,CACH,kBACA,GAEA,IACA,WACA,GAGA,EAA8C,MAC9C,CACA,EAEA,QAJsB,wBAAwB,ICtG9C,4BACA,WAGA,gBAGA,QAFA,KAEA,IAAoB,WAAc,KAClC,UAEA,YAAoB,WAAc,KAClC,mBAGA,QACA,EAEA,gBAEA,QADA,KACA,WAAqC,WAAoB,UACzD,UAEA,QACA,EAEA,gBAEA,QADA,KACA,IAAoB,WAAgB,KACpC,QACA,cACA,OAGA,QACA,EAEA,sBACA,IAMA,EANA,OACA,0DACA,gBAxCA,kDAwCA,GAyBA,QAvBA,iBAqBA,yBACA,KACA,IAAoB,IAAiB,IACrC,WAKA,GAFA,qDAAiF,sCAAsC,GAxBvH,WACA,sBACA,cACA,KACA,uBAEA,cACA,EAEA,KAEA,eACA,EACA,eAGA,GAUA,aACA,kBACA,yBACA,kBACA,gBACA,CAEA,QACA,iBCnFA,4CACA,gGACA,4CACA,2BACA,wCACA,gGACA,4CACA,2BAEA,EADA,8CACA,2BAEA,cADA,kCACA,2BAEA,EADA,8CACA,6BACA,4BACA,4BACA,8BACA,yBACA,yBACA,2BACA,+BACA,+BACA,wBACA,yBACA,uBACA,wBACA,aACA,0DACA,+BACA,6FACA,8DAEA,mGACA,mBACA,KACA,wCAEA,6EACA,gCACA,YACA,oBAAgC,IAEhC,EAGA,gBACA,GACA,SACA,UACA,MACA,kBACA,cAEA,SAEA,wBAAqC,EAAE,eACvC,uBACA,sBACA,GADyD,IACzD,GACA,gBACA,uBACA,qDAA2G,EAAE,mBAC7G,CACA,CACA,wBACA,CAEA,MAAkB,EAAQ,IAAgB,EAC1C,WADyB,EAEzB,YAEA,GACA,eACA,WACA,UACA,EACA,GACA,eACA,kBACA,iBACA,EAuMA,kBAEA,QADA,gBACA,CACA,YACA,CAMA,cACA,wDACA,CACA,cAAwB,oCAExB,cAAyB,qCAOzB,cACA,KACA,kDAEA,sBACA,SAEA,8BACA,SAEA,IAEA,OADA,UACA,EACA,CAAM,UACN,QACA,CA1OA,8BACA,IAoNA,EAEA,EACA,EAFA,EAHA,CAIyB,CAtNzB,CAuN0B,CAvN1B,CAqNyB,EArNzB,GAEA,yCACA,oEAEA,GACA,4DACA,6CACA,0BAGA,0GAEA,6CACA,qCACA,iGAGA,GACA,eACA,iBACA,gBACA,gDAEA,4EAEA,iEACA,qFAEA,yBAEA,cACA,kBAEA,YACA,aAEA,uBACA,wBAGA,sBACA,gBAuTA,OACA,+BACA,iCAEA,0CADA,yCAEA,CACA,gCAIA,OAHA,cAGA,EADA,4CACA,WACA,EAlUA,KAEA,uBACA,SACA,wBAEA,iBACA,mBACA,CACA,uBACA,qBACA,mBACA,CAEA,kCAEA,GADA,aAAwC,KACxC,gCACA,iCAGA,gBAmVA,KACA,MACA,kBACA,WACM,4CAGN,YAFA,gCAIA,OACA,OACA,yBACA,CACA,EAhWA,KAEA,cACA,UACM,aACN,mBAGA,mBAKA,GAJA,GACA,cACA,QAEA,GACA,OACA,eAKA,OAHA,mBACA,4BAEA,YACA,CACA,mBACA,CAEA,gCACA,CADuD,GACvD,GAuKA,YACA,UAAkB,cAClB,sDACA,EAAa,KACb,IACA,EA5KA,GACA,YACA,mEAAkG,qBAAgC,KAClI,CACA,SACA,mEACA,oCACA,CACA,GA0PA,CADA,GAzPA,IA0PA,YAAuC,KAAvC,KACA,4DAGA,kEA9PA,CAGA,QAsPA,GA/IA,GAzGA,kCACA,oBACA,KAAwB,aAAkB,KAC1C,4BAsGA,GAtGA,aAuGA,8BAAiD,IAvGjD,YAKA,OAHA,QACA,oCAAuD,WACvD,uCAEA,CACA,SACA,gBAAgC,WAChC,uBACA,cA0RA,GACA,YAAoB,WAAe,IACnC,mBACA,SAGA,QACA,EAjSA,IACA,iBAEA,yBACA,CACA,GAiGwB,qBAAxB,EAjGA,IAiGwB,KAjGxB,CACA,sBACA,6DAGA,KAAkC,EAAlC,OAAkC,kBAClC,GAAkB,qCAAuD,EAHzE,GAAsB,qEAAuG,CAI7H,CACA,yBACA,kCACA,YAAsC,WAAyB,OACrD,8CACV,kBACA,CAEA,YA4IA,GACA,8BACA,SAEA,IACA,UACA,IACA,SACA,CAAU,SACV,QACA,CACA,uBACA,CAAM,CAD2B,KAC3B,IACN,QACA,EA1JA,IACA,UAMA,OALA,GACA,uBACA,kCACA,CAAa,EAEb,wBACA,CACA,GA8KA,YACA,8BACA,SAEA,IACA,UACA,IACA,SACA,CAAU,SACV,QACA,CACA,uBACA,CAAM,CAD2B,KAC3B,IACN,QACA,EA5LA,IACA,UAMA,OALA,GACA,qBACA,gBACA,CAAa,EAEb,wBACA,CACA,YA0IA,GACA,8BACA,SAEA,IACA,YACA,IACA,WACA,CAAU,SACV,QACA,CACA,2BACA,CAAM,CAD+B,KAC/B,IACN,QACA,EAxJA,GACA,oBAEA,GAkLA,YACA,8BACA,SAEA,IACA,YACA,IACA,WACA,CAAU,SACV,QACA,CACA,2BACA,CAAM,CAD+B,KAC/B,IACN,QACA,EAhMA,GACA,oBAEA,GAoJA,YACA,8BACA,SAEA,IAEA,OADA,UACA,EACA,CAAM,UACN,QACA,EA7JA,GACA,oBAEA,GAyDyB,sBAAzB,EAzDA,IAyDyB,KAxDzB,wBAEA,GA2EA,YACA,8BACA,SAEA,IAEA,OADA,UACA,EACA,CAAM,UACN,QACA,EApFA,GACA,wBAEA,GAoD0B,uBAA1B,EApDA,IAoD0B,KAnD1B,oBAEA,GA+CyB,sBAAzB,EA/CA,IA+CyB,KA9CzB,wBAIA,0CACA,SAAkB,iBAAiB,EAEnC,GACA,gDACA,KAAyB,IAAN,GAAM,MAA4B,GAAM,CAE3D,SAAkB,qBAAqB,EAEvC,IA8BuB,qBAAvB,EA9BA,IA8BuB,OA9BvB,OACA,gBACA,yEACA,2CACA,kEAEA,IADA,sFACA,kEACA,KAA+B,EAA/B,OAA+B,MAAgB,EAC/C,GACA,KAA2B,aAAiC,EAE5D,MAAwB,qBAA8B,CACtD,CACA,gBACA,EAoDA,mDAAiE,kBACjE,gBACA,kBACA,CAEA,cACA,gBACA,CASA,gBACA,aAAsB,oBACtB,uBAAmC,IAAO,IAC1C,YAA2B,SAE3B,SACA,CAkGA,cACA,sBACA,GACA,MACA,MACA,OACA,OACA,MACA,CAAK,WACL,EAAa,OACb,0CACA,CAEA,cACA,qBACA,CAEA,cACA,aAAsB,GAAG,CACzB,CAEA,oBAEA,oBAAoC,EADpC,0BACoC,EAAsB,CAC1D,CA0BA,gBACA,gBAA2B,SAC3B,yBACA,qCAGA,iBACA,IASA,EATA,OACA,KACA,MACA,kBACA,YAAwB,WAAgB,IACxC,wBAEA,CACA,mCAEA,MACA,KACA,YAAwB,WAAiB,IACzC,iBAIA,eACA,WACA,IAD8B,CAC9B,WAD0C,GAC1C,wBACA,CADwE,EACxE,UADoF,CACpF,kBAEA,UAAsB,IACZ,mBACV,8BAEA,yBAGA,wBACA,YAAwB,WAAiB,IACzC,gBACA,uCAIA,QACA,8BC7hBA,MAAc,EAAQ,IAAW,EAEjC,WAFqB,OAErB,gBACA,gBAEA,aAEA,QADA,KACA,IAAoB,MAAS,IAC7B,yDAGA,QACA,CAAC,GAED,cACA,kBACA,cACA,gBAEA,SAGA,QAFA,KAEA,IAA4B,WAAgB,IAC5C,eACA,YAIA,gBACA,CACA,CACA,EAEA,gBAEA,QADA,qBAAkD,gBAAkB,GACpE,IAAoB,WAAmB,IACvC,eACA,YAIA,QACA,EAoNA,WACA,gBACA,OAxJA,cACA,2CAEA,OADA,UACA,CACA,CAAK,GACL,EAoJA,QAlBA,cACA,oBACA,EAiBA,QAvDA,YAIA,QAHA,IAAmB,KAAO,IAAU,UAAa,EACjD,KAEA,IAAoB,WAAkB,IAKtC,QAJA,OACA,gBAEA,iBACA,IAAwB,WAAiB,KACzC,WACA,OACA,kDACA,QAA6B,aAAqB,EAClD,UAEA,CAKA,OAFA,KAEA,CACA,EAkCA,OApJA,gBACA,2BACA,oBAEA,4BAAiD,EAAE,cAGnD,IACA,4BACA,CAAM,SACN,QACA,CACA,EAyIA,OAnIA,oBAGA,gBACA,SAGA,QAOA,GANA,mBACA,oCACM,oBACN,cAGA,iBACA,qCAAkD,EAAE,gBACpD,4CACA,CAAS,EAIT,QADA,KACA,IAAoB,WAAmB,GAzBvC,KAyBuC,CAIvC,QAHA,YA1BA,KA0BA,YA1BA,MA0BA,EACA,KAEA,IAAwB,WAAoB,KAC5C,sBACA,GACA,QACA,QACA,QACA,SACA,cACA,cACA,eACA,gCACA,CACA,wBACA,QACA,CAEA,UACA,iBACA,QACA,CAEA,WACA,wBACA,YACA,QACA,CAEA,sBACA,yBACA,eACA,YACA,QACA,CAEA,KACA,4CAEA,yBACA,gBACA,eACA,YAGA,aACA,CAEA,QACA,EA4DA,SA9BA,kBACA,yBAIA,oEACA,EAyBA,SAnCA,YACA,2DACA,EAkCA,SApBA,cACA,SAEA,QADA,KACA,IAAwB,WAAgB,KACxC,gBAEA,QACA,CACA,WACA,EAYA,MA5NA,kBAEA,MACA,SAGA,6CACA,QACA,eACU,0BAQV,WANA,0CACA,8BAEA,UAMA,QACA,CAEA,0BACA,oBAGA,cAKA,CAJA,aACA,WAGA,aACA,wBACA,gBACA,WACA,6CACA,cAEA,SAEA,EAAc,IACd,MAEA,CAAS,EACT,GAGA,oCACA,WAOA,OALA,YACA,iBAEA,OAEA,CACA,CAAK,GACL,CAmKA,yBCxQA,2FCAA,4CCAA,4CCAA,qFCAA,6CCAA,gDCCA,IAFA,EAEA,EAAc,EAAQ,IAAiB,EAEvC,EAAa,EAAQ,IAAW,EAChC,CAHqB,CAGJ,EAAQ,IAAgB,EACzC,CAFoB,CAEF,EAAQ,IAAiB,EAC3C,CAFwB,CAEF,EAAQ,IAAe,EAC7C,CAFyB,CAEN,EAAQ,IAAkB,EAC7C,CAF6B,CAEZ,EAAQ,IAAgB,EACzC,CAF0B,CAEV,EAAQ,IAAe,EAEvC,CAHwB,CAGd,EAAQ,IAAqB,EACvC,CAHuB,CAGX,EAAQ,IAAuB,EAC3C,CAFiB,CAEP,EAAQ,IAAqB,EACvC,CAFmB,CAET,EAAQ,IAAqB,EACvC,CAFiB,CAEP,EAAQ,IAAqB,EACvC,CAFiB,CAEL,EAAQ,IAAuB,EAC3C,CAFiB,CAEN,EAAQ,IAAsB,EAEzC,CAHmB,CAGnB,SAFkB,EAKlB,YACA,IACA,wBAAkC,2BAA8C,IAChF,CAAG,UACH,EAEA,EAAY,EAAQ,IAAM,EAC1B,EAAsB,EAAQ,IAAoB,EAElD,CAHmB,CAGnB,SAF6B,EAG7B,WACA,EACA,IACA,WACA,IAGA,OADA,iBACA,CADqB,CAEjB,SACJ,IAEA,iCACK,SACL,QACA,CACA,CACA,CAAE,GACF,EAEA,EAAiB,EAAQ,IAAa,IAEtC,EAAe,EAAQ,IAAW,CAFV,CAGxB,EAAiB,EAAQ,IAAiC,EAC1D,CAFsB,CAEJ,EAAQ,IAAkC,EAE5D,CAHwB,CAGX,EAAQ,IAAuC,EAC5D,CAHyB,CAGb,EAAQ,IAAsC,EAE1D,CAHoB,CAGpB,GAEA,MAJmB,SAInB,qCAEA,GACA,eACA,uEACA,gBACA,8DACA,2DACA,qCACA,oBACA,qBACA,6BACA,6BACA,kDACA,+CACA,oEACA,uEACA,oBACA,qDACA,cACA,wBACA,0CACA,wBACA,0CACA,YACA,cACA,gBACA,iEACA,iEACA,iEACA,yFACA,eACA,wBACA,wDACA,2DACA,2DACA,sBACA,gBACA,yDACA,sCACA,sCACA,yFACA,cACA,kBACA,aACA,sCACA,0BACA,sBACA,kDACA,4CACA,iBACA,qBACA,kDACA,kBACA,sCACA,yFACA,gFACA,kBACA,4DACA,sBACA,kBACA,qBACA,iBACA,gBACA,2DACA,gFACA,8DACA,8DACA,eACA,kDACA,kDACA,kDAEA,8BACA,+BACA,4BACA,4BACA,eACA,iBACA,eACA,eACA,eACA,iBACA,gBACA,4BACA,EAEA,KACA,IACA,WACG,CADW,KACX,GAEH,aACA,yBACA,CAGA,oBACA,MACA,yBACA,yBAAqD,QAClD,6BACH,oBAAgD,QAC7C,kCACH,0BAAsD,QACnD,2BACH,mCACA,IACA,eAEA,EAAG,uCACH,2BACA,OACA,kBAEA,CAIA,OAFA,OAEA,CACA,EAEA,GACA,eACA,qDACA,yCACA,uDACA,uDACA,iDACA,qDACA,yDACA,0DACA,+EACA,6CACA,+CACA,uCACA,yCACA,iDACA,uDACA,uDACA,+CACA,gDACA,qEACA,iDACA,mDACA,mDACA,+BACA,uCACA,qCACA,2CACA,2CACA,wDACA,sDACA,6CACA,qDACA,kCACA,wCACA,0CACA,mDACA,2DACA,2CACA,qCACA,iEACA,2CACA,2CACA,qDACA,mDACA,iDACA,mDACA,iEACA,qDACA,qDACA,+CACA,6CACA,8CAGA,EAAW,EAAQ,IAAe,EAClC,EAAa,EAAQ,IAAQ,EAC7B,CAFkB,CAElB,SADoB,MACpB,kBACA,mCACA,qCACA,mCACA,kCAGA,uGACA,aACA,CAD+B,CAC/B,YACA,eACA,UACA,oBACA,8DACG,oBACH,8DAEA,SAIA,OAHA,wBACA,8BACA,CAAE,EACF,CACA,EAGA,gBACA,IACA,EADA,IAOA,GALA,QAEA,OADA,QACA,SAGA,QACA,WAIA,GAHA,OACA,SAEA,eACA,mFAGA,OACA,QACA,OACA,OACA,CACA,CAEA,8CACA,EAEA,wBACA,oCACA,yDAEA,2CACA,yDAGA,6BACA,kGAEA,WACA,qBAEA,iBACA,SACA,UACA,KAEA,UACA,IACA,OACA,iBAGA,iBAA+B,WAAkB,MACjD,WACA,WACA,UACA,GACA,CACA,2BACA,4BAEA,MAEA,oEASA,GAPA,sBACA,OAGA,SAGA,IAFA,aAGA,YACI,YACJ,cACA,MACA,mFAEA,MACA,CACA,qBACA,aAWA,EAVA,SASA,sCACA,MAEA,IAEA,EAAK,IACL,SACA,OAGA,OACA,QAEA,CACA,CACA,QACA,+BCvXA,MAAmB,EAAQ,IAAe,EAC1C,EAAgB,EAAQ,IAAY,EACpC,CAF0B,CAEZ,EAAQ,GAAgB,EACtC,EAAwB,EAAQ,IAAkB,EAElD,EAHqB,EAGI,IAAgB,EACzC,CAH+B,CAG/B,SADwB,KACxB,IAGA,gCAEA,gCAEA,gCAEA,mCAGA,YAC2C,WAS3C,IAJiD,EACf,EAGlC,GACA,mBACA,aACA,kDAEA,CAAI,CACJ,mBACA,oDACA,MACA,aACA,MACM,MACN,EACA,mBAGA,QACA,CAAI,CACJ,uBACA,kDACA,EACA,OAGA,WACA,CAAI,CACJ,uBACA,kDACA,EACA,OAGA,aACA,CAAI,CACJ,kBACA,kDACA,GACA,UAEA,UACM,IACN,GACA,QAGwC,WAExC,CACA,EAGA,QACA,EACA,wBChFA,2DCAA,gCACA,KACA,IACA,IAAoB,MAAS,QAAU,CACvC,CAAG,SAEH,IACA,CAGA,mCCXA,+BACA,SAEA,GACA,kBACA,iBACA,EAEA,WACA,kBACA,YACA,oBACA,sBACA,CAAS,CACT,oBACA,gBACA,CACA,CAAK,CACL,kBACA,yCClBA,8CCEA,UAHc,EAAQ,IAAiB,EAGvC,WAHqB,GAGrB,gDEHA,IAGA,EAHA,EAAe,EAAQ,IAAyB,EAChD,EAAW,EAAQ,IAAM,EAGzB,CAJsB,EAItB,CAEA,EAAuE,KALrD,OAKqD,kBAAtC,CAC/B,SACF,sEACA,OAEA,CAGA,iCAA0G,YAA/B,CAE3E,SACA,mBAGA,EAN0G,OAM1G,6BACA,WACA,sBACgC,YAEhC,wBACA,+BC1BA,MAAqB,EAAQ,IAAc,EAC3C,EAAY,EAAQ,GAAS,EAC7B,EAF4B,EAEN,IAAW,EACjC,WADqB,OACrB,gBAEA,GACA,qBACA,aACA,CAAK,CACL,cACA,sBACA,kBACA,CAAK,CACL,mBACA,QACA,CACA,EAEA,gBACA,uBACA,gBACA,qBACA,EAEA,6BAEA,YACA,GACA,kBACA,aACA,oBACA,sBACA,gBACA,mBACA,kBACA,cACA,UACA,mBACA,iBACA,oBACA,cACA,SACA,0BAEA,WACA,0BACA,gBACA,CAAK,CACL,aACA,qBACA,EAUA,KAEA,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAOA,IALA,IA9BA,EAsFA,EAxDA,IAEA,IACA,IACA,KACA,4BAEA,eAEA,GADA,KACA,WACA,SACA,6CAEA,IAGA,KAHiC,CAGjC,cACA,KAEA,CAeA,GAbA,qBACA,SACM,kBACN,OACM,mBACN,mCACA,kBACA,KAEA,CACA,EAAS,EAGT,UACA,KACA,wCAGA,IACA,CAEA,aAvEA,OADA,EAwEA,IAtEA,oBACA,qBACA,oBACA,oBAmEA,qBACA,EAEA,GADA,8BACA,mCAEA,wBAGA,SAEA,cACA,SAIA,qBAEA,MACA,oBAEA,IAAqB,0CAAgE,OAC/E,QACN,QACM,CACN,qBACA,eACA,CAEA,iDAEA,iCAEA,yBACA,cAGA,YAAoB,WAAoB,KACxC,WACA,0CACA,QACA,KAEA,iBAIA,oDACA,OACA,8BACA,sBAEA,WACA,UACA,WACA,MACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,4BACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEA,CAEA,QACA,EAEA,cACA,MACA,SAGA,qEACA,0FAGA,mEACA,yFAGA,sEACA,iDAGA,IAmBA,EAnBA,uBACA,qEACA,qFAGA,gBACA,sBACA,kCACA,mDAEA,WAEA,sBAEA,WAcA,GAbA,4CACA,aAKA,EADA,mBACA,cACM,cACN,6BAEA,cAGA,yDACA,iEAGA,6EAEA,OACA,oFACA,YACA,8FACA,cACA,UACA,wFACA,kCACA,uDACA,oDACA,wFACA,yDACA,4FACA,SACA,SACA,YACA,iFACA,gEACA,2CACA,oGAEA,CAEA,yBACA,IAGA,EACA,EAJA,IACA,MAKA,6BAEA,KADA,UACA,MACM,aAEN,GADA,UAIA,SAEA,gCACA,SAGA,uBACA,gCAEA,GACA,mBAGA,QACA,eAIA,QADA,MACA,IAAoB,WAAoB,KACxC,WACA,MAEA,wBAGA,MACA,EACA,EACA,EACA,EACA,mBACA,qBACA,YACA,kBACA,wBACA,SACA,OACA,YACA,gBACA,SACA,YACA,mBACA,UACA,GAEA,CA5BA,IA8BA,sBACA,+BAYA,OAVA,oBACA,yBAEA,0BAGA,sBAIA,iBACA,yBCnWA,8DCEA,MAAmB,EAAQ,IAAe,EAE1C,EAAoB,EAAQ,IAAyB,EAGrD,CAL0B,CAK1B,SAH2B,0BAG3B,EAGA,wBAGA,MAA4E,eAC5E,MAD4B,MAC5B,gCACA,EAAyC,KAEzC,CACA,EAL4E,eAE1C,OAAO,OCbzC,MAAgB,EAAQ,IAAa,EACrC,EAAY,EAAQ,IAAS,EAG7B,CAJuB,CAIvB,SACA,QAHc,EAAQ,IAAW,EAIjC,QACA,GALqB,OAKrB,CACA,yBCVA,mECEA,MAAW,EAAQ,IAAe,EAClC,EAAiB,EAAQ,IAAgB,EAEzC,CAHkB,CAGN,EAAQ,IAAgB,EACpC,CAHwB,CAGL,EAAQ,EAAe,CAG1C,IAJmB,MAInB,IAH0B,MAG1B,GACA,uCACA,sCAEA,eACA,yBCXA,yDCAA,8HwJHA,ggEtJCA,OACA,SACA,iBACA,gBACA,aACA,oBACA,UACA,OACA,gBACA,gBACA,oBACA,YACA,CACO,cACP,UACA,oBACA,oDACA,CAKO,gBACP,OAAY,WACM,IAClB,wDACA,sCACA,CAAK,EAIL,oBACA,mBACA,CAOO,YACP,OACA,WACA,UACA,mBACA,kBACA,EACA,WACA,gDACA,UACA,aAA0C,YAAY,WACtD,iBASA,8CARA,GACA,sBACA,EACA,CAAa,CAEb,EACA,CAAC,GAiBM,cACP,mDACA,SAEA,YACA,iBAEA,wBACA,6BASA,OAJA,YACA,qBACA,iCAAmD,aAA4B,6GAE/E,EACA,CAIO,cACP,OACA,UACA,UAAmB,CACnB,WAAoB,CACpB,YACA,EACA,eACA,oBACA,sBACA,gCAEA,SACA,sBAA2C,UAC3C,2CAaA,GAZA,UACA,4BAAsD,aAAqB,GAAG,YAE9E,UACA,8BAEA,kBACA,gDAEA,iBACA,8CAEA,iBACA,+BACA,kEAEA,6CAcA,GAZA,cACA,2CAEA,uCACA,mDAEA,6BACA,+BAEA,QACA,gBAEA,iBACA,YACA,4DAEA,sCACA,+FAGA,iCAEA,qBACA,gCAEA,aACA,gBAEA,CACA,CACA,QACA,CA0BO,cACP,sBACA,0CAEA,qCACA,YACA,YAEA,GACK,EAAI,CACT,CA0BO,uBACP,EAEA,WACA,gBACA,SACA,CAAa,GACb,CAAS,KACT,gBACA,SACA,CAAa,GACb,CAAS,EAET,CACA,CAYO,oBACP,uCACA,wBAAuC,EAAQ,GAE/C,CAFmD,OAEnD,uBACA,CA+BO,kBACP,wBACA,cACA,cAGA,eAA+B,GAAM,qBAGrC,QACA,CASO,cACP,UACA,oCACA,mBAIA,OADA,YACA,CACA,CAiBA,uBACA,uBACA,6CAEA,CACA,CAUO,qBACP,GAGA,6BACA,CACO,qBACP,iBACA,aAEA,SACA,CC3VO,QAEP,gBACA,6CACA,CACA,6BACA,2CACA,CAEA,0BACA,sCAEA,OADA,4BACA,CACA,CACA,CAEA,uDACA,gCACO,SACP,iBACA,mBACA,eACA,CACA,gBACA,uBACA,CACA,aACA,qBAEA,iBACA,8CACA,CACA,YACA,wCACA,CACA,SACA,sCACA,CACA,CCrCO,gBAA8B,EACrC,QAD+C,IAC/C,GAGA,GAFA,QAEA,IACA,qBACA,8HAGA,mBAKA,2BAGA,6CAKA,2CAEA,CACA,mCACA,gBAEA,IADA,EACA,sBACA,kBACA,OACA,EAA2B,EAAU,mBACrC,CAAiB,GACjB,CAAa,EAEb,qBADA,OACA,iBACA,GACA,eAEA,CAAa,CACb,CACA,CACA,oCACA,sBAEA,0BACA,kBACA,OACA,QAA4B,EAAU,mBACtC,CAAa,IACb,IACA,+CAAwE,KAAW,gBAAsB,EACzG,CACA,SAIA,yBACA,MAA0B,EAAU,kBAGpC,QAEA,QACA,CACA,GACA,eAEA,CACA,CACA,CAEA,gBACA,aACA,CACA,mCAEA,mBADA,WACqC,eAAwC,KAAK,EAAK,EACvF,UAKA,sCACA,mBAMA,aALA,kCACA,SACA,QFyQA,CEzQqB,MFyQrB,QEzQyC,GFyQzC,GEzQyC,CFyQzC,SACA,UEzQA,2CACA,CAAS,IAET,CACA,CACO,gBAAsC,EAC7C,eACA,CAF+D,IAE/D,kDACA,WACA,CACA,iBACA,iBAEA,YAQA,OAFA,IAEA,eAEA,SACA,uBACA,CACA,oCAGA,SACA,gBACA,kCACA,2KAEA,cAEA,QACA,CACA,CCpIO,QASP,0BACA,oDACA,CAYA,+BACA,yDACA,CAIA,sBACA,6CACA,CACA,CAQO,sBACP,CCvCO,gBAAmC,EAC1C,YADwD,CACxD,EACA,QAIA,mCAGA,0BACA,UAAkB,EAAoC,gEACtD,CAEA,qCACA,sBACA,uDACA,YACA,MAAoB,eAAiB,CAC5B,cAKT,iBAJA,oDAKA,kBACA,YAAwB,WAA2B,IACnD,aAEA,iBACA,CAEA,4BACA,kEACA,CACA,CAGA,iBACA,YAAgB,WAA2B,IAC3C,mCCvCO,SACP,cACA,mBACA,gBACA,CAIA,WACA,wCACA,CAIA,QACA,iEACA,yBAEA,MADA,kBACA,YACA,CAAS,CACT,CAIA,mBAEA,uBACA,SAEA,eACA,IACA,YAAwB,IAAS,IACjC,mCAEA,YACA,CAIA,gBACA,6CACA,CAKA,iBACA,6CACA,CAKA,wBACA,oDACA,CAQA,yBACA,WAAmB,EAAe,EAClC,CAIA,UALkC,eAKlC,CACA,uDACA,CAIA,2BACA,wDACA,CAIA,8BACA,WAAmB,EAAoB,EACvC,CACA,eAFuC,cAEvC,CACA,2DACA,CACA,CCxFA,sBACA,iBACA,SACA,WACA,CACA,CAEO,QACP,cACA,iCACA,4BACA,CACA,QACA,UACA,SACA,EAEA,OADA,8BACA,sCACA,CACA,oBACA,kCAEA,OADA,+BACA,yCACA,CACA,UACA,UACA,SACA,EAEA,OADA,8BACA,uCACA,OACA,CAAS,CACT,CACA,UACA,iDACA,CACA,CCpCO,gBAAmC,EAE1C,WACA,IAH2D,GAG3D,qBACA,CAEA,gBACA,WAAmB,CACnB,CAEA,WAHgC,GAGhC,GACA,yCACA,iMAEA,yBACA,CAEA,uBACA,wIACA,CAEA,0BACA,oCACA,CAEA,2BACA,iJACA,CAEA,8BACA,wCACA,CACA,CCnCO,UACP,eACA,iBACA,eACA,6BACA,eACA,iBACA,eACA,4BACA,eACA,wBACA,eACA,yBACA,eACA,qBACA,eACA,SACA,gBACA,CACA,EAEO,KACP,qCAGA,UAMA,mBADA,OAEA,SAEA,IAMO,uBACP,gBAAwB,SACxB,MACA,iBACA,mCACA,WACA,oBACA,iBACA,uBACA,mBACA,qBACA,uBACA,2BACA,6BACA,sCACA,gCACA,qBACA,iCACA,qCACA,qCACA,+CACA,iCACA,oBACA,CACA,CAIA,YAMO,mBACP,gBAAwB,EACxB,0BACA,CACA,CAKO,kBACP,gBAAwB,EACxB,oCACA,CACA,CAOO,kBACP,gBAAwB,EACxB,yBACA,CACA,CAKO,kBACP,gBAAwB,EACxB,oCACA,CACA,CAKO,kBACP,gBAAwB,EACxB,gCACA,CACA,CAMO,kBACP,gBAAwB,EACxB,+BACA,CACA,CAMO,kBACP,gBAAwB,EACxB,gCACA,CACA,CAKO,kBACP,oBAAyC,EACzC,4CACA,cACA,cACA,CACA,CAKO,kBACP,gBAAwB,EACxB,iCACA,CACA,CAOO,kBACP,gBAAwB,EACxB,kCACA,CACA,CAIO,mBACP,gBAAwB,EACxB,6BACA,CACA,CAEO,mBACP,gBAAmC,EACnC,uCACA,CACA,CCnLO,SACP,iBACA,eACA,gCACA,CACA,iCAIA,4BACA,qDACA,+CACA,wDAEA,0BACA,iBACA,yBACA,OAAe,EAAa,CAC5B,UAD4B,EAC5B,oBACA,4BACA,qCACA,gBACA,YACA,SACA,iCACA,UACA,wCACA,kBACA,CAAS,CACT,CACA,iBACA,uBAYA,iCACA,WACA,qBAMA,aALA,KACA,qDACA,yCACA,6DACA,GAMA,OADA,sCACA,SACA,CACA,CAMA,8BACA,WACA,qBACA,wBACA,oBACA,iCACA,yCACA,EACA,SACA,SACA,YACA,KA2BA,MAxBA,0BACA,UACA,aACA,4BACA,EAEA,kBACA,qBACA,oBACA,QACA,IAAkC,EAAyB,SAE3D,QACA,IAAkC,EAAqB,SAEvD,QACA,EAHuD,EAGrB,EAAoB,SAEtD,SAFsD,EAGT,SAGf,EAAe,QAG7C,CACA,IAJ6C,GAI7C,CACA,CAAa,KACb,UAA0B,EAAc,CACxC,WADwC,yCAExC,YACA,0BACiB,CACjB,CAAa,EACb,SACA,0CAEA,yBACA,sCACA,wCACA,cACA,YACA,OACA,CAAiB,EACjB,SACA,CAAa,cACb,CACA,CACA,0CACA,yDAAkE,4BAA6C,GAAgB,WAAa,EAG5I,mCACA,MACA,OACY,EAAU,kDAItB,UAIA,GAKA,oDAGA,gDAIA,yBAQA,wBAIA,CACA,4BACA,iDAKA,6BAJA,wCAcA,OAPA,wBAEA,gBAEA,wBApLA,IAqLA,kBAEA,KACA,CAEA,0BAAuC,EACvC,qCACA,sCACA,oBACA,mCACA,CACA,8BAEA,oCACA,2BAAkD,wCAAwC,EAE1F,YACA,6BACA,UACA,MAEA,aACA,gBACA,WAGA,WACA,CACA,0BAAmB,iJAAoJ,EACvK,OACA,0BACA,iBACA,yCACA,+BACA,uDACA,mBACA,mBACA,mBACA,oDACA,EAaA,kCAWA,MANA,SACA,GACgB,EAAW,GAAI,GAAQ,GAAZ,uEAAY,GAEvC,uBAEA,cAA6B,EAAa,GTzC1C,QSyC0C,KTzC1C,OS2CwB,ETxCxB,YSwCwB,GTxCxB,eACA,EASA,EACA,WACA,4DACA,UAZA,MACA,GACK,EAAI,ESqCe,EACxB,CACA,uBACA,kDACA,wBACA,kCACA,GACA,gBAAyB,GAAS,eAAe,GAAgB,EAAE,EAAQ,QAC3E,CACA,sBACA,uCACA,0CAEA,uBACA,qBAFA,wCAGA,CAAa,CAEb,CACA,6BACA,yCACA,0EACgB,EAAW,mEAE3B,CACA,OACA,aACA,qBACA,CACA,gBACA,YAEA,wCACA,CAEA,CACA,qBAgDA,OA/CA,wBACA,EACA,IACA,sBACA,eACA,GACA,0BACA,mHAEA,2BAEA,EAAqC,EAAe,GACpD,UADoD,CACpD,kBAAwE,SACxE,EAA0C,EAAkB,GAC5D,YAEA,CAH4D,CAG5D,gBACA,GACA,gBACA,cACA,WACA,YAAiC,CACjC,gBACA,UACA,YACA,wBACA,WAAgC,CAChC,sBAEA,CACA,SACA,KACA,MACA,CASA,YAAoB,cAAoB,EAExC,kBACA,6DAA+F,mCAA8C,SAX7I,cACA,EACA,KAGA,IAEA,EAKA,CAAS,CAET,CACA,wCACA,MACA,EACA,yDACA,MAAwB,EAAU,GAClC,KADkC,EAClC,QACA,kDAEA,YAEA,kBACA,oBACA,sCACA,sBACA,mBACA,oCACA,GACA,yCACA,sCACA,OACA,SACA,wBAAyC,IACzC,OACA,6CACA,EACA,KACA,UACA,mBACA,0BACA,yEACA,aACA,EAAqC,EAAa,CAClD,UADkD,EAClD,EACA,QAA6B,EAAuB,qCACf,EAAuB,sBAC5D,SACA,OACA,oBACA,CAAiB,EACjB,OACA,2CAAoF,EACpF,wCACA,EACA,SACA,0BACA,KTtBO,ESsBP,iBTpBA,OADA,OSqB8F,MTrB9F,CADO,ESsB8G,+BTrBrH,QSqBqH,QAErH,mCACA,yCAGA,qCAEA,CAAiB,EACjB,SACA,4BACA,gBAIA,MAA4C,EAAqB,CACjE,QAFA,UACiE,IADjE,GAA4E,EAAU,mBAGtF,iDAAmF,EAAQ,KAC3F,sCACA,QACA,CAAyB,GAGzB,CAAa,EACb,UACA,UAA0B,EAAW,CACrC,QADqC,qCAErC,WACA,CAAiB,CACjB,CAAa,CACb,EACA,UACA,KACA,YAEA,IACA,oCACA,0CACA,qBACA,oBACA,mBACA,oCACA,uBACA,aACA,kBACA,SACA,8BACA,gCACA,qEACA,qEACA,SACA,CAAiB,EACjB,QACA,CAAa,CACb,EACA,KACA,uBAEA,CACA,MAOA,OALA,EADA,QACA,ETpGA,KSoGyC,STpGzC,CSoGiE,ETpGjE,GSoGiE,GAG/B,EAAyB,IAHM,CAGK,IAGtE,CACA,CACA,CC/bA,SACA,EDyb2D,UCzb3D,SACA,aACA,mBACA,mBAA8B,qBAC9B,mBACA,YACA,qBACA,CACA,iBACA,QACA,QACA,gCACA,yFAEA,2BACA,6BACA,QACA,2BACA,WACA,YAEA,OADA,cACA,OAAqB,UACrB,CACA,eAEA,aACA,qCACA,6BACA,sBACA,CACA,OAAiB,qBACjB,CAEA,eACA,4BACA,CACA,cACA,2CACA,CACA,OAMA,oCACA,wCAEA,iBACA,yBAEA,OADA,sCACA,CACA,EAAS,GAET,OADA,mCACA,CACA,CACA,CACA,oBACA,eACA,2BACA,WAgJA,KACA,0BACA,YACA,UACA,MACA,oFAEA,QACA,EAxJA,KACA,oEACA,sCACA,CAAS,CACT,CACA,CACA,oBACA,eACA,gBACA,uHAEA,oEACA,iBACS,CACT,CACA,CACA,SACA,qBACA,mCAEA,CADA,SACA,uBACA,CAAS,GACT,2BACA,UACA,mBACA,CAAS,GACT,mBACA,YACA,qBACA,CACA,iBACA,6BACA,MACA,WACA,sBACA,4DAA6E,EAG7E,OAFA,kDACA,oEACA,yBAEA,aACA,CACA,8CACA,WACA,OAAyB,sBACzB,CACA,4BACA,MACA,OAAqB,sBAErB,sBACA,OAEA,CAAiB,sBADjB,CAAqB,sBAErB,CACA,CACO,mBACP,MAAoB,EAAU,0BAC9B,kCACA,oBAEA,gCACA,oBAEA,gCACA,oBAEA,IACA,EACA,WAoFA,EAcA,EAjGA,OAmFA,EAnFA,qBAoFA,eAuCA,IAtCA,+BACA,WApCA,GACA,gBACA,OAEA,WACA,wBACA,4FAAoG,WAAW,SAAc,GAG7H,gBACA,SAEA,cACA,0GAAkH,MAAM,EAAO,GAM/H,qBAEA,EADA,KAEA,CACA,EAaA,GACA,EA1DA,YACA,cACA,YAEA,WACA,wBACA,6FAAqG,WAAW,SAAc,GAE9H,QACA,EAiDA,GACA,cACA,uDAAmE,WAAW,EAAK,GAKnF,OAAe,GA6Bf,EAhCA,EAgCA,EA9BA,EA+BA,kBA9B4C,EAmD5C,IACA,KArBA,cACA,sBACA,IAGA,cACA,uBAIA,MACA,CAAa,UACb,OACA,GAA6C,qBAA8B,EAG3E,YAGA,GAGA,QACA,CAAK,GAtDuC,EAC5C,GA9FA,GAgGA,EAhGA,EAiGA,cACA,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DqD,GAC3B,EAFmC,CAG7D,YAAqB,CAD8B,CAEnD,CAAK,EACL,KAAU,GAAiB,QAC3B,EAHyC,IAEd,YACA,GAC3B,OAAgB,EAChB,CAAK,CACL,CAAC,CAF2B,CADsB,GC3OlD,iBAEA,UACA,GnIXO,mBmIWqB,GAI5B,OAJsC,CAItC,8BACA,IACA,gBACA,aACA,aACA,oBACA,YACA,aACA,UACA,OACA,OACA,WACA,YACA,UACA,gBACA,gBACA,CACA,UAAoD,GAAa,EAAS,GAAc,KAAvB,MAAuB,mBC/BjF,GDgCA,YChC2B,CDgC3B,IASP,iBAAoC,EACpC,wBACA,kBAEA,iCACA,2BACA,uCACA,8CACA,cACA,gBACA,WACA,CAAS,EACT,+BACA,6CACA,iDACA,0DACA,uBACA,YACA,gBACA,aApDA,MAqDA,6BACA,YACA,yBACA,QAAqB,EAAe,oBArDpC,KAsDA,kBAA+B,EAAe,2CAC9C,QACA,yBACA,GACA,gDACA,mDACA,OACA,oCACA,mCACA,EACA,sBACA,8BAKA,4BAEA,WACA,4BAEA,sBACA,0CACA,YAAsB,EACtB,mBAD4B,KAC5B,CACA,4BACA,uCACA,4BAGA,qCAoQA,OAlUA,2BACA,4BAAwC,2FAA6G,CjJsQrJ,CiJtQuJ,YjJsQvJ,eACA,GACA,CACA,IiJzQ0L,SjJyQ1L,gBACA,4BiJzQA,iBAA4B,GAC5B,WAD0C,CACnB,EACvB,aAAwB,EACxB,QADkC,YAClC,CAAgC,EAChC,gBADkD,CACtB,EAC5B,WAAsB,CADoB,QpIvCnC,GACP,EoIuCoC,EpIvCpC,GACA,sBACA,eACA,4BACA,IACA,mBACA,+DAEA,6DACA,CACA,SAKA,MAJA,aAAiC,GACjC,YACA,qBAFqE,oDAErE,EAEA,CACA,CAIA,OAHA,wBACA,8CACA,aAEA,CAAS,CACT,uCACA,mBACA,+DAMA,OAJA,yEACA,wBACA,8CACA,aAEA,CAAS,CAYT,qCACA,WACA,eACA,gEACA,gCACA,CAAS,CACT,gDACA,WACA,eACA,2EACA,gCACA,CAAS,EAET,GACA,qBACA,0BACA,IAAoB,iEAA+E,4BACnG,eAEA,GADA,UACA,+BAEA,OADA,mBACA,EACA,CAAS,CACT,qCACA,IAAoB,iEAA+E,4BACnG,eACA,SACA,kDACA,yBACA,CACA,EACA,gBACA,SAAkB,YAAkB,GAAG,EAAQ,CAC/C,CACA,sBAiFA,IAhFA,MACA,UAAsB,EAAgC,KACtD,yBADsD,iBAEtD,CAAa,EAEb,0BACA,2BACA,0BACA,0BACA,YACA,EAKA,oBACA,0HAEA,kBACA,UAAsB,EAAgC,KACtD,yBADsD,+BAEtD,CAAa,EAEb,8BACA,YACA,EACA,GAsDA,EAtDA,EAsDA,EAtDA,EAuDA,mBACA,KAEA,4BACA,mBAOA,MANA,YACA,gCAEA,UACA,wBAEA,CACA,CAAS,EACT,aACA,cACS,GArET,wBACA,UAAsB,EAAgC,KACtD,yBADsD,uCAEtD,CAAa,EAEb,wBACA,UAAsB,EAAgC,KACtD,yBADsD,yBAEtD,CAAa,EAEb,OACA,iBACA,gBACA,UACA,oBACA,CACA,CACA,4BACA,8DACA,qJAEA,IACA,4HACA,GACA,OACA,KACA,UAA0B,EAAgC,KAC1D,yBAD0D,kRAI1D,EACA,KACA,CACA,CAAiB,CAEjB,WAAsB,EAAgC,KACtD,yBADsD,qRAKtD,EACA,KACA,CACA,CAAa,CACb,CACA,oEACA,YACA,UAAsB,EAAgC,KACtD,yBADsD,qBAEtD,CAAa,EAEb,QACA,CAmBA,WAKA,aAIA,OAHA,GACA,oCAEA,CACA,CACA,cACA,MACA,UAAsB,EAAW,CACjC,QADiC,sBAEjC,CAAa,EAEb,0DACA,8BACA,wBACA,KAAiC,EAAU,GAAG,UAAa,EAI3D,qCAA6C,eAAW,EACxD,SACA,iBACA,gBACA,qBAPA,GACA,KAAwB,EAAU,GAAG,EAAO,GAAG,EAAU,CAMzD,CAAkC,CAClC,CAEA,OADA,cACA,CACA,EoIzKoC,GAyDpC,SAAoB,EACpB,mBAD0B,GAC1B,wBAQA,gDAKA,sDASA,6BACA,6BACA,aAEA,gBACA,QACA,SACA,UACA,aACA,oBACA,cACA,YACA,UACA,yBACA,cACA,sBACA,oBACA,wBACA,oBACA,+CACA,CAAS,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","sources":["webpack://_N_E/../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js","webpack://_N_E/../../node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js","webpack://_N_E/../../node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js","webpack://_N_E/../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js","webpack://_N_E/../../node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/index.js","webpack://_N_E/../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/utils.js","webpack://_N_E/../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js","webpack://_N_E/../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js","webpack://_N_E/../../node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js","webpack://_N_E/../../node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js","webpack://_N_E/../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js","webpack://_N_E/../../node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js","webpack://_N_E/../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/formats.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js","webpack://_N_E/../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js","webpack://_N_E/ignored|/Users/petercowling/reception/base-shop/node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect|./util.inspect","webpack://_N_E/../../node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js","webpack://_N_E/../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/stringify.js","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/../../node_modules/.pnpm/call-bound@1.0.4/node_modules/call-bound/index.js","webpack://_N_E/../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/index.js","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js","webpack://_N_E/../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js","webpack://_N_E/../../node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js","webpack://_N_E/../../packages/platform-core/cartCookie.ts","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/utils.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/net/HttpClient.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/net/FetchHttpClient.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/crypto/CryptoProvider.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/crypto/SubtleCryptoProvider.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/platform/PlatformFunctions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/StripeEmitter.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/platform/WebPlatformFunctions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/Error.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/RequestSender.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/autoPagination.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/StripeMethod.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/StripeResource.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/Webhooks.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/apiVersion.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/ResourceNamespace.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/FinancialConnections/Accounts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Entitlements/ActiveEntitlements.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/Alerts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Issuing/Authorizations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Authorizations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Tax/Calculations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Cardholders.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Issuing/Cards.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Cards.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/BillingPortal/Configurations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Terminal/Configurations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/ConfirmationTokens.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Terminal/ConnectionTokens.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/CreditBalanceSummary.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/CreditBalanceTransactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/CreditGrants.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/CreditReversals.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Customers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/DebitReversals.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Disputes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Radar/EarlyFraudWarnings.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Core/EventDestinations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Core/Events.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Entitlements/Features.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/FinancialAccounts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Treasury/InboundTransfers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/InboundTransfers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Terminal/Locations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/MeterEventAdjustments.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Billing/MeterEventAdjustments.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Billing/MeterEventSession.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Billing/MeterEventStream.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/MeterEvents.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/V2/Billing/MeterEvents.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Billing/Meters.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Climate/Orders.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundPayments.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/OutboundPayments.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundTransfers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/OutboundTransfers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Issuing/PersonalizationDesigns.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/PersonalizationDesigns.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/PhysicalBundles.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Climate/Products.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Terminal/Readers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Terminal/Readers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedCredits.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/ReceivedCredits.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedDebits.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/ReceivedDebits.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Refunds.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Tax/Registrations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Reporting/ReportRuns.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Reporting/ReportTypes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Forwarding/Requests.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Sigma/ScheduledQueryRuns.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Apps/Secrets.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/BillingPortal/Sessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Checkout/Sessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/FinancialConnections/Sessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Tax/Settings.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Climate/Suppliers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/TestClocks.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Tokens.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/TransactionEntries.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TestHelpers/Issuing/Transactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/FinancialConnections/Transactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Issuing/Transactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Tax/Transactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Treasury/Transactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Radar/ValueListItems.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Radar/ValueLists.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Identity/VerificationReports.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Identity/VerificationSessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Accounts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/AccountLinks.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/AccountSessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/ApplePayDomains.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/ApplicationFees.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Balance.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/BalanceTransactions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Charges.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/ConfirmationTokens.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/CountrySpecs.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Coupons.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/CreditNotes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/CustomerSessions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Customers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Disputes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/EphemeralKeys.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Events.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/ExchangeRates.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/FileLinks.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/multipart.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Files.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/InvoiceItems.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/InvoicePayments.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/InvoiceRenderingTemplates.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Invoices.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Mandates.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/OAuth.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PaymentIntents.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PaymentLinks.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PaymentMethodConfigurations.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PaymentMethodDomains.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PaymentMethods.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Payouts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Plans.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Prices.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Products.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/PromotionCodes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Quotes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Refunds.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Reviews.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/SetupAttempts.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/SetupIntents.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/ShippingRates.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Sources.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/SubscriptionItems.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/SubscriptionSchedules.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Subscriptions.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TaxCodes.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TaxIds.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/TaxRates.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Tokens.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Topups.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/Transfers.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources/WebhookEndpoints.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/resources.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/stripe.core.js","webpack://_N_E/../../node_modules/.pnpm/stripe@18.2.1_@types+node@20.19.1/node_modules/stripe/esm/stripe.esm.worker.js","webpack://_N_E/../../packages/lib/stripeServer.ts","webpack://_N_E/./src/app/api/checkout-session/route.ts","webpack://_N_E/./src/app/api/checkout-session/route.ts?c93c","webpack://_N_E/?8446","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js","webpack://_N_E/../../node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js","webpack://_N_E/../../node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js","webpack://_N_E/../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/parse.js","webpack://_N_E/../../node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js","webpack://_N_E/../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js","webpack://_N_E/../../node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js","webpack://_N_E/../../node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js","webpack://_N_E/../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js","webpack://_N_E/../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js","webpack://_N_E/../../node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js","webpack://_N_E/../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"],"sourcesContent":["'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n","/* (ignored) */","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","module.exports = require(\"node:buffer\");","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","module.exports = require(\"node:async_hooks\");","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","import type { CartState } from \"@/contexts/CartContext\";\n\n/* -------- constants -------- */\n\nexport const CART_COOKIE = \"CART_STATE\";\nconst MAX_AGE = 60 * 60 * 24 * 30; // 30 days\n\n/* -------- helpers -------- */\n\n/** Stringify cart → safe cookie/localStorage value */\nexport function encodeCartCookie(state: CartState): string {\n  return encodeURIComponent(JSON.stringify(state));\n}\n\n/** Parse cookie string → typed cart (never throws) */\nexport function decodeCartCookie(raw?: string | null): CartState {\n  try {\n    return raw ? (JSON.parse(decodeURIComponent(raw)) as CartState) : {};\n  } catch {\n    return {};\n  }\n}\n\n/** Builds a Set-Cookie header (used client-side via document.cookie too) */\nexport function asSetCookieHeader(value: string): string {\n  return `${CART_COOKIE}=${value}; Path=/; Max-Age=${MAX_AGE}; SameSite=Lax`;\n}\n","import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n    'authenticator',\n    'stripeContext',\n    'additionalHeaders',\n    'streaming',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function queryStringifyRequestData(data, apiMode) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n        arrayFormat: apiMode == 'v2' ? 'repeat' : 'indices',\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => {\n                const output = outputs[$1];\n                if (isValidEncodeUriComponentType(output))\n                    return encodeURIComponent(output);\n                return '';\n            });\n        };\n    };\n})();\nfunction isValidEncodeUriComponentType(value) {\n    return ['number', 'string', 'boolean'].includes(typeof value);\n}\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        host: null,\n        headers: {},\n        settings: {},\n        streaming: false,\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.authenticator = createApiKeyAuthenticator(args.pop());\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.authenticator = createApiKeyAuthenticator(params.apiKey);\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.stripeContext) {\n                if (opts.headers['Stripe-Account']) {\n                    throw new Error(\"Can't specify both stripeAccount and stripeContext.\");\n                }\n                opts.headers['Stripe-Context'] = params.stripeContext;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n            if (params.authenticator) {\n                if (params.apiKey) {\n                    throw new Error(\"Can't specify both apiKey and authenticator.\");\n                }\n                if (typeof params.authenticator !== 'function') {\n                    throw new Error('The authenticator must be a function ' +\n                        'receiving a request as the first parameter.');\n                }\n                opts.authenticator = params.authenticator;\n            }\n            if (params.additionalHeaders) {\n                opts.headers = params.additionalHeaders;\n            }\n            if (params.streaming) {\n                opts.streaming = true;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.entries(obj).forEach(([key, value]) => {\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\nexport function createApiKeyAuthenticator(apiKey) {\n    const authenticator = (request) => {\n        request.headers.Authorization = 'Bearer ' + apiKey;\n        return Promise.resolve();\n    };\n    // For testing\n    authenticator._apiKey = apiKey;\n    return authenticator;\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n/**\n * Replaces Date objects with Unix timestamps\n */\nfunction dateTimeReplacer(key, value) {\n    if (this[key] instanceof Date) {\n        return Math.floor(this[key].getTime() / 1000).toString();\n    }\n    return value;\n}\n/**\n * JSON stringifies an Object, replacing Date objects with Unix timestamps\n */\nexport function jsonStringifyRequestData(data) {\n    return JSON.stringify(data, dateTimeReplacer);\n}\n/**\n * Inspects the given path to determine if the endpoint is for v1 or v2 API\n */\nexport function getAPIMode(path) {\n    if (!path) {\n        return 'v1';\n    }\n    return path.startsWith('/v2') ? 'v2' : 'v1';\n}\nexport function parseHttpHeaderAsString(header) {\n    if (Array.isArray(header)) {\n        return header.join(', ');\n    }\n    return String(header);\n}\nexport function parseHttpHeaderAsNumber(header) {\n    const number = Array.isArray(header) ? header[0] : header;\n    return Number(number);\n}\nexport function parseHeadersForFetch(headers) {\n    return Object.entries(headers).map(([key, value]) => {\n        return [key, parseHttpHeaderAsString(value)];\n    });\n}\n","/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nexport class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nexport class HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\n","import { parseHeadersForFetch } from '../utils.js';\nimport { HttpClient, HttpClientResponse, } from './HttpClient.js';\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nexport class FetchHttpClient extends HttpClient {\n    constructor(fetchFn) {\n        super();\n        // Default to global fetch if available\n        if (!fetchFn) {\n            if (!globalThis.fetch) {\n                throw new Error('fetch() function not provided and is not defined in the global scope. ' +\n                    'You must provide a fetch implementation.');\n            }\n            fetchFn = globalThis.fetch;\n        }\n        // Both timeout behaviors differs from Node:\n        // - Fetch uses a single timeout for the entire length of the request.\n        // - Node is more fine-grained and resets the timeout after each stage of the request.\n        if (globalThis.AbortController) {\n            // Utilise native AbortController if available\n            // AbortController was added in Node v15.0.0, v14.17.0\n            this._fetchFn = FetchHttpClient.makeFetchWithAbortTimeout(fetchFn);\n        }\n        else {\n            // Fall back to racing against a timeout promise if not available in the runtime\n            // This does not actually cancel the underlying fetch operation or resources\n            this._fetchFn = FetchHttpClient.makeFetchWithRaceTimeout(fetchFn);\n        }\n    }\n    static makeFetchWithRaceTimeout(fetchFn) {\n        return (url, init, timeout) => {\n            let pendingTimeoutId;\n            const timeoutPromise = new Promise((_, reject) => {\n                pendingTimeoutId = setTimeout(() => {\n                    pendingTimeoutId = null;\n                    reject(HttpClient.makeTimeoutError());\n                }, timeout);\n            });\n            const fetchPromise = fetchFn(url, init);\n            return Promise.race([fetchPromise, timeoutPromise]).finally(() => {\n                if (pendingTimeoutId) {\n                    clearTimeout(pendingTimeoutId);\n                }\n            });\n        };\n    }\n    static makeFetchWithAbortTimeout(fetchFn) {\n        return async (url, init, timeout) => {\n            // Use AbortController because AbortSignal.timeout() was added later in Node v17.3.0, v16.14.0\n            const abort = new AbortController();\n            let timeoutId = setTimeout(() => {\n                timeoutId = null;\n                abort.abort(HttpClient.makeTimeoutError());\n            }, timeout);\n            try {\n                return await fetchFn(url, Object.assign(Object.assign({}, init), { signal: abort.signal }));\n            }\n            catch (err) {\n                // Some implementations, like node-fetch, do not respect the reason passed to AbortController.abort()\n                // and instead it always throws an AbortError\n                // We catch this case to normalise all timeout errors\n                if (err.name === 'AbortError') {\n                    throw HttpClient.makeTimeoutError();\n                }\n                else {\n                    throw err;\n                }\n            }\n            finally {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n            }\n        };\n    }\n    /** @override. */\n    getClientName() {\n        return 'fetch';\n    }\n    async makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        const url = new URL(path, `${isInsecureConnection ? 'http' : 'https'}://${host}`);\n        url.port = port;\n        // For methods which expect payloads, we should always pass a body value\n        // even when it is empty. Without this, some JS runtimes (eg. Deno) will\n        // inject a second Content-Length header. See https://github.com/stripe/stripe-node/issues/1519\n        // for more details.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        const body = requestData || (methodHasPayload ? '' : undefined);\n        const res = await this._fetchFn(url.toString(), {\n            method,\n            headers: parseHeadersForFetch(headers),\n            body: typeof body === 'object' ? JSON.stringify(body) : body,\n        }, timeout);\n        return new FetchHttpClientResponse(res);\n    }\n}\nexport class FetchHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        super(res.status, FetchHttpClientResponse._transformHeadersToObject(res.headers));\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // Unfortunately `fetch` does not have event handlers for when the stream is\n        // completely read. We therefore invoke the streamCompleteCallback right\n        // away. This callback emits a response event with metadata and completes\n        // metrics, so it's ok to do this without waiting for the stream to be\n        // completely read.\n        streamCompleteCallback();\n        // Fetch's `body` property is expected to be a readable stream of the body.\n        return this._res.body;\n    }\n    toJSON() {\n        return this._res.json();\n    }\n    static _transformHeadersToObject(headers) {\n        // Fetch uses a Headers instance so this must be converted to a barebones\n        // JS object to meet the HttpClient interface.\n        const headersObj = {};\n        for (const entry of headers) {\n            if (!Array.isArray(entry) || entry.length != 2) {\n                throw new Error('Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.');\n            }\n            headersObj[entry[0]] = entry[1];\n        }\n        return headersObj;\n    }\n}\n","/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nexport class CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n    /**\n     * Computes a SHA-256 hash of the data.\n     */\n    computeSHA256Async(data) {\n        throw new Error('computeSHA256 not implemented.');\n    }\n}\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nexport class CryptoProviderOnlySupportsAsyncError extends Error {\n}\n","import { CryptoProvider, CryptoProviderOnlySupportsAsyncError, } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nexport class SubtleCryptoProvider extends CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n    /** @override */\n    async computeSHA256Async(data) {\n        return new Uint8Array(await this.subtleCrypto.digest('SHA-256', data));\n    }\n}\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n","import { FetchHttpClient } from '../net/FetchHttpClient.js';\nimport { SubtleCryptoProvider } from '../crypto/SubtleCryptoProvider.js';\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nexport class PlatformFunctions {\n    constructor() {\n        this._fetchFn = null;\n        this._agent = null;\n    }\n    /**\n     * Gets uname with Node's built-in `exec` function, if available.\n     */\n    getUname() {\n        throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n    secureCompare(a, b) {\n        // return early here if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        const len = a.length;\n        let result = 0;\n        for (let i = 0; i < len; ++i) {\n            result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n        }\n        return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n    createEmitter() {\n        throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n    tryBufferData(data) {\n        throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n    createNodeHttpClient(agent) {\n        throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    createFetchHttpClient(fetchFn) {\n        return new FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n    createDefaultHttpClient() {\n        throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n    createNodeCryptoProvider() {\n        throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n    createSubtleCryptoProvider(subtleCrypto) {\n        return new SubtleCryptoProvider(subtleCrypto);\n    }\n    createDefaultCryptoProvider() {\n        throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n}\n","/**\n * @private\n * (For internal use in stripe-node.)\n * Wrapper around the Event Web API.\n */\nclass _StripeEvent extends Event {\n    constructor(eventName, data) {\n        super(eventName);\n        this.data = data;\n    }\n}\n/** Minimal EventEmitter wrapper around EventTarget. */\nexport class StripeEmitter {\n    constructor() {\n        this.eventTarget = new EventTarget();\n        this.listenerMapping = new Map();\n    }\n    on(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper);\n    }\n    removeListener(eventName, listener) {\n        const listenerWrapper = this.listenerMapping.get(listener);\n        this.listenerMapping.delete(listener);\n        return this.eventTarget.removeEventListener(eventName, listenerWrapper);\n    }\n    once(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper, {\n            once: true,\n        });\n    }\n    emit(eventName, data) {\n        return this.eventTarget.dispatchEvent(new _StripeEvent(eventName, data));\n    }\n}\n","import { PlatformFunctions } from './PlatformFunctions.js';\nimport { StripeEmitter } from '../StripeEmitter.js';\n/**\n * Specializes WebPlatformFunctions using APIs available in Web workers.\n */\nexport class WebPlatformFunctions extends PlatformFunctions {\n    /** @override */\n    getUname() {\n        return Promise.resolve(null);\n    }\n    /** @override */\n    createEmitter() {\n        return new StripeEmitter();\n    }\n    /** @override */\n    tryBufferData(data) {\n        if (data.file.data instanceof ReadableStream) {\n            throw new Error('Uploading a file as a stream is not supported in non-Node environments. Please open or upvote an issue at github.com/stripe/stripe-node if you use this, detailing your use-case.');\n        }\n        return Promise.resolve(data);\n    }\n    /** @override */\n    createNodeHttpClient() {\n        throw new Error('Stripe: `createNodeHttpClient()` is not available in non-Node environments. Please use `createFetchHttpClient()` instead.');\n    }\n    /** @override */\n    createDefaultHttpClient() {\n        return super.createFetchHttpClient();\n    }\n    /** @override */\n    createNodeCryptoProvider() {\n        throw new Error('Stripe: `createNodeCryptoProvider()` is not available in non-Node environments. Please use `createSubtleCryptoProvider()` instead.');\n    }\n    /** @override */\n    createDefaultCryptoProvider() {\n        return this.createSubtleCryptoProvider();\n    }\n}\n","/* eslint-disable camelcase */\n/* eslint-disable no-warning-comments */\nexport const generateV1Error = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        case 'card_error':\n            return new StripeCardError(rawStripeError);\n        case 'invalid_request_error':\n            return new StripeInvalidRequestError(rawStripeError);\n        case 'api_error':\n            return new StripeAPIError(rawStripeError);\n        case 'authentication_error':\n            return new StripeAuthenticationError(rawStripeError);\n        case 'rate_limit_error':\n            return new StripeRateLimitError(rawStripeError);\n        case 'idempotency_error':\n            return new StripeIdempotencyError(rawStripeError);\n        case 'invalid_grant':\n            return new StripeInvalidGrantError(rawStripeError);\n        default:\n            return new StripeUnknownError(rawStripeError);\n    }\n};\n// eslint-disable-next-line complexity\nexport const generateV2Error = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        // switchCases: The beginning of the section generated from our OpenAPI spec\n        case 'temporary_session_expired':\n            return new TemporarySessionExpiredError(rawStripeError);\n        // switchCases: The end of the section generated from our OpenAPI spec\n    }\n    // Special handling for requests with missing required fields in V2 APIs.\n    // invalid_field response in V2 APIs returns the field 'code' instead of 'type'.\n    switch (rawStripeError.code) {\n        case 'invalid_fields':\n            return new StripeInvalidRequestError(rawStripeError);\n    }\n    return generateV1Error(rawStripeError);\n};\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nexport class StripeError extends Error {\n    constructor(raw = {}, type = null) {\n        var _a;\n        super(raw.message);\n        this.type = type || this.constructor.name;\n        this.raw = raw;\n        this.rawType = raw.type;\n        this.code = raw.code;\n        this.doc_url = raw.doc_url;\n        this.param = raw.param;\n        this.detail = raw.detail;\n        this.headers = raw.headers;\n        this.requestId = raw.requestId;\n        this.statusCode = raw.statusCode;\n        this.message = (_a = raw.message) !== null && _a !== void 0 ? _a : '';\n        this.userMessage = raw.user_message;\n        this.charge = raw.charge;\n        this.decline_code = raw.decline_code;\n        this.payment_intent = raw.payment_intent;\n        this.payment_method = raw.payment_method;\n        this.payment_method_type = raw.payment_method_type;\n        this.setup_intent = raw.setup_intent;\n        this.source = raw.source;\n    }\n}\n/**\n * Helper factory which takes raw stripe errors and outputs wrapping instances\n */\nStripeError.generate = generateV1Error;\n// Specific Stripe Error types:\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nexport class StripeCardError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeCardError');\n    }\n}\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nexport class StripeInvalidRequestError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidRequestError');\n    }\n}\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nexport class StripeAPIError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAPIError');\n    }\n}\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nexport class StripeAuthenticationError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAuthenticationError');\n    }\n}\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nexport class StripePermissionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripePermissionError');\n    }\n}\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nexport class StripeRateLimitError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeRateLimitError');\n    }\n}\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nexport class StripeConnectionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeConnectionError');\n    }\n}\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nexport class StripeSignatureVerificationError extends StripeError {\n    constructor(header, payload, raw = {}) {\n        super(raw, 'StripeSignatureVerificationError');\n        this.header = header;\n        this.payload = payload;\n    }\n}\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nexport class StripeIdempotencyError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeIdempotencyError');\n    }\n}\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nexport class StripeInvalidGrantError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidGrantError');\n    }\n}\n/**\n * Any other error from Stripe not specifically captured above\n */\nexport class StripeUnknownError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeUnknownError');\n    }\n}\n// classDefinitions: The beginning of the section generated from our OpenAPI spec\nexport class TemporarySessionExpiredError extends StripeError {\n    constructor(rawStripeError = {}) {\n        super(rawStripeError, 'TemporarySessionExpiredError');\n    }\n}\n// classDefinitions: The end of the section generated from our OpenAPI spec\n","import { StripeAPIError, StripeAuthenticationError, StripeConnectionError, StripeError, StripePermissionError, StripeRateLimitError, generateV1Error, generateV2Error, } from './Error.js';\nimport { HttpClient } from './net/HttpClient.js';\nimport { emitWarning, jsonStringifyRequestData, normalizeHeaders, queryStringifyRequestData, removeNullish, getAPIMode, getOptionsFromArgs, getDataFromArgs, parseHttpHeaderAsString, parseHttpHeaderAsNumber, } from './utils.js';\nconst MAX_RETRY_AFTER_WAIT = 60;\nexport class RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return removeNullish({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, apiMode, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new StripeRateLimitError(jsonResponse.error);\n                    }\n                    else if (apiMode === 'v2') {\n                        err = generateV2Error(jsonResponse.error);\n                    }\n                    else {\n                        err = generateV1Error(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(2, numRetries - 1), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings, apiMode) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        const genKey = () => `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        // more verbose than it needs to be, but gives clear separation between V1 and V2 behavior\n        if (apiMode === 'v2') {\n            if (method === 'POST' || method === 'DELETE') {\n                return genKey();\n            }\n        }\n        else if (apiMode === 'v1') {\n            if (method === 'POST' && maxRetries > 0) {\n                return genKey();\n            }\n        }\n        return null;\n    }\n    _makeHeaders({ contentType, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings, stripeAccount, stripeContext, apiMode, }) {\n        const defaultHeaders = {\n            Accept: 'application/json',\n            'Content-Type': contentType,\n            'User-Agent': this._getUserAgentString(apiMode),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': stripeAccount,\n            'Stripe-Context': stripeContext,\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings, apiMode),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                emitWarning(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign(removeNullish(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        normalizeHeaders(userSuppliedHeaders));\n    }\n    _getUserAgentString(apiMode) {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/${apiMode} NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                emitWarning('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _rawRequest(method, path, params, options) {\n        const requestPromise = new Promise((resolve, reject) => {\n            let opts;\n            try {\n                const requestMethod = method.toUpperCase();\n                if (requestMethod !== 'POST' &&\n                    params &&\n                    Object.keys(params).length !== 0) {\n                    throw new Error('rawRequest only supports params on POST requests. Please pass null and add your parameters to path.');\n                }\n                const args = [].slice.call([params, options]);\n                // Pull request data and options (headers, auth) from args.\n                const dataFromArgs = getDataFromArgs(args);\n                const data = requestMethod === 'POST' ? Object.assign({}, dataFromArgs) : null;\n                const calculatedOptions = getOptionsFromArgs(args);\n                const headers = calculatedOptions.headers;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const authenticator = calculatedOptions.authenticator;\n                opts = {\n                    requestMethod,\n                    requestPath: path,\n                    bodyData: data,\n                    queryData: {},\n                    authenticator,\n                    headers,\n                    host: calculatedOptions.host,\n                    streaming: !!calculatedOptions.streaming,\n                    settings: {},\n                    usage: ['raw_request'],\n                };\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }\n            const { headers, settings } = opts;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const authenticator = opts.authenticator;\n            this._request(opts.requestMethod, opts.host, path, opts.bodyData, authenticator, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback);\n        });\n        return requestPromise;\n    }\n    _request(method, host, path, data, authenticator, options, usage = [], callback, requestDataProcessor = null) {\n        var _a;\n        let requestData;\n        authenticator = (_a = authenticator !== null && authenticator !== void 0 ? authenticator : this._stripe._authenticator) !== null && _a !== void 0 ? _a : null;\n        const apiMode = getAPIMode(path);\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const request = {\n                host: host || this._stripe.getApiField('host'),\n                port: this._stripe.getApiField('port'),\n                path: path,\n                method: method,\n                headers: Object.assign({}, headers),\n                body: requestData,\n                protocol: this._stripe.getApiField('protocol'),\n            };\n            authenticator(request)\n                .then(() => {\n                const req = this._stripe\n                    .getApiField('httpClient')\n                    .makeRequest(request.host, request.port, request.path, request.method, request.headers, request.body, request.protocol, timeout);\n                const requestStartTime = Date.now();\n                const requestEvent = removeNullish({\n                    api_version: apiVersion,\n                    account: parseHttpHeaderAsString(headers['Stripe-Account']),\n                    idempotency_key: parseHttpHeaderAsString(headers['Idempotency-Key']),\n                    method,\n                    path,\n                    request_start_time: requestStartTime,\n                });\n                const requestRetries = numRetries || 0;\n                const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n                this._stripe._emitter.emit('request', requestEvent);\n                req\n                    .then((res) => {\n                    if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, parseHttpHeaderAsNumber(res.getHeaders()['retry-after']));\n                    }\n                    else if (options.streaming && res.getStatusCode() < 400) {\n                        return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                    }\n                    else {\n                        return this._jsonResponseHandler(requestEvent, apiMode, usage, callback)(res);\n                    }\n                })\n                    .catch((error) => {\n                    if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                    }\n                    else {\n                        const isTimeoutError = error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n                        return callback(new StripeConnectionError({\n                            message: isTimeoutError\n                                ? `Request aborted due to timeout being reached (${timeout}ms)`\n                                : RequestSender._generateConnectionErrorMessage(requestRetries),\n                            detail: error,\n                        }));\n                    }\n                });\n            })\n                .catch((e) => {\n                throw new StripeError({\n                    message: 'Unable to authenticate the request',\n                    exception: e,\n                });\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders({\n                    contentType: apiMode == 'v2'\n                        ? 'application/json'\n                        : 'application/x-www-form-urlencoded',\n                    contentLength: requestData.length,\n                    apiVersion: apiVersion,\n                    clientUserAgent,\n                    method,\n                    userSuppliedHeaders: options.headers,\n                    userSuppliedSettings: options.settings,\n                    stripeAccount: apiMode == 'v2' ? null : this._stripe.getApiField('stripeAccount'),\n                    stripeContext: apiMode == 'v2' ? this._stripe.getApiField('stripeContext') : null,\n                    apiMode: apiMode,\n                });\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            let stringifiedData;\n            if (apiMode == 'v2') {\n                stringifiedData = data ? jsonStringifyRequestData(data) : '';\n            }\n            else {\n                stringifiedData = queryStringifyRequestData(data || {}, apiMode);\n            }\n            prepareAndMakeRequest(null, stringifiedData);\n        }\n    }\n}\n","import { callbackifyPromiseWithTimeout, getDataFromArgs, getAPIMode, } from './utils.js';\nclass V1Iterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.index = 0;\n        this.pagePromise = firstPagePromise;\n        this.promiseCache = { currentPromise: null };\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async iterate(pageResult) {\n        if (!(pageResult &&\n            pageResult.data &&\n            typeof pageResult.data.length === 'number')) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `data` array.');\n        }\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        if (this.index < pageResult.data.length) {\n            const idx = reverseIteration\n                ? pageResult.data.length - 1 - this.index\n                : this.index;\n            const value = pageResult.data[idx];\n            this.index += 1;\n            return { value, done: false };\n        }\n        else if (pageResult.has_more) {\n            // Reset counter, request next page, and recurse.\n            this.index = 0;\n            this.pagePromise = this.getNextPage(pageResult);\n            const nextPageResult = await this.pagePromise;\n            return this.iterate(nextPageResult);\n        }\n        return { done: true, value: undefined };\n    }\n    /** @abstract */\n    getNextPage(_pageResult) {\n        throw new Error('Unimplemented');\n    }\n    async _next() {\n        return this.iterate(await this.pagePromise);\n    }\n    next() {\n        /**\n         * If a user calls `.next()` multiple times in parallel,\n         * return the same result until something has resolved\n         * to prevent page-turning race conditions.\n         */\n        if (this.promiseCache.currentPromise) {\n            return this.promiseCache.currentPromise;\n        }\n        const nextPromise = (async () => {\n            const ret = await this._next();\n            this.promiseCache.currentPromise = null;\n            return ret;\n        })();\n        this.promiseCache.currentPromise = nextPromise;\n        return nextPromise;\n    }\n}\nclass V1ListIterator extends V1Iterator {\n    getNextPage(pageResult) {\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        const lastId = getLastId(pageResult, reverseIteration);\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n        });\n    }\n}\nclass V1SearchIterator extends V1Iterator {\n    getNextPage(pageResult) {\n        if (!pageResult.next_page) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.');\n        }\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            page: pageResult.next_page,\n        });\n    }\n}\nclass V2ListIterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.currentPageIterator = (async () => {\n            const page = await firstPagePromise;\n            return page.data[Symbol.iterator]();\n        })();\n        this.nextPageUrl = (async () => {\n            const page = await firstPagePromise;\n            return page.next_page_url || null;\n        })();\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async turnPage() {\n        const nextPageUrl = await this.nextPageUrl;\n        if (!nextPageUrl)\n            return null;\n        this.spec.fullPath = nextPageUrl;\n        const page = await this.stripeResource._makeRequest([], this.spec, {});\n        this.nextPageUrl = Promise.resolve(page.next_page_url);\n        this.currentPageIterator = Promise.resolve(page.data[Symbol.iterator]());\n        return this.currentPageIterator;\n    }\n    async next() {\n        {\n            const result = (await this.currentPageIterator).next();\n            if (!result.done)\n                return { done: false, value: result.value };\n        }\n        const nextPageIterator = await this.turnPage();\n        if (!nextPageIterator) {\n            return { done: true, value: undefined };\n        }\n        const result = nextPageIterator.next();\n        if (!result.done)\n            return { done: false, value: result.value };\n        return { done: true, value: undefined };\n    }\n}\nexport const makeAutoPaginationMethods = (stripeResource, requestArgs, spec, firstPagePromise) => {\n    const apiMode = getAPIMode(spec.fullPath || spec.path);\n    if (apiMode !== 'v2' && spec.methodType === 'search') {\n        return makeAutoPaginationMethodsFromIterator(new V1SearchIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (apiMode !== 'v2' && spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new V1ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (apiMode === 'v2' && spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new V2ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    return null;\n};\nconst makeAutoPaginationMethodsFromIterator = (iterator) => {\n    const autoPagingEach = makeAutoPagingEach((...args) => iterator.next(...args));\n    const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n    const autoPaginationMethods = {\n        autoPagingEach,\n        autoPagingToArray,\n        // Async iterator functions:\n        next: () => iterator.next(),\n        return: () => {\n            // This is required for `break`.\n            return {};\n        },\n        [getAsyncIteratorSymbol()]: () => {\n            return autoPaginationMethods;\n        },\n    };\n    return autoPaginationMethods;\n};\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\nfunction getAsyncIteratorSymbol() {\n    if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n        return Symbol.asyncIterator;\n    }\n    // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n    return '@@asyncIterator';\n}\nfunction getDoneCallback(args) {\n    if (args.length < 2) {\n        return null;\n    }\n    const onDone = args[1];\n    if (typeof onDone !== 'function') {\n        throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`);\n    }\n    return onDone;\n}\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n    if (args.length === 0) {\n        return undefined;\n    }\n    const onItem = args[0];\n    if (typeof onItem !== 'function') {\n        throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`);\n    }\n    // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n    if (onItem.length === 2) {\n        return onItem;\n    }\n    if (onItem.length > 2) {\n        throw Error(`The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`);\n    }\n    // This magically handles all three of these usecases (the latter two being functionally identical):\n    // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n    // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n    // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n    return function _onItem(item, next) {\n        const shouldContinue = onItem(item);\n        next(shouldContinue);\n    };\n}\nfunction getLastId(listResult, reverseIteration) {\n    const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n    const lastItem = listResult.data[lastIdx];\n    const lastId = lastItem && lastItem.id;\n    if (!lastId) {\n        throw Error('Unexpected: No `id` found on the last item while auto-paging a list.');\n    }\n    return lastId;\n}\nfunction makeAutoPagingEach(asyncIteratorNext) {\n    return function autoPagingEach( /* onItem?, onDone? */) {\n        const args = [].slice.call(arguments);\n        const onItem = getItemCallback(args);\n        const onDone = getDoneCallback(args);\n        if (args.length > 2) {\n            throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n        }\n        const autoPagePromise = wrapAsyncIteratorWithCallback(asyncIteratorNext, \n        // @ts-ignore we might need a null check\n        onItem);\n        return callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n    };\n}\nfunction makeAutoPagingToArray(autoPagingEach) {\n    return function autoPagingToArray(opts, onDone) {\n        const limit = opts && opts.limit;\n        if (!limit) {\n            throw Error('You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.');\n        }\n        if (limit > 10000) {\n            throw Error('You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.');\n        }\n        const promise = new Promise((resolve, reject) => {\n            const items = [];\n            autoPagingEach((item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    return false;\n                }\n            })\n                .then(() => {\n                resolve(items);\n            })\n                .catch(reject);\n        });\n        // @ts-ignore\n        return callbackifyPromiseWithTimeout(promise, onDone);\n    };\n}\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n    return new Promise((resolve, reject) => {\n        function handleIteration(iterResult) {\n            if (iterResult.done) {\n                resolve();\n                return;\n            }\n            const item = iterResult.value;\n            return new Promise((next) => {\n                // Bit confusing, perhaps; we pass a `resolve` fn\n                // to the user, so they can decide when and if to continue.\n                // They can return false, or a promise which resolves to false, to break.\n                onItem(item, next);\n            }).then((shouldContinue) => {\n                if (shouldContinue === false) {\n                    return handleIteration({ done: true, value: undefined });\n                }\n                else {\n                    return asyncIteratorNext().then(handleIteration);\n                }\n            });\n        }\n        asyncIteratorNext()\n            .then(handleIteration)\n            .catch(reject);\n    });\n}\nfunction isReverseIteration(requestArgs) {\n    const args = [].slice.call(requestArgs);\n    const dataFromArgs = getDataFromArgs(args);\n    return !!dataFromArgs.ending_before;\n}\n","import { callbackifyPromiseWithTimeout, extractUrlParams } from './utils.js';\nimport { makeAutoPaginationMethods } from './autoPagination.js';\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nexport function stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = extractUrlParams(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = callbackifyPromiseWithTimeout(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, makeAutoPaginationMethods(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\n","import { getDataFromArgs, getOptionsFromArgs, makeURLInterpolator, protoExtend, queryStringifyRequestData, getAPIMode, } from './utils.js';\nimport { stripeMethod } from './StripeMethod.js';\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = protoExtend;\n// Expose method-creator\nStripeResource.method = stripeMethod;\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n    this._stripe = stripe;\n    if (deprecatedUrlData) {\n        throw new Error('Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.');\n    }\n    this.basePath = makeURLInterpolator(\n    // @ts-ignore changing type of basePath\n    this.basePath || stripe.getApiField('basePath'));\n    // @ts-ignore changing type of path\n    this.resourcePath = this.path;\n    // @ts-ignore changing type of path\n    this.path = makeURLInterpolator(this.path);\n    this.initialize(...arguments);\n}\nStripeResource.prototype = {\n    _stripe: null,\n    // @ts-ignore the type of path changes in ctor\n    path: '',\n    resourcePath: '',\n    // Methods that don't use the API's default '/v1' path can override it with this setting.\n    basePath: null,\n    initialize() { },\n    // Function to override the default data processor. This allows full control\n    // over how a StripeResource's request data will get converted into an HTTP\n    // body. This is useful for non-standard HTTP requests. The function should\n    // take method name, data, and headers as arguments.\n    requestDataProcessor: null,\n    // Function to add a validation checks before sending the request, errors should\n    // be thrown, and they will be passed to the callback/promise.\n    validateRequest: null,\n    createFullPath(commandPath, urlData) {\n        const urlParts = [this.basePath(urlData), this.path(urlData)];\n        if (typeof commandPath === 'function') {\n            const computedCommandPath = commandPath(urlData);\n            // If we have no actual command path, we just omit it to avoid adding a\n            // trailing slash. This is important for top-level listing requests, which\n            // do not have a command path.\n            if (computedCommandPath) {\n                urlParts.push(computedCommandPath);\n            }\n        }\n        else {\n            urlParts.push(commandPath);\n        }\n        return this._joinUrlParts(urlParts);\n    },\n    // Creates a relative resource path with symbols left in (unlike\n    // createFullPath which takes some data to replace them with). For example it\n    // might produce: /invoices/{id}\n    createResourcePathWithSymbols(pathWithSymbols) {\n        // If there is no path beyond the resource path, we want to produce just\n        // /<resource path> rather than /<resource path>/.\n        if (pathWithSymbols) {\n            return `/${this._joinUrlParts([this.resourcePath, pathWithSymbols])}`;\n        }\n        else {\n            return `/${this.resourcePath}`;\n        }\n    },\n    _joinUrlParts(parts) {\n        // Replace any accidentally doubled up slashes. This previously used\n        // path.join, which would do this as well. Unfortunately we need to do this\n        // as the functions for creating paths are technically part of the public\n        // interface and so we need to preserve backwards compatibility.\n        return parts.join('/').replace(/\\/{2,}/g, '/');\n    },\n    _getRequestOpts(requestArgs, spec, overrideData) {\n        var _a;\n        // Extract spec values with defaults.\n        const requestMethod = (spec.method || 'GET').toUpperCase();\n        const usage = spec.usage || [];\n        const urlParams = spec.urlParams || [];\n        const encode = spec.encode || ((data) => data);\n        const isUsingFullPath = !!spec.fullPath;\n        const commandPath = makeURLInterpolator(isUsingFullPath ? spec.fullPath : spec.path || '');\n        // When using fullPath, we ignore the resource path as it should already be\n        // fully qualified.\n        const path = isUsingFullPath\n            ? spec.fullPath\n            : this.createResourcePathWithSymbols(spec.path);\n        // Don't mutate args externally.\n        const args = [].slice.call(requestArgs);\n        // Generate and validate url params.\n        const urlData = urlParams.reduce((urlData, param) => {\n            const arg = args.shift();\n            if (typeof arg !== 'string') {\n                throw new Error(`Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`);\n            }\n            urlData[param] = arg;\n            return urlData;\n        }, {});\n        // Pull request data and options (headers, auth) from args.\n        const dataFromArgs = getDataFromArgs(args);\n        const data = encode(Object.assign({}, dataFromArgs, overrideData));\n        const options = getOptionsFromArgs(args);\n        const host = options.host || spec.host;\n        const streaming = !!spec.streaming || !!options.streaming;\n        // Validate that there are no more args.\n        if (args.filter((x) => x != null).length) {\n            throw new Error(`Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`);\n        }\n        // When using full path, we can just invoke the URL interpolator directly\n        // as we don't need to use the resource to create a full path.\n        const requestPath = isUsingFullPath\n            ? commandPath(urlData)\n            : this.createFullPath(commandPath, urlData);\n        const headers = Object.assign(options.headers, spec.headers);\n        if (spec.validator) {\n            spec.validator(data, { headers });\n        }\n        const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n        const bodyData = dataInQuery ? null : data;\n        const queryData = dataInQuery ? data : {};\n        return {\n            requestMethod,\n            requestPath,\n            bodyData,\n            queryData,\n            authenticator: (_a = options.authenticator) !== null && _a !== void 0 ? _a : null,\n            headers,\n            host: host !== null && host !== void 0 ? host : null,\n            streaming,\n            settings: options.settings,\n            usage,\n        };\n    },\n    _makeRequest(requestArgs, spec, overrideData) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let opts;\n            try {\n                opts = this._getRequestOpts(requestArgs, spec, overrideData);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(spec.transformResponseData\n                        ? spec.transformResponseData(response)\n                        : response);\n                }\n            }\n            const emptyQuery = Object.keys(opts.queryData).length === 0;\n            const path = [\n                opts.requestPath,\n                emptyQuery ? '' : '?',\n                queryStringifyRequestData(opts.queryData, getAPIMode(opts.requestPath)),\n            ].join('');\n            const { headers, settings } = opts;\n            this._stripe._requestSender._request(opts.requestMethod, opts.host, path, opts.bodyData, opts.authenticator, {\n                headers,\n                settings,\n                streaming: opts.streaming,\n            }, opts.usage, requestCallback, (_a = this.requestDataProcessor) === null || _a === void 0 ? void 0 : _a.bind(this));\n        });\n    },\n};\nexport { StripeResource };\n","import { StripeError, StripeSignatureVerificationError } from './Error.js';\nimport { CryptoProviderOnlySupportsAsyncError, } from './crypto/CryptoProvider.js';\nexport function createWebhooks(platformFunctions) {\n    const Webhook = {\n        DEFAULT_TOLERANCE: 300,\n        signature: null,\n        constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            try {\n                if (!this.signature) {\n                    throw new Error('ERR: missing signature helper, unable to verify');\n                }\n                this.signature.verifyHeader(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            }\n            catch (e) {\n                if (e instanceof CryptoProviderOnlySupportsAsyncError) {\n                    e.message +=\n                        '\\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`';\n                }\n                throw e;\n            }\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        async constructEventAsync(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            if (!this.signature) {\n                throw new Error('ERR: missing signature helper, unable to verify');\n            }\n            await this.signature.verifyHeaderAsync(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        /**\n         * Generates a header to be used for webhook mocking\n         *\n         * @typedef {object} opts\n         * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n         * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n         * @property {string} secret - Stripe webhook secret 'whsec_...'\n         * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n         * @property {string} signature - Computed webhook signature\n         * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n         */\n        generateTestHeaderString: function (opts) {\n            const preparedOpts = prepareOptions(opts);\n            const signature = preparedOpts.signature ||\n                preparedOpts.cryptoProvider.computeHMACSignature(preparedOpts.payloadString, preparedOpts.secret);\n            return preparedOpts.generateHeaderString(signature);\n        },\n        generateTestHeaderStringAsync: async function (opts) {\n            const preparedOpts = prepareOptions(opts);\n            const signature = preparedOpts.signature ||\n                (await preparedOpts.cryptoProvider.computeHMACSignatureAsync(preparedOpts.payloadString, preparedOpts.secret));\n            return preparedOpts.generateHeaderString(signature);\n        },\n    };\n    const signature = {\n        EXPECTED_SCHEME: 'v1',\n        verifyHeader(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = cryptoProvider.computeHMACSignature(makeHMACContent(payload, details), secret);\n            validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n            return true;\n        },\n        async verifyHeaderAsync(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(makeHMACContent(payload, details), secret);\n            return validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n        },\n    };\n    function makeHMACContent(payload, details) {\n        return `${details.timestamp}.${payload}`;\n    }\n    function parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n        if (!encodedPayload) {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No webhook payload was provided.',\n            });\n        }\n        const suspectPayloadType = typeof encodedPayload != 'string' &&\n            !(encodedPayload instanceof Uint8Array);\n        const textDecoder = new TextDecoder('utf8');\n        const decodedPayload = encodedPayload instanceof Uint8Array\n            ? textDecoder.decode(encodedPayload)\n            : encodedPayload;\n        // Express's type for `Request#headers` is `string | []string`\n        // which is because the `set-cookie` header is an array,\n        // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n        // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n        if (Array.isArray(encodedHeader)) {\n            throw new Error('Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.');\n        }\n        if (encodedHeader == null || encodedHeader == '') {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No stripe-signature header value was provided.',\n            });\n        }\n        const decodedHeader = encodedHeader instanceof Uint8Array\n            ? textDecoder.decode(encodedHeader)\n            : encodedHeader;\n        const details = parseHeader(decodedHeader, expectedScheme);\n        if (!details || details.timestamp === -1) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'Unable to extract timestamp and signatures from header',\n            });\n        }\n        if (!details.signatures.length) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'No signatures found with expected scheme',\n            });\n        }\n        return {\n            decodedPayload,\n            decodedHeader,\n            details,\n            suspectPayloadType,\n        };\n    }\n    function validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt) {\n        const signatureFound = !!details.signatures.filter(platformFunctions.secureCompare.bind(platformFunctions, expectedSignature)).length;\n        const docsLocation = '\\nLearn more about webhook signing and explore webhook integration examples for various frameworks at ' +\n            'https://docs.stripe.com/webhooks/signature';\n        const whitespaceMessage = secretContainsWhitespace\n            ? '\\n\\nNote: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value'\n            : '';\n        if (!signatureFound) {\n            if (suspectPayloadType) {\n                throw new StripeSignatureVerificationError(header, payload, {\n                    message: 'Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.' +\n                        'Payload was provided as a parsed JavaScript object instead. \\n' +\n                        'Signature verification is impossible without access to the original signed material. \\n' +\n                        docsLocation +\n                        '\\n' +\n                        whitespaceMessage,\n                });\n            }\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'No signatures found matching the expected signature for payload.' +\n                    ' Are you passing the raw request body you received from Stripe? \\n' +\n                    ' If a webhook request is being forwarded by a third-party tool,' +\n                    ' ensure that the exact request body, including JSON formatting and new line style, is preserved.\\n' +\n                    docsLocation +\n                    '\\n' +\n                    whitespaceMessage,\n            });\n        }\n        const timestampAge = Math.floor((typeof receivedAt === 'number' ? receivedAt : Date.now()) / 1000) - details.timestamp;\n        if (tolerance > 0 && timestampAge > tolerance) {\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'Timestamp outside the tolerance zone',\n            });\n        }\n        return true;\n    }\n    function parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme) {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    let webhooksCryptoProviderInstance = null;\n    /**\n     * Lazily instantiate a CryptoProvider instance. This is a stateless object\n     * so a singleton can be used here.\n     */\n    function getCryptoProvider() {\n        if (!webhooksCryptoProviderInstance) {\n            webhooksCryptoProviderInstance = platformFunctions.createDefaultCryptoProvider();\n        }\n        return webhooksCryptoProviderInstance;\n    }\n    function prepareOptions(opts) {\n        if (!opts) {\n            throw new StripeError({\n                message: 'Options are required',\n            });\n        }\n        const timestamp = Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n        const scheme = opts.scheme || signature.EXPECTED_SCHEME;\n        const cryptoProvider = opts.cryptoProvider || getCryptoProvider();\n        const payloadString = `${timestamp}.${opts.payload}`;\n        const generateHeaderString = (signature) => {\n            return `t=${timestamp},${scheme}=${signature}`;\n        };\n        return Object.assign(Object.assign({}, opts), { timestamp,\n            scheme,\n            cryptoProvider,\n            payloadString,\n            generateHeaderString });\n    }\n    Webhook.signature = signature;\n    return Webhook;\n}\n","// File generated from our OpenAPI spec\nexport const ApiVersion = '2025-05-28.basil';\n","// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        if (!Object.prototype.hasOwnProperty.call(resources, name)) {\n            continue;\n        }\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Accounts = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts',\n        methodType: 'list',\n    }),\n    disconnect: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/disconnect',\n    }),\n    listOwners: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}/owners',\n        methodType: 'list',\n    }),\n    refresh: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/refresh',\n    }),\n    subscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/subscribe',\n    }),\n    unsubscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/unsubscribe',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ActiveEntitlements = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Alerts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/alerts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/alerts/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/alerts',\n        methodType: 'list',\n    }),\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/activate',\n    }),\n    archive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/archive',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/deactivate',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/capture',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/expire',\n    }),\n    finalizeAmount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/finalize_amount',\n    }),\n    increment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/increment',\n    }),\n    respond: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/fraud_challenges/respond',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/reverse',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/approve',\n    }),\n    decline: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/decline',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Calculations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/calculations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}/line_items',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cardholders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cardholders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    deliverCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/deliver',\n    }),\n    failCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/fail',\n    }),\n    returnCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/return',\n    }),\n    shipCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/ship',\n    }),\n    submitCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/submit',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/issuing/cards/{card}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards/{card}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cards',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/confirmation_tokens',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConnectionTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/connection_tokens',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditBalanceSummary = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_summary',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditBalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_transactions',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditGrants = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/credit_grants' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_grants/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_grants',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}/expire',\n    }),\n    voidGrant: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}/void',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/credit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals/{credit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    fundCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/customers/{customer}/fund_cash_balance',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const DebitReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/debit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals/{debit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/disputes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes',\n        methodType: 'list',\n    }),\n    submit: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}/submit',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EarlyFraudWarnings = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings/{early_fraud_warning}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EventDestinations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v2/core/event_destinations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    disable: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/disable',\n    }),\n    enable: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/enable',\n    }),\n    ping: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/ping',\n    }),\n});\n","// This file is manually maintained\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve(...args) {\n        const transformResponseData = (response) => {\n            return this.addFetchRelatedObjectIfNeeded(response);\n        };\n        return stripeMethod({\n            method: 'GET',\n            fullPath: '/v2/core/events/{id}',\n            transformResponseData,\n        }).apply(this, args);\n    },\n    list(...args) {\n        const transformResponseData = (response) => {\n            return Object.assign(Object.assign({}, response), { data: response.data.map(this.addFetchRelatedObjectIfNeeded.bind(this)) });\n        };\n        return stripeMethod({\n            method: 'GET',\n            fullPath: '/v2/core/events',\n            methodType: 'list',\n            transformResponseData,\n        }).apply(this, args);\n    },\n    /**\n     * @private\n     *\n     * For internal use in stripe-node.\n     *\n     * @param pulledEvent The retrieved event object\n     * @returns The retrieved event object with a fetchRelatedObject method,\n     * if pulledEvent.related_object is valid (non-null and has a url)\n     */\n    addFetchRelatedObjectIfNeeded(pulledEvent) {\n        if (!pulledEvent.related_object || !pulledEvent.related_object.url) {\n            return pulledEvent;\n        }\n        return Object.assign(Object.assign({}, pulledEvent), { fetchRelatedObject: () => \n            // call stripeMethod with 'this' resource to fetch\n            // the related object. 'this' is needed to construct\n            // and send the request, but the method spec controls\n            // the url endpoint and method, so it doesn't matter\n            // that 'this' is an Events resource object here\n            stripeMethod({\n                method: 'GET',\n                fullPath: pulledEvent.related_object.url,\n            }).apply(this, [\n                {\n                    stripeAccount: pulledEvent.context,\n                },\n            ]) });\n    },\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Features = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/entitlements/features' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FinancialAccounts = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/close',\n    }),\n    retrieveFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n    updateFeatures: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/fail',\n    }),\n    returnInboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/return',\n    }),\n    succeed: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/succeed',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers/{inbound_transfer}/cancel',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Locations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/locations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meter_event_adjustments',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_adjustments',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventSession = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_session',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventStream = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_stream',\n        host: 'meter-events.stripe.com',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meter_events' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v2/billing/meter_events' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Meters = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/meters/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters',\n        methodType: 'list',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/deactivate',\n    }),\n    listEventSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters/{id}/event_summaries',\n        methodType: 'list',\n    }),\n    reactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/reactivate',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Orders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/climate/orders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}/cancel',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}',\n    }),\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/post',\n    }),\n    returnOutboundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/return',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments/{id}/cancel',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post',\n    }),\n    returnOutboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}/cancel',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PhysicalBundles = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles/{physical_bundle}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products/{product}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    presentPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/present_payment_method',\n    }),\n    succeedInputCollection: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/succeed_input_collection',\n    }),\n    timeoutInputCollection: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/timeout_input_collection',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/readers' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    cancelAction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/cancel_action',\n    }),\n    collectInputs: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/collect_inputs',\n    }),\n    processPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_payment_intent',\n    }),\n    processSetupIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_setup_intent',\n    }),\n    refundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/refund_payment',\n    }),\n    setReaderDisplay: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/set_reader_display',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_credits',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_debits',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/refunds/{refund}/expire',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Registrations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/registrations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportRuns = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/reporting/report_runs' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs/{report_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportTypes = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types/{report_type}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Requests = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/forwarding/requests' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ScheduledQueryRuns = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs/{scheduled_query_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Secrets = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apps/secrets' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apps/secrets',\n        methodType: 'list',\n    }),\n    deleteWhere: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/apps/secrets/delete',\n    }),\n    find: stripeMethod({ method: 'GET', fullPath: '/v1/apps/secrets/find' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/sessions',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/checkout/sessions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}/expire',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}/line_items',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/sessions/{session}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Settings = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax/settings' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax/settings' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Suppliers = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers/{supplier}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TestClocks = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    advance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}/advance',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TransactionEntries = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    createForceCapture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_force_capture',\n    }),\n    createUnlinkedRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_unlinked_refund',\n    }),\n    refund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/{transaction}/refund',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}',\n    }),\n    createFromCalculation: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_from_calculation',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_reversal',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}/line_items',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueListItems = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_list_items',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueLists = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/radar/value_lists' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationReports = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports/{report}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationSessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/cancel',\n    }),\n    redact: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/redact',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path\nexport const Accounts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/accounts' }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/accounts/{account}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/accounts/{account}' }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCurrent: stripeMethod({ method: 'GET', fullPath: '/v1/account' }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_links' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_sessions' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplePayDomains = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apple_pay/domains' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplicationFees = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees',\n        methodType: 'list',\n    }),\n    createRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{id}/refunds',\n    }),\n    listRefunds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}/refunds',\n        methodType: 'list',\n    }),\n    retrieveRefund: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n    updateRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Balance = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/balance' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const BalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Charges = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/charges' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/charges/{charge}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/charges/{charge}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges',\n        methodType: 'list',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/charges/{charge}/capture',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges/search',\n        methodType: 'search',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/confirmation_tokens/{confirmation_token}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CountrySpecs = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs/{country}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Coupons = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/coupons' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/coupons/{coupon}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/coupons/{coupon}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/coupons',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/coupons/{coupon}' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditNotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/{credit_note}/lines',\n        methodType: 'list',\n    }),\n    listPreviewLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/preview/lines',\n        methodType: 'list',\n    }),\n    preview: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/preview' }),\n    voidCreditNote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/credit_notes/{id}/void',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CustomerSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customer_sessions' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/customers/{customer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/customers/{customer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/customers/{customer}' }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/disputes/{dispute}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/disputes/{dispute}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/disputes',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/disputes/{dispute}/close',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EphemeralKeys = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/ephemeral_keys',\n        validator: (data, options) => {\n            if (!options.headers || !options.headers['Stripe-Version']) {\n                throw new Error('Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node');\n            }\n        },\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/ephemeral_keys/{key}' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/events/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/events',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ExchangeRates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates/{rate_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FileLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/file_links' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/file_links/{link}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/file_links/{link}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/file_links',\n        methodType: 'list',\n    }),\n});\n","import { flattenAndStringify, queryStringifyRequestData } from './utils.js';\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = flattenAndStringify(data);\n    for (const k in flattenedData) {\n        if (!Object.prototype.hasOwnProperty.call(flattenedData, k)) {\n            continue;\n        }\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nexport function multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, queryStringifyRequestData(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\n","// File generated from our OpenAPI spec\nimport { multipartRequestDataProcessor } from '../multipart.js';\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Files = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/files',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n        host: 'files.stripe.com',\n    }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/files/{file}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/files',\n        methodType: 'list',\n    }),\n    requestDataProcessor: multipartRequestDataProcessor,\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoiceitems' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoicePayments = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_payments/{invoice_payment}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_payments',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceRenderingTemplates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_rendering_templates/{template}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_rendering_templates',\n        methodType: 'list',\n    }),\n    archive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoice_rendering_templates/{template}/archive',\n    }),\n    unarchive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoice_rendering_templates/{template}/unarchive',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Invoices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/invoices/{invoice}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/invoices/{invoice}' }),\n    addLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/add_lines',\n    }),\n    attachPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/attach_payment',\n    }),\n    createPreview: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/create_preview',\n    }),\n    finalizeInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/finalize',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/{invoice}/lines',\n        methodType: 'list',\n    }),\n    markUncollectible: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/mark_uncollectible',\n    }),\n    pay: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}/pay' }),\n    removeLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/remove_lines',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/search',\n        methodType: 'search',\n    }),\n    sendInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/send',\n    }),\n    updateLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/update_lines',\n    }),\n    updateLineItem: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/lines/{line_item_id}',\n    }),\n    voidInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/void',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Mandates = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/mandates/{mandate}' }),\n});\n","'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { queryStringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${queryStringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents',\n        methodType: 'list',\n    }),\n    applyCustomerBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/apply_customer_balance',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/cancel',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/capture',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/confirm',\n    }),\n    incrementAuthorization: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/increment_authorization',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/search',\n        methodType: 'search',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/verify_microdeposits',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_links' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}/line_items',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodConfigurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodDomains = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains',\n        methodType: 'list',\n    }),\n    validate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}/validate',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethods = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_methods' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods',\n        methodType: 'list',\n    }),\n    attach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/attach',\n    }),\n    detach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/detach',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Payouts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payouts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/payouts/{payout}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/payouts/{payout}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payouts',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/cancel',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/reverse',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Plans = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/plans' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/plans/{plan}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/plans/{plan}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/plans',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/plans/{plan}' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Prices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/prices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/prices/{price}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/prices/{price}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices',\n        methodType: 'list',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices/search',\n        methodType: 'search',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/products' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/products/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/products/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/products/{id}' }),\n    createFeature: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/products/{product}/features',\n    }),\n    deleteFeature: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    listFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features',\n        methodType: 'list',\n    }),\n    retrieveFeature: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/search',\n        methodType: 'search',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PromotionCodes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/promotion_codes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        host: 'files.stripe.com',\n        streaming: true,\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/refunds' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/refunds/{refund}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/refunds/{refund}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/refunds',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/refunds/{refund}/cancel',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Reviews = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/reviews/{review}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reviews',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/reviews/{review}/approve',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupAttempts = StripeResource.extend({\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_attempts',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/setup_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/cancel',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/confirm',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/verify_microdeposits',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ShippingRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/shipping_rates' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sources = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/sources' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/sources/{source}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/sources/{source}' }),\n    listSourceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sources/{source}/source_transactions',\n        methodType: 'list',\n    }),\n    verify: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/sources/{source}/verify',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscription_items' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionSchedules = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/cancel',\n    }),\n    release: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/release',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Subscriptions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscriptions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}/discount',\n    }),\n    resume: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/resume',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/search',\n        methodType: 'search',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxCodes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_codes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_codes',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxIds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_ids' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_ids/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_ids',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/tax_ids/{id}' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_rates',\n        methodType: 'list',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tokens' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tokens/{token}' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Topups = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/topups' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/topups/{topup}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/topups',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}/cancel' }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transfers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/transfers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/transfers/{transfer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/transfers/{transfer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers',\n        methodType: 'list',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{id}/reversals',\n    }),\n    listReversals: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{id}/reversals',\n        methodType: 'list',\n    }),\n    retrieveReversal: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n    updateReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const WebhookEndpoints = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/webhook_endpoints' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n});\n","// File generated from our OpenAPI spec\nimport { resourceNamespace } from './ResourceNamespace.js';\nimport { Accounts as FinancialConnectionsAccounts } from './resources/FinancialConnections/Accounts.js';\nimport { ActiveEntitlements as EntitlementsActiveEntitlements } from './resources/Entitlements/ActiveEntitlements.js';\nimport { Alerts as BillingAlerts } from './resources/Billing/Alerts.js';\nimport { Authorizations as TestHelpersIssuingAuthorizations } from './resources/TestHelpers/Issuing/Authorizations.js';\nimport { Authorizations as IssuingAuthorizations } from './resources/Issuing/Authorizations.js';\nimport { Calculations as TaxCalculations } from './resources/Tax/Calculations.js';\nimport { Cardholders as IssuingCardholders } from './resources/Issuing/Cardholders.js';\nimport { Cards as TestHelpersIssuingCards } from './resources/TestHelpers/Issuing/Cards.js';\nimport { Cards as IssuingCards } from './resources/Issuing/Cards.js';\nimport { Configurations as BillingPortalConfigurations } from './resources/BillingPortal/Configurations.js';\nimport { Configurations as TerminalConfigurations } from './resources/Terminal/Configurations.js';\nimport { ConfirmationTokens as TestHelpersConfirmationTokens } from './resources/TestHelpers/ConfirmationTokens.js';\nimport { ConnectionTokens as TerminalConnectionTokens } from './resources/Terminal/ConnectionTokens.js';\nimport { CreditBalanceSummary as BillingCreditBalanceSummary } from './resources/Billing/CreditBalanceSummary.js';\nimport { CreditBalanceTransactions as BillingCreditBalanceTransactions } from './resources/Billing/CreditBalanceTransactions.js';\nimport { CreditGrants as BillingCreditGrants } from './resources/Billing/CreditGrants.js';\nimport { CreditReversals as TreasuryCreditReversals } from './resources/Treasury/CreditReversals.js';\nimport { Customers as TestHelpersCustomers } from './resources/TestHelpers/Customers.js';\nimport { DebitReversals as TreasuryDebitReversals } from './resources/Treasury/DebitReversals.js';\nimport { Disputes as IssuingDisputes } from './resources/Issuing/Disputes.js';\nimport { EarlyFraudWarnings as RadarEarlyFraudWarnings } from './resources/Radar/EarlyFraudWarnings.js';\nimport { EventDestinations as V2CoreEventDestinations } from './resources/V2/Core/EventDestinations.js';\nimport { Events as V2CoreEvents } from './resources/V2/Core/Events.js';\nimport { Features as EntitlementsFeatures } from './resources/Entitlements/Features.js';\nimport { FinancialAccounts as TreasuryFinancialAccounts } from './resources/Treasury/FinancialAccounts.js';\nimport { InboundTransfers as TestHelpersTreasuryInboundTransfers } from './resources/TestHelpers/Treasury/InboundTransfers.js';\nimport { InboundTransfers as TreasuryInboundTransfers } from './resources/Treasury/InboundTransfers.js';\nimport { Locations as TerminalLocations } from './resources/Terminal/Locations.js';\nimport { MeterEventAdjustments as BillingMeterEventAdjustments } from './resources/Billing/MeterEventAdjustments.js';\nimport { MeterEventAdjustments as V2BillingMeterEventAdjustments } from './resources/V2/Billing/MeterEventAdjustments.js';\nimport { MeterEventSession as V2BillingMeterEventSession } from './resources/V2/Billing/MeterEventSession.js';\nimport { MeterEventStream as V2BillingMeterEventStream } from './resources/V2/Billing/MeterEventStream.js';\nimport { MeterEvents as BillingMeterEvents } from './resources/Billing/MeterEvents.js';\nimport { MeterEvents as V2BillingMeterEvents } from './resources/V2/Billing/MeterEvents.js';\nimport { Meters as BillingMeters } from './resources/Billing/Meters.js';\nimport { Orders as ClimateOrders } from './resources/Climate/Orders.js';\nimport { OutboundPayments as TestHelpersTreasuryOutboundPayments } from './resources/TestHelpers/Treasury/OutboundPayments.js';\nimport { OutboundPayments as TreasuryOutboundPayments } from './resources/Treasury/OutboundPayments.js';\nimport { OutboundTransfers as TestHelpersTreasuryOutboundTransfers } from './resources/TestHelpers/Treasury/OutboundTransfers.js';\nimport { OutboundTransfers as TreasuryOutboundTransfers } from './resources/Treasury/OutboundTransfers.js';\nimport { PersonalizationDesigns as TestHelpersIssuingPersonalizationDesigns } from './resources/TestHelpers/Issuing/PersonalizationDesigns.js';\nimport { PersonalizationDesigns as IssuingPersonalizationDesigns } from './resources/Issuing/PersonalizationDesigns.js';\nimport { PhysicalBundles as IssuingPhysicalBundles } from './resources/Issuing/PhysicalBundles.js';\nimport { Products as ClimateProducts } from './resources/Climate/Products.js';\nimport { Readers as TestHelpersTerminalReaders } from './resources/TestHelpers/Terminal/Readers.js';\nimport { Readers as TerminalReaders } from './resources/Terminal/Readers.js';\nimport { ReceivedCredits as TestHelpersTreasuryReceivedCredits } from './resources/TestHelpers/Treasury/ReceivedCredits.js';\nimport { ReceivedCredits as TreasuryReceivedCredits } from './resources/Treasury/ReceivedCredits.js';\nimport { ReceivedDebits as TestHelpersTreasuryReceivedDebits } from './resources/TestHelpers/Treasury/ReceivedDebits.js';\nimport { ReceivedDebits as TreasuryReceivedDebits } from './resources/Treasury/ReceivedDebits.js';\nimport { Refunds as TestHelpersRefunds } from './resources/TestHelpers/Refunds.js';\nimport { Registrations as TaxRegistrations } from './resources/Tax/Registrations.js';\nimport { ReportRuns as ReportingReportRuns } from './resources/Reporting/ReportRuns.js';\nimport { ReportTypes as ReportingReportTypes } from './resources/Reporting/ReportTypes.js';\nimport { Requests as ForwardingRequests } from './resources/Forwarding/Requests.js';\nimport { ScheduledQueryRuns as SigmaScheduledQueryRuns } from './resources/Sigma/ScheduledQueryRuns.js';\nimport { Secrets as AppsSecrets } from './resources/Apps/Secrets.js';\nimport { Sessions as BillingPortalSessions } from './resources/BillingPortal/Sessions.js';\nimport { Sessions as CheckoutSessions } from './resources/Checkout/Sessions.js';\nimport { Sessions as FinancialConnectionsSessions } from './resources/FinancialConnections/Sessions.js';\nimport { Settings as TaxSettings } from './resources/Tax/Settings.js';\nimport { Suppliers as ClimateSuppliers } from './resources/Climate/Suppliers.js';\nimport { TestClocks as TestHelpersTestClocks } from './resources/TestHelpers/TestClocks.js';\nimport { Tokens as IssuingTokens } from './resources/Issuing/Tokens.js';\nimport { TransactionEntries as TreasuryTransactionEntries } from './resources/Treasury/TransactionEntries.js';\nimport { Transactions as TestHelpersIssuingTransactions } from './resources/TestHelpers/Issuing/Transactions.js';\nimport { Transactions as FinancialConnectionsTransactions } from './resources/FinancialConnections/Transactions.js';\nimport { Transactions as IssuingTransactions } from './resources/Issuing/Transactions.js';\nimport { Transactions as TaxTransactions } from './resources/Tax/Transactions.js';\nimport { Transactions as TreasuryTransactions } from './resources/Treasury/Transactions.js';\nimport { ValueListItems as RadarValueListItems } from './resources/Radar/ValueListItems.js';\nimport { ValueLists as RadarValueLists } from './resources/Radar/ValueLists.js';\nimport { VerificationReports as IdentityVerificationReports } from './resources/Identity/VerificationReports.js';\nimport { VerificationSessions as IdentityVerificationSessions } from './resources/Identity/VerificationSessions.js';\nexport { Accounts as Account } from './resources/Accounts.js';\nexport { AccountLinks } from './resources/AccountLinks.js';\nexport { AccountSessions } from './resources/AccountSessions.js';\nexport { Accounts } from './resources/Accounts.js';\nexport { ApplePayDomains } from './resources/ApplePayDomains.js';\nexport { ApplicationFees } from './resources/ApplicationFees.js';\nexport { Balance } from './resources/Balance.js';\nexport { BalanceTransactions } from './resources/BalanceTransactions.js';\nexport { Charges } from './resources/Charges.js';\nexport { ConfirmationTokens } from './resources/ConfirmationTokens.js';\nexport { CountrySpecs } from './resources/CountrySpecs.js';\nexport { Coupons } from './resources/Coupons.js';\nexport { CreditNotes } from './resources/CreditNotes.js';\nexport { CustomerSessions } from './resources/CustomerSessions.js';\nexport { Customers } from './resources/Customers.js';\nexport { Disputes } from './resources/Disputes.js';\nexport { EphemeralKeys } from './resources/EphemeralKeys.js';\nexport { Events } from './resources/Events.js';\nexport { ExchangeRates } from './resources/ExchangeRates.js';\nexport { FileLinks } from './resources/FileLinks.js';\nexport { Files } from './resources/Files.js';\nexport { InvoiceItems } from './resources/InvoiceItems.js';\nexport { InvoicePayments } from './resources/InvoicePayments.js';\nexport { InvoiceRenderingTemplates } from './resources/InvoiceRenderingTemplates.js';\nexport { Invoices } from './resources/Invoices.js';\nexport { Mandates } from './resources/Mandates.js';\nexport { OAuth } from './resources/OAuth.js';\nexport { PaymentIntents } from './resources/PaymentIntents.js';\nexport { PaymentLinks } from './resources/PaymentLinks.js';\nexport { PaymentMethodConfigurations } from './resources/PaymentMethodConfigurations.js';\nexport { PaymentMethodDomains } from './resources/PaymentMethodDomains.js';\nexport { PaymentMethods } from './resources/PaymentMethods.js';\nexport { Payouts } from './resources/Payouts.js';\nexport { Plans } from './resources/Plans.js';\nexport { Prices } from './resources/Prices.js';\nexport { Products } from './resources/Products.js';\nexport { PromotionCodes } from './resources/PromotionCodes.js';\nexport { Quotes } from './resources/Quotes.js';\nexport { Refunds } from './resources/Refunds.js';\nexport { Reviews } from './resources/Reviews.js';\nexport { SetupAttempts } from './resources/SetupAttempts.js';\nexport { SetupIntents } from './resources/SetupIntents.js';\nexport { ShippingRates } from './resources/ShippingRates.js';\nexport { Sources } from './resources/Sources.js';\nexport { SubscriptionItems } from './resources/SubscriptionItems.js';\nexport { SubscriptionSchedules } from './resources/SubscriptionSchedules.js';\nexport { Subscriptions } from './resources/Subscriptions.js';\nexport { TaxCodes } from './resources/TaxCodes.js';\nexport { TaxIds } from './resources/TaxIds.js';\nexport { TaxRates } from './resources/TaxRates.js';\nexport { Tokens } from './resources/Tokens.js';\nexport { Topups } from './resources/Topups.js';\nexport { Transfers } from './resources/Transfers.js';\nexport { WebhookEndpoints } from './resources/WebhookEndpoints.js';\nexport const Apps = resourceNamespace('apps', { Secrets: AppsSecrets });\nexport const Billing = resourceNamespace('billing', {\n    Alerts: BillingAlerts,\n    CreditBalanceSummary: BillingCreditBalanceSummary,\n    CreditBalanceTransactions: BillingCreditBalanceTransactions,\n    CreditGrants: BillingCreditGrants,\n    MeterEventAdjustments: BillingMeterEventAdjustments,\n    MeterEvents: BillingMeterEvents,\n    Meters: BillingMeters,\n});\nexport const BillingPortal = resourceNamespace('billingPortal', {\n    Configurations: BillingPortalConfigurations,\n    Sessions: BillingPortalSessions,\n});\nexport const Checkout = resourceNamespace('checkout', {\n    Sessions: CheckoutSessions,\n});\nexport const Climate = resourceNamespace('climate', {\n    Orders: ClimateOrders,\n    Products: ClimateProducts,\n    Suppliers: ClimateSuppliers,\n});\nexport const Entitlements = resourceNamespace('entitlements', {\n    ActiveEntitlements: EntitlementsActiveEntitlements,\n    Features: EntitlementsFeatures,\n});\nexport const FinancialConnections = resourceNamespace('financialConnections', {\n    Accounts: FinancialConnectionsAccounts,\n    Sessions: FinancialConnectionsSessions,\n    Transactions: FinancialConnectionsTransactions,\n});\nexport const Forwarding = resourceNamespace('forwarding', {\n    Requests: ForwardingRequests,\n});\nexport const Identity = resourceNamespace('identity', {\n    VerificationReports: IdentityVerificationReports,\n    VerificationSessions: IdentityVerificationSessions,\n});\nexport const Issuing = resourceNamespace('issuing', {\n    Authorizations: IssuingAuthorizations,\n    Cardholders: IssuingCardholders,\n    Cards: IssuingCards,\n    Disputes: IssuingDisputes,\n    PersonalizationDesigns: IssuingPersonalizationDesigns,\n    PhysicalBundles: IssuingPhysicalBundles,\n    Tokens: IssuingTokens,\n    Transactions: IssuingTransactions,\n});\nexport const Radar = resourceNamespace('radar', {\n    EarlyFraudWarnings: RadarEarlyFraudWarnings,\n    ValueListItems: RadarValueListItems,\n    ValueLists: RadarValueLists,\n});\nexport const Reporting = resourceNamespace('reporting', {\n    ReportRuns: ReportingReportRuns,\n    ReportTypes: ReportingReportTypes,\n});\nexport const Sigma = resourceNamespace('sigma', {\n    ScheduledQueryRuns: SigmaScheduledQueryRuns,\n});\nexport const Tax = resourceNamespace('tax', {\n    Calculations: TaxCalculations,\n    Registrations: TaxRegistrations,\n    Settings: TaxSettings,\n    Transactions: TaxTransactions,\n});\nexport const Terminal = resourceNamespace('terminal', {\n    Configurations: TerminalConfigurations,\n    ConnectionTokens: TerminalConnectionTokens,\n    Locations: TerminalLocations,\n    Readers: TerminalReaders,\n});\nexport const TestHelpers = resourceNamespace('testHelpers', {\n    ConfirmationTokens: TestHelpersConfirmationTokens,\n    Customers: TestHelpersCustomers,\n    Refunds: TestHelpersRefunds,\n    TestClocks: TestHelpersTestClocks,\n    Issuing: resourceNamespace('issuing', {\n        Authorizations: TestHelpersIssuingAuthorizations,\n        Cards: TestHelpersIssuingCards,\n        PersonalizationDesigns: TestHelpersIssuingPersonalizationDesigns,\n        Transactions: TestHelpersIssuingTransactions,\n    }),\n    Terminal: resourceNamespace('terminal', {\n        Readers: TestHelpersTerminalReaders,\n    }),\n    Treasury: resourceNamespace('treasury', {\n        InboundTransfers: TestHelpersTreasuryInboundTransfers,\n        OutboundPayments: TestHelpersTreasuryOutboundPayments,\n        OutboundTransfers: TestHelpersTreasuryOutboundTransfers,\n        ReceivedCredits: TestHelpersTreasuryReceivedCredits,\n        ReceivedDebits: TestHelpersTreasuryReceivedDebits,\n    }),\n});\nexport const Treasury = resourceNamespace('treasury', {\n    CreditReversals: TreasuryCreditReversals,\n    DebitReversals: TreasuryDebitReversals,\n    FinancialAccounts: TreasuryFinancialAccounts,\n    InboundTransfers: TreasuryInboundTransfers,\n    OutboundPayments: TreasuryOutboundPayments,\n    OutboundTransfers: TreasuryOutboundTransfers,\n    ReceivedCredits: TreasuryReceivedCredits,\n    ReceivedDebits: TreasuryReceivedDebits,\n    TransactionEntries: TreasuryTransactionEntries,\n    Transactions: TreasuryTransactions,\n});\nexport const V2 = resourceNamespace('v2', {\n    Billing: resourceNamespace('billing', {\n        MeterEventAdjustments: V2BillingMeterEventAdjustments,\n        MeterEventSession: V2BillingMeterEventSession,\n        MeterEventStream: V2BillingMeterEventStream,\n        MeterEvents: V2BillingMeterEvents,\n    }),\n    Core: resourceNamespace('core', {\n        EventDestinations: V2CoreEventDestinations,\n        Events: V2CoreEvents,\n    }),\n});\n","import * as _Error from './Error.js';\nimport { RequestSender } from './RequestSender.js';\nimport { StripeResource } from './StripeResource.js';\nimport { createWebhooks } from './Webhooks.js';\nimport { ApiVersion } from './apiVersion.js';\nimport { CryptoProvider } from './crypto/CryptoProvider.js';\nimport { HttpClient, HttpClientResponse } from './net/HttpClient.js';\nimport * as resources from './resources.js';\nimport { createApiKeyAuthenticator, determineProcessUserAgentProperties, pascalToCamelCase, validateInteger, } from './utils.js';\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = ApiVersion;\nconst DEFAULT_TIMEOUT = 80000;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 5;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n    'authenticator',\n    'apiVersion',\n    'typescript',\n    'maxNetworkRetries',\n    'httpAgent',\n    'httpClient',\n    'timeout',\n    'host',\n    'port',\n    'protocol',\n    'telemetry',\n    'appInfo',\n    'stripeAccount',\n    'stripeContext',\n];\nconst defaultRequestSenderFactory = (stripe) => new RequestSender(stripe, StripeResource.MAX_BUFFERED_REQUEST_METRICS);\nexport function createStripe(platformFunctions, requestSender = defaultRequestSenderFactory) {\n    Stripe.PACKAGE_VERSION = '18.2.1';\n    Stripe.USER_AGENT = Object.assign({ bindings_version: Stripe.PACKAGE_VERSION, lang: 'node', publisher: 'stripe', uname: null, typescript: false }, determineProcessUserAgentProperties());\n    Stripe.StripeResource = StripeResource;\n    Stripe.resources = resources;\n    Stripe.HttpClient = HttpClient;\n    Stripe.HttpClientResponse = HttpClientResponse;\n    Stripe.CryptoProvider = CryptoProvider;\n    Stripe.webhooks = createWebhooks(platformFunctions);\n    function Stripe(key, config = {}) {\n        if (!(this instanceof Stripe)) {\n            return new Stripe(key, config);\n        }\n        const props = this._getPropsFromConfig(config);\n        this._platformFunctions = platformFunctions;\n        Object.defineProperty(this, '_emitter', {\n            value: this._platformFunctions.createEmitter(),\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n        this.VERSION = Stripe.PACKAGE_VERSION;\n        this.on = this._emitter.on.bind(this._emitter);\n        this.once = this._emitter.once.bind(this._emitter);\n        this.off = this._emitter.removeListener.bind(this._emitter);\n        const agent = props.httpAgent || null;\n        this._api = {\n            host: props.host || DEFAULT_HOST,\n            port: props.port || DEFAULT_PORT,\n            protocol: props.protocol || 'https',\n            basePath: DEFAULT_BASE_PATH,\n            version: props.apiVersion || DEFAULT_API_VERSION,\n            timeout: validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n            maxNetworkRetries: validateInteger('maxNetworkRetries', props.maxNetworkRetries, 2),\n            agent: agent,\n            httpClient: props.httpClient ||\n                (agent\n                    ? this._platformFunctions.createNodeHttpClient(agent)\n                    : this._platformFunctions.createDefaultHttpClient()),\n            dev: false,\n            stripeAccount: props.stripeAccount || null,\n            stripeContext: props.stripeContext || null,\n        };\n        const typescript = props.typescript || false;\n        if (typescript !== Stripe.USER_AGENT.typescript) {\n            // The mutation here is uncomfortable, but likely fastest;\n            // serializing the user agent involves shelling out to the system,\n            // and given some users may instantiate the library many times without switching between TS and non-TS,\n            // we only want to incur the performance hit when that actually happens.\n            Stripe.USER_AGENT.typescript = typescript;\n        }\n        if (props.appInfo) {\n            this._setAppInfo(props.appInfo);\n        }\n        this._prepResources();\n        this._setAuthenticator(key, props.authenticator);\n        this.errors = _Error;\n        this.webhooks = Stripe.webhooks;\n        this._prevRequestMetrics = [];\n        this._enableTelemetry = props.telemetry !== false;\n        this._requestSender = requestSender(this);\n        // Expose StripeResource on the instance too\n        // @ts-ignore\n        this.StripeResource = Stripe.StripeResource;\n    }\n    Stripe.errors = _Error;\n    Stripe.createNodeHttpClient = platformFunctions.createNodeHttpClient;\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    Stripe.createFetchHttpClient = platformFunctions.createFetchHttpClient;\n    /**\n     * Create a CryptoProvider which uses the built-in Node crypto libraries for\n     * its crypto operations.\n     */\n    Stripe.createNodeCryptoProvider = platformFunctions.createNodeCryptoProvider;\n    /**\n     * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n     * Crypto API spec for its crypto operations.\n     *\n     * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n     * is passed, will default to the default `crypto.subtle` object in the global\n     * scope.\n     */\n    Stripe.createSubtleCryptoProvider =\n        platformFunctions.createSubtleCryptoProvider;\n    Stripe.prototype = {\n        // Properties are set in the constructor above\n        _appInfo: undefined,\n        on: null,\n        off: null,\n        once: null,\n        VERSION: null,\n        StripeResource: null,\n        webhooks: null,\n        errors: null,\n        _api: null,\n        _prevRequestMetrics: null,\n        _emitter: null,\n        _enableTelemetry: null,\n        _requestSender: null,\n        _platformFunctions: null,\n        rawRequest(method, path, params, options) {\n            return this._requestSender._rawRequest(method, path, params, options);\n        },\n        /**\n         * @private\n         */\n        _setAuthenticator(key, authenticator) {\n            if (key && authenticator) {\n                throw new Error(\"Can't specify both apiKey and authenticator\");\n            }\n            if (!key && !authenticator) {\n                throw new Error('Neither apiKey nor config.authenticator provided');\n            }\n            this._authenticator = key\n                ? createApiKeyAuthenticator(key)\n                : authenticator;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setAppInfo(info) {\n            if (info && typeof info !== 'object') {\n                throw new Error('AppInfo must be an object.');\n            }\n            if (info && !info.name) {\n                throw new Error('AppInfo.name is required');\n            }\n            info = info || {};\n            this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n                if (typeof info[prop] == 'string') {\n                    accum = accum || {};\n                    accum[prop] = info[prop];\n                }\n                return accum;\n            }, {});\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiField(key, value) {\n            this._api[key] = value;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getApiField(key) {\n            return this._api[key];\n        },\n        setClientId(clientId) {\n            this._clientId = clientId;\n        },\n        getClientId() {\n            return this._clientId;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getConstant: (c) => {\n            switch (c) {\n                case 'DEFAULT_HOST':\n                    return DEFAULT_HOST;\n                case 'DEFAULT_PORT':\n                    return DEFAULT_PORT;\n                case 'DEFAULT_BASE_PATH':\n                    return DEFAULT_BASE_PATH;\n                case 'DEFAULT_API_VERSION':\n                    return DEFAULT_API_VERSION;\n                case 'DEFAULT_TIMEOUT':\n                    return DEFAULT_TIMEOUT;\n                case 'MAX_NETWORK_RETRY_DELAY_SEC':\n                    return MAX_NETWORK_RETRY_DELAY_SEC;\n                case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n                    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n            }\n            return Stripe[c];\n        },\n        getMaxNetworkRetries() {\n            return this.getApiField('maxNetworkRetries');\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiNumberField(prop, n, defaultVal) {\n            const val = validateInteger(prop, n, defaultVal);\n            this._setApiField(prop, val);\n        },\n        getMaxNetworkRetryDelay() {\n            return MAX_NETWORK_RETRY_DELAY_SEC;\n        },\n        getInitialNetworkRetryDelay() {\n            return INITIAL_NETWORK_RETRY_DELAY_SEC;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent and uses a cached version for a slight\n         * speed advantage.\n         */\n        getClientUserAgent(cb) {\n            return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent by encoding a seeded object and\n         * fetching a uname from the system.\n         */\n        getClientUserAgentSeeded(seed, cb) {\n            this._platformFunctions.getUname().then((uname) => {\n                var _a;\n                const userAgent = {};\n                for (const field in seed) {\n                    if (!Object.prototype.hasOwnProperty.call(seed, field)) {\n                        continue;\n                    }\n                    userAgent[field] = encodeURIComponent((_a = seed[field]) !== null && _a !== void 0 ? _a : 'null');\n                }\n                // URI-encode in case there are unusual characters in the system's uname.\n                userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n                const client = this.getApiField('httpClient');\n                if (client) {\n                    userAgent.httplib = encodeURIComponent(client.getClientName());\n                }\n                if (this._appInfo) {\n                    userAgent.application = this._appInfo;\n                }\n                cb(JSON.stringify(userAgent));\n            });\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getAppInfoAsString() {\n            if (!this._appInfo) {\n                return '';\n            }\n            let formatted = this._appInfo.name;\n            if (this._appInfo.version) {\n                formatted += `/${this._appInfo.version}`;\n            }\n            if (this._appInfo.url) {\n                formatted += ` (${this._appInfo.url})`;\n            }\n            return formatted;\n        },\n        getTelemetryEnabled() {\n            return this._enableTelemetry;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _prepResources() {\n            for (const name in resources) {\n                if (!Object.prototype.hasOwnProperty.call(resources, name)) {\n                    continue;\n                }\n                // @ts-ignore\n                this[pascalToCamelCase(name)] = new resources[name](this);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _getPropsFromConfig(config) {\n            // If config is null or undefined, just bail early with no props\n            if (!config) {\n                return {};\n            }\n            // config can be an object or a string\n            const isString = typeof config === 'string';\n            const isObject = config === Object(config) && !Array.isArray(config);\n            if (!isObject && !isString) {\n                throw new Error('Config must either be an object or a string');\n            }\n            // If config is a string, we assume the old behavior of passing in a string representation of the api version\n            if (isString) {\n                return {\n                    apiVersion: config,\n                };\n            }\n            // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n            const values = Object.keys(config).filter((value) => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n            if (values.length > 0) {\n                throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n            }\n            return config;\n        },\n        parseThinEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            // parses and validates the event payload all in one go\n            return this.webhooks.constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt);\n        },\n    };\n    return Stripe;\n}\n","import { WebPlatformFunctions } from './platform/WebPlatformFunctions.js';\nimport { createStripe } from './stripe.core.js';\nexport const Stripe = createStripe(new WebPlatformFunctions());\nexport default Stripe;\n","// src/lib/stripeServer.ts\nimport Stripe from \"stripe\";\n\n/**\n * Edge-friendly Stripe client.\n * Make sure STRIPE_SECRET_KEY is set in Cloudflare Pages → Environment Variables.\n */\nexport const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  // ✅ value assigned to the normal property\n  apiVersion: \"2025-05-28.basil\",\n  // ↳ required for Edge\n  httpClient: Stripe.createFetchHttpClient(),\n});\n","import { CART_COOKIE, decodeCartCookie } from \"@/lib/cartCookie\";\nimport { stripe } from \"@/lib/stripeServer\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\nexport const runtime = \"edge\";\n\nexport async function POST(req: NextRequest) {\n  // 1. read the cookie sent by the browser\n  const cookie = req.cookies.get(CART_COOKIE)?.value;\n  const cart = decodeCartCookie(cookie);\n\n  if (!Object.keys(cart).length) {\n    return NextResponse.json({ error: \"Cart is empty\" }, { status: 400 });\n  }\n\n  // 2. Build Stripe line items\n  const line_items = Object.values(cart).map((l) => ({\n    price_data: {\n      currency: \"eur\",\n      unit_amount: l.sku.price * 100,\n      product_data: { name: l.sku.title },\n    },\n    quantity: l.qty,\n  }));\n\n  // 3. Create Checkout Session\n  const session = await stripe.checkout.sessions.create({\n    mode: \"payment\",\n    line_items,\n    success_url: `${req.nextUrl.origin}/success`,\n    cancel_url: `${req.nextUrl.origin}/cancelled`,\n  });\n\n  return NextResponse.json({ id: session.id });\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/petercowling/reception/base-shop/apps/cms/src/app/api/checkout-session/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/checkout-session/route\",\n        pathname: \"/api/checkout-session\",\n        filename: \"route\",\n        bundlePath: \"app/api/checkout-session/route\"\n    },\n    resolvedPagePath: \"/Users/petercowling/reception/base-shop/apps/cms/src/app/api/checkout-session/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fcheckout-session%2Froute&page=%2Fapi%2Fcheckout-session%2Froute&pagePath=private-next-app-dir%2Fapi%2Fcheckout-session%2Froute.ts&appDir=%2FUsers%2Fpetercowling%2Freception%2Fbase-shop%2Fapps%2Fcms%2Fsrc%2Fapp&appPaths=%2Fapi%2Fcheckout-session%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/checkout-session/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{\"NEXT_PUBLIC_PHASE\":\"demo\"},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.mjs\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/petercowling/reception/base-shop\",\"experimental\":{\"nodeMiddleware\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":9,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"viewTransition\":false,\"routerBFCache\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"useCache\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/petercowling/reception/base-shop/apps/cms/next.config.mjs\",\"configFileName\":\"next.config.mjs\",\"turbopack\":{\"root\":\"/Users/petercowling/reception/base-shop\"}}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/checkout-session/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/checkout-session/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n"],"names":["stripe","process","env","STRIPE_SECRET_KEY","Stripe","apiVersion","httpClient","createFetchHttpClient","runtime","POST","req","cart","decodeCartCookie","cookie","raw","JSON","parse","decodeURIComponent","cookies","get","CART_COOKIE","value","Object","keys","length","NextResponse","json","error","status","line_items","values","map","price_data","currency","unit_amount","l","sku","price","product_data","name","title","quantity","qty","session","checkout","sessions","create","mode","success_url","nextUrl","origin","cancel_url","id"],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199]}
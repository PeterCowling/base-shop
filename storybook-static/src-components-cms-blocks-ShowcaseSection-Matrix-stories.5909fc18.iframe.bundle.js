"use strict";(self.webpackChunkcms_monorepo=self.webpackChunkcms_monorepo||[]).push([[6774],{"./packages/i18n/src/resolveText.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function resolveText(value,locale,t){if("string"==typeof value)return value;if("key"===(null==value?void 0:value.type))return t(value.key,value.params);if("inline"===(null==value?void 0:value.type)){const chain=function fallbackChain(locale){switch(locale){case"de":return["de","en"];case"it":return["it","en"];default:return["en"]}}(locale);for(const loc of chain){var _value_value;const v=null===(_value_value=value.value)||void 0===_value_value?void 0:_value_value[loc];if("string"==typeof v&&v.length>0)return v}return""}return""}__webpack_require__.d(__webpack_exports__,{W:()=>resolveText})},"./packages/ui/src/components/cms/blocks/ShowcaseSection.Matrix.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,Error:()=>Error,Loading:()=>Loading,RTL:()=>RTL,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ShowcaseSection_Matrix_stories});var http=__webpack_require__("./node_modules/.pnpm/msw@2.11.3_@types+node@20.19.4_typescript@5.8.3/node_modules/msw/lib/core/http.mjs"),delay=__webpack_require__("./node_modules/.pnpm/msw@2.11.3_@types+node@20.19.4_typescript@5.8.3/node_modules/msw/lib/core/delay.mjs"),HttpResponse=__webpack_require__("./node_modules/.pnpm/msw@2.11.3_@types+node@20.19.4_typescript@5.8.3/node_modules/msw/lib/core/HttpResponse.mjs"),ShowcaseSection=__webpack_require__("./packages/ui/src/components/cms/blocks/ShowcaseSection.tsx"),products=__webpack_require__("./packages/platform-core/src/products/index.ts"),createStories=__webpack_require__("./packages/ui/src/story-utils/createStories.ts");const ShowcaseSection_fixtures_namespaceObject=JSON.parse('{"preset":"featured","layout":"carousel","gridCols":3}');var types=__webpack_require__("./node_modules/.pnpm/zod@3.25.73/node_modules/zod/v3/types.js"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const meta={title:"CMS Blocks/ShowcaseSection/Matrix",component:ShowcaseSection.A,tags:["autodocs"],parameters:{docs:{description:{component:'Showcase of product recommendations. Supports carousel and grid layouts; stories mock API to demonstrate loading/empty/error and RTL.\n\nUsage:\n\n```tsx\nimport ShowcaseSection from \'./ShowcaseSection\';\n\n<ShowcaseSection preset="featured" layout="carousel" />\n<ShowcaseSection preset="bestsellers" layout="grid" gridCols={3} />\n\n// Key args: preset, layout (\'carousel\'|\'grid\'), gridCols\n```'}}},args:{preset:"featured",layout:"carousel"}},ShowcaseSection_Matrix_stories=meta,baseArgs=meta.args,FixtureSchema=types.Ik({preset:types.k5(["featured","new","bestsellers","clearance","limited"]).optional(),layout:types.k5(["carousel","grid"]).optional(),gridCols:types.ai().optional()});try{FixtureSchema.parse(ShowcaseSection_fixtures_namespaceObject)}catch(e){console.error("Invalid ShowcaseSection fixture:",e)}const Default=(0,createStories.T)(baseArgs,{},"default",{a11y:!0,viewports:["desktop"],tags:["visual"],docsDescription:"Carousel layout showing recommendations for the selected preset."}),Loading={...(0,createStories.T)(baseArgs,{},"loading",{viewports:["mobile1"],tags:["visual"],docsDescription:"Delays API to demonstrate the built-in LoadingState."}),parameters:{msw:{handlers:[http.L.get("/api/recommendations",async()=>(await(0,delay.cb)(1500),HttpResponse.c.json(products.zv.slice(0,6),{status:200})))]}}},Empty={...(0,createStories.T)(baseArgs,{layout:"grid",gridCols:3},"empty",{a11y:!0,viewports:["mobile1"],tags:["visual"],docsDescription:"Grid layout returning an empty list."}),parameters:{msw:{handlers:[http.L.get("/api/recommendations",async()=>(await(0,delay.cb)(50),HttpResponse.c.json([],{status:200})))]}}},Error={...(0,createStories.T)(baseArgs,{},"error",{a11y:!0,critical:!0,viewports:["desktop"],tags:["visual","ci"],docsDescription:"Forces a 500 to validate error surfaces and a11y."}),parameters:{msw:{handlers:[http.L.get("/api/recommendations",async()=>(await(0,delay.cb)(50),HttpResponse.c.json({error:"mock-error"},{status:500})))]}}},RTL=(0,createStories.T)(baseArgs,{},"default",{rtl:!0,viewports:["mobile1"],tags:["visual"],docsDescription:"RTL sample for both carousel and grid layouts."}),__namedExportsOrder=["Default","Loading","Empty","Error","RTL"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"makeStateStory(baseArgs, {}, 'default', {\n  a11y: true,\n  viewports: ['desktop'],\n  tags: ['visual'],\n  docsDescription: 'Carousel layout showing recommendations for the selected preset.'\n})",...Default.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  ...makeStateStory(baseArgs, {}, 'loading', {\n    viewports: ['mobile1'],\n    tags: ['visual'],\n    docsDescription: 'Delays API to demonstrate the built-in LoadingState.'\n  }),\n  parameters: {\n    msw: {\n      handlers: [http.get('/api/recommendations', async () => {\n        await delay(1500);\n        return HttpResponse.json(PRODUCTS.slice(0, 6), {\n          status: 200\n        });\n      })]\n    }\n  }\n}",...Loading.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"{\n  ...makeStateStory(baseArgs, {\n    layout: 'grid',\n    gridCols: 3\n  }, 'empty', {\n    a11y: true,\n    viewports: ['mobile1'],\n    tags: ['visual'],\n    docsDescription: 'Grid layout returning an empty list.'\n  }),\n  parameters: {\n    msw: {\n      handlers: [http.get('/api/recommendations', async () => {\n        await delay(50);\n        return HttpResponse.json([], {\n          status: 200\n        });\n      })]\n    }\n  }\n}",...Empty.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  ...makeStateStory(baseArgs, {}, 'error', {\n    a11y: true,\n    critical: true,\n    viewports: ['desktop'],\n    tags: ['visual', 'ci'],\n    docsDescription: 'Forces a 500 to validate error surfaces and a11y.'\n  }),\n  parameters: {\n    msw: {\n      handlers: [http.get('/api/recommendations', async () => {\n        await delay(50);\n        return HttpResponse.json({\n          error: 'mock-error'\n        }, {\n          status: 500\n        });\n      })]\n    }\n  }\n}",...Error.parameters?.docs?.source}}},RTL.parameters={...RTL.parameters,docs:{...RTL.parameters?.docs,source:{originalSource:"makeStateStory(baseArgs, {}, 'default', {\n  rtl: true,\n  viewports: ['mobile1'],\n  tags: ['visual'],\n  docsDescription: 'RTL sample for both carousel and grid layouts.'\n})",...RTL.parameters?.docs?.source}}}},"./packages/ui/src/story-utils/createStories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function makeStateStory(base,patch,state,opts={}){const{a11y=!0,critical=!1,rtl=!1,viewports=[],tags=[],docsDescription}=opts,parameters={a11y:{disable:!a11y},dataState:state};rtl&&(parameters.rtl=!0),viewports.length&&(parameters.viewport={defaultViewport:viewports[0]}),docsDescription&&(parameters.docs={description:{story:docsDescription}});const computedTags=["autodocs",a11y?"a11y":"no-a11y",critical?"critical":"noncritical",...tags];parameters.chromatic={disable:!computedTags.includes("visual")};return{args:{...base,...patch},parameters,tags:computedTags}}__webpack_require__.d(__webpack_exports__,{T:()=>makeStateStory})}}]);
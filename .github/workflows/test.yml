name: Workspace CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  workspaces:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v3
      - id: set-matrix
        run: |
          matrix=$(pnpm list -r --depth -1 --json | node -e "const fs=require('fs');const list=JSON.parse(fs.readFileSync(0,'utf8'));const cwd=process.cwd();const arr=list.filter(p=>p.path!==cwd).map(p=>p.path.replace(cwd+'/', ''));process.stdout.write(JSON.stringify(arr));")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  quality:
    needs: workspaces
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJSON(needs.workspaces.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v3
      - run: pnpm install
      - run: pnpm -r build
      - run: pnpm --filter ./${{ matrix.workspace }} lint
      - run: pnpm --filter ./${{ matrix.workspace }} typecheck
      - run: pnpm --filter ./${{ matrix.workspace }} test -- --coverage --coverage-dir=coverage
      - run: pnpm --filter ./${{ matrix.workspace }} coverage
        if: matrix.workspace == 'apps/api'
      - run: pnpm --filter ./${{ matrix.workspace }} e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.workspace }}
          path: ${{ matrix.workspace }}/coverage
          if-no-files-found: ignore

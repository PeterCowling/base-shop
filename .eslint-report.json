[{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/pages/new/component/ComponentEditorClient.tsx","messages":[{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":31,"column":40,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":31,"endColumn":62},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":36,"column":25,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":36,"endColumn":65},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":51,"column":28,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":51,"endColumn":53},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":60,"column":37,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":60,"endColumn":53},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":66,"column":45,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":66,"endColumn":59}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useCallback, useMemo, useState } from \"react\";\nimport type { PageComponent } from \"@acme/types\";\nimport { ulid } from \"ulid\";\nimport { ComponentEditor } from \"@ui/components/cms/page-builder\";\nimport { saveLibrary } from \"@ui/components/cms/page-builder/libraryStore\";\n\nexport default function ComponentEditorClient() {\n  const initial = useMemo<PageComponent>(\n    () => ({ id: ulid(), type: \"Text\", text: \"Edit me\" }),\n    []\n  );\n  const [component, setComponent] = useState<PageComponent>(initial);\n  const [label, setLabel] = useState<string>(\"\");\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const onChange = useCallback((patch: Partial<PageComponent>) => {\n    setComponent((prev: PageComponent) => ({ ...prev, ...patch } as PageComponent));\n  }, []);\n\n  const onResize = useCallback((patch: Partial<PageComponent>) => {\n    setComponent((prev: PageComponent) => ({ ...prev, ...patch } as PageComponent));\n  }, []);\n\n  return (\n    <div className=\"space-y-4\">\n      <ComponentEditor component={component} onChange={onChange} onResize={onResize} />\n      <div className=\"rounded border p-3 space-y-2\">\n        <div className=\"font-semibold\">Save to Global Library</div>\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"text\"\n            className=\"min-w-0 flex-1 rounded border px-2 py-1 text-sm min-h-10\"\n            placeholder=\"Component name (e.g. Hero, Promo Card)\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            aria-label=\"Component name\"\n          />\n          <button\n            type=\"button\"\n            className=\"rounded border px-3 py-1 text-sm min-h-10 min-w-10\"\n            disabled={saving || !label.trim()}\n            onClick={async () => {\n              setSaving(true);\n              setMessage(\"\");\n              try {\n                const item = { id: ulid(), label: label.trim(), template: component, createdAt: Date.now() };\n                await saveLibrary(\"_global\", item);\n                setMessage(\"Saved to Global Library\");\n              } catch (err) {\n                console.error(err);\n                setMessage(\"Save failed\");\n              } finally {\n                setSaving(false);\n              }\n            }}\n          >\n            {saving ? \"Saving...\" : \"Save to Global\"}\n          </button>\n        </div>\n        {message && <div className=\"text-xs text-muted-foreground\" aria-live=\"polite\">{message}</div>}\n      </div>\n      <div className=\"rounded border p-3 text-xs\">\n        <div className=\"mb-1 font-semibold\">Component JSON</div>\n        <pre className=\"whitespace-pre-wrap break-all text-xs leading-snug\">\n          {JSON.stringify(component, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/pages/page.tsx","messages":[{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":16,"column":34,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":18,"endColumn":11},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":19,"column":62,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":21,"endColumn":11},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":22,"column":58,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":24,"endColumn":11},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":42,"column":70,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":44,"endColumn":17},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":48,"column":114,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":50,"endColumn":15}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/app/cms/pages/page.tsx\n\nimport Link from \"next/link\";\nimport { listShops } from \"../../../lib/listShops\";\nimport { Card, CardContent } from \"@/components/atoms/shadcn\";\nimport { Tag } from \"@ui/components/atoms\";\nimport { Grid } from \"@ui/components/atoms/primitives/Grid\";\n\nexport default async function PagesIndexPage() {\n  const shops = await listShops();\n\n  return (\n    <div className=\"space-y-8 text-foreground\">\n      <section className=\"relative overflow-hidden rounded-3xl border border-border-1 bg-hero-contrast text-hero-foreground shadow-elevation-4\">\n        <div className=\"relative space-y-4 px-6 py-7\">\n          <Tag variant=\"default\">\n            Content Â· Choose a shop\n          </Tag>\n          <h1 className=\"text-3xl font-semibold md:text-4xl\">\n            Start crafting the story for each storefront\n          </h1>\n          <p className=\"text-sm text-hero-foreground/90\">\n            Select a shop to manage its landing pages, navigation, and editorial layouts.\n          </p>\n        </div>\n      </section>\n\n      <section>\n        <Card className=\"border border-border-1 bg-surface-2 shadow-elevation-3\">\n          <CardContent className=\"p-6\">\n            <Grid cols={1} gap={4} className=\"sm:grid-cols-2 lg:grid-cols-3\">\n            {shops.map((shop) => (\n              <Link\n                key={shop}\n                href={`/cms/shop/${shop}/pages/edit/page`}\n                className=\"group rounded-2xl border border-border-1 bg-surface-2 px-4 py-5 text-sm font-medium text-foreground shadow-elevation-1 transition hover:border-border-3 hover:bg-surface-3\"\n              >\n                <span className=\"block text-xs uppercase tracking-wider text-foreground\">\n                  Shop\n                </span>\n                <span className=\"text-lg font-semibold text-foreground\">{shop.toUpperCase()}</span>\n                <span className=\"mt-2 block text-xs text-foreground\">\n                  Manage static pages, navigation routes, and published experiences.\n                </span>\n              </Link>\n            ))}\n            {shops.length === 0 && (\n              <div className=\"rounded-2xl border border-border-1 bg-surface-2 px-4 py-5 text-sm text-foreground\">\n                No shops found yet.\n              </div>\n            )}\n            </Grid>\n          </CardContent>\n        </Card>\n      </section>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/ra/RaDashboardClient.tsx","messages":[{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":36,"column":18,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":36,"endColumn":39},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":41,"column":12,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":41,"endColumn":29},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":42,"column":18,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":42,"endColumn":43},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":48,"column":18,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":48,"endColumn":41},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":54,"column":18,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":54,"endColumn":40},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":98,"column":57,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":98,"endColumn":77},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":99,"column":54,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":99,"endColumn":77},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":100,"column":55,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":100,"endColumn":78},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":101,"column":53,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":101,"endColumn":72},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":124,"column":32,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":124,"endColumn":102},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":132,"column":76,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":134,"endColumn":9},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":137,"column":52,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":137,"endColumn":72},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":138,"column":58,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":140,"endColumn":13},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":169,"column":55,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":169,"endColumn":68},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":170,"column":60,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":172,"endColumn":15},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":182,"column":21,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":182,"endColumn":79},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":184,"column":25,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":184,"endColumn":76},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":185,"column":25,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":185,"endColumn":123},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":200,"column":29,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":200,"endColumn":59},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":211,"column":55,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":211,"endColumn":74},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":212,"column":62,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":214,"endColumn":17},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":228,"column":56,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":229,"endColumn":13},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":239,"column":21,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":239,"endColumn":74},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":269,"column":24,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":271,"endColumn":23},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":283,"column":22,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":285,"endColumn":19}],"suppressedMessages":[],"errorCount":25,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useMemo, useState } from \"react\";\nimport type { ReturnAuthorization } from \"@acme/types\";\nimport { Alert, Tag } from \"@ui/components/atoms\";\nimport { Grid } from \"@ui/components/atoms/primitives/Grid\";\nimport { Stack } from \"@ui/components/atoms/primitives/Stack\";\nimport { Sidebar } from \"@ui/components/atoms/primitives/Sidebar\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Input,\n} from \"@/components/atoms/shadcn\";\nimport { cn } from \"@ui/utils/style\";\nimport Link from \"next/link\";\n\nexport interface RaDashboardProps {\n  ras: ReturnAuthorization[];\n  error?: string | null;\n}\n\ntype QuickFilterKey = \"all\" | \"pending\" | \"resolved\" | \"highRisk\";\n\ninterface QuickFilter {\n  key: QuickFilterKey;\n  label: string;\n  description: string;\n  test: (ra: ReturnAuthorization) => boolean;\n}\n\nconst quickFilters: QuickFilter[] = [\n  {\n    key: \"all\",\n    label: \"All\",\n    description: \"Every authorization\",\n    test: () => true,\n  },\n  {\n    key: \"pending\",\n    label: \"Awaiting review\",\n    description: \"Needs manual inspection\",\n    test: (ra) => /pending|open|awaiting/i.test(ra.status),\n  },\n  {\n    key: \"resolved\",\n    label: \"Resolved\",\n    description: \"Completed or refunded\",\n    test: (ra) => /approved|completed|closed|refunded/i.test(ra.status),\n  },\n  {\n    key: \"highRisk\",\n    label: \"High risk\",\n    description: \"Escalate immediately\",\n    test: (ra) => classifyRisk(ra) === \"high\",\n  },\n];\n\ntype RiskLevel = \"high\" | \"medium\" | \"low\";\n\nfunction classifyRisk(ra: ReturnAuthorization): RiskLevel {\n  const note = ra.inspectionNotes?.toLowerCase() ?? \"\";\n  const status = ra.status.toLowerCase();\n  if (/(fraud|chargeback|damage|broken|escalated)/.test(note) || /fraud|escalated/.test(status)) {\n    return \"high\";\n  }\n  if (/(manual|verify|awaiting|inspection)/.test(note) || /pending|hold|review/.test(status)) {\n    return \"medium\";\n  }\n  return \"low\";\n}\n\nfunction statusVariant(status: string): \"default\" | \"success\" | \"warning\" | \"destructive\" {\n  const normalized = status.toLowerCase();\n  if (/approved|completed|closed|resolved/.test(normalized)) return \"success\";\n  if (/pending|awaiting|hold|review/.test(normalized)) return \"warning\";\n  if (/rejected|fraud|cancelled|denied/.test(normalized)) return \"destructive\";\n  return \"default\";\n}\n\nfunction riskVariant(level: RiskLevel): \"default\" | \"warning\" | \"destructive\" | \"success\" {\n  if (level === \"high\") return \"destructive\";\n  if (level === \"medium\") return \"warning\";\n  return \"success\";\n}\n\nexport function RaDashboard({ ras, error }: RaDashboardProps) {\n  const [activeFilter, setActiveFilter] = useState<QuickFilterKey>(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const metrics = useMemo(() => {\n    const pending = ras.filter(quickFilters.find((f) => f.key === \"pending\")!.test)\n      .length;\n    const resolved = ras.filter(quickFilters.find((f) => f.key === \"resolved\")!.test)\n      .length;\n    const highRisk = ras.filter((ra) => classifyRisk(ra) === \"high\").length;\n    return [\n      { label: \"Active queue\", value: pending, caption: \"Awaiting attention\" },\n      { label: \"Resolved\", value: resolved, caption: \"Closed authorizations\" },\n      { label: \"High risk\", value: highRisk, caption: \"Escalations to triage\" },\n      { label: \"Total\", value: ras.length, caption: \"Records in system\" },\n    ];\n  }, [ras]);\n\n  const filtered = useMemo(() => {\n    const quick = quickFilters.find((filter) => filter.key === activeFilter) ?? quickFilters[0];\n    return ras.filter((ra) => {\n      const matchesQuick = quick.test(ra);\n      if (!matchesQuick) return false;\n      if (!searchTerm.trim()) return true;\n      const query = searchTerm.trim().toLowerCase();\n      return (\n        ra.raId.toLowerCase().includes(query) ||\n        ra.orderId.toLowerCase().includes(query) ||\n        (ra.inspectionNotes ?? \"\").toLowerCase().includes(query)\n      );\n    });\n  }, [ras, activeFilter, searchTerm]);\n\n  if (error) {\n    return (\n      <Alert variant=\"danger\" tone=\"soft\" title=\"Unable to load return authorizations\">\n        <p className=\"text-sm\">{error}</p>\n        <p className=\"text-xs\">Retry shortly or verify the data source connection for the RA service.</p>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6 text-foreground\">\n      <header className=\"space-y-3\">\n        <Tag variant=\"default\" className=\"bg-primary-soft text-foreground\">\n          Return authorizations\n        </Tag>\n        <div className=\"flex flex-wrap items-end justify-between gap-4\">\n          <div className=\"min-w-0 space-y-1\">\n            <h2 className=\"text-2xl font-semibold\">RA workflow overview</h2>\n            <p className=\"text-sm text-muted-foreground\">\n              Quickly identify escalations, filter by status, and move authorizations forward.\n            </p>\n          </div>\n        </div>\n      </header>\n\n      <section>\n        <Grid cols={1} gap={4} className=\"sm:grid-cols-2 xl:grid-cols-4\">\n          {metrics.map((metric) => (\n            <Card\n              key={metric.label}\n              className=\"border border-border-1 bg-surface-2\"\n            >\n              <CardContent className=\"space-y-1 px-4 py-3\">\n                <p className=\"text-xs uppercase tracking-wide text-muted-foreground\">\n                  {metric.label}\n                </p>\n                <p className=\"text-2xl font-semibold\">{metric.value}</p>\n                <p className=\"text-xs text-muted-foreground\">{metric.caption}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </Grid>\n      </section>\n\n      <section>\n        <Sidebar sideWidth=\"w-72\" gap={5} className=\"lg:items-start\">\n          <Card className=\"border border-border-1 bg-surface-2\">\n            <CardContent className=\"space-y-4 p-6\">\n            <div className=\"space-y-1\">\n              <h3 className=\"text-base font-semibold\">Quick filters</h3>\n              <p className=\"text-xs text-muted-foreground\">\n                Snap to a subset and broadcast the count in the live region below.\n              </p>\n            </div>\n            <Stack gap={2}>\n              {quickFilters.map((filter) => (\n                <button\n                  key={filter.key}\n                  type=\"button\"\n                  onClick={() => setActiveFilter(filter.key)}\n                  aria-pressed={activeFilter === filter.key}\n                  className={cn(\n                    \"rounded-xl border px-3 py-2 text-left text-sm transition\",\n                    activeFilter === filter.key\n                      ? \"border-primary/60 bg-primary-soft text-foreground\"\n                      : \"border-border-2 bg-surface-2 text-muted-foreground hover:border-primary/50 hover:bg-primary-soft\"\n                  )}\n                >\n                  <span className=\"block font-semibold\">{filter.label}</span>\n                  <span className=\"block text-xs text-muted-foreground\">{filter.description}</span>\n                </button>\n              ))}\n            </Stack>\n            <div className=\"space-y-1\">\n              <label className=\"text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                Search\n              </label>\n              <Input\n                value={searchTerm}\n                onChange={(event) => setSearchTerm(event.target.value)}\n                placeholder=\"Filter by RA, order, or note\"\n                className=\"border-border-2 bg-surface-2 text-foreground placeholder:text-muted-foreground\"\n              />\n            </div>\n          </CardContent>\n          </Card>\n\n          <Card className=\"border border-border-1 bg-surface-2\">\n            <CardContent className=\"space-y-4 p-6\">\n            <div className=\"flex flex-wrap items-start justify-between gap-3\">\n              <div className=\"min-w-0 space-y-1\">\n                <h3 className=\"text-lg font-semibold\">Authorization queue</h3>\n                <p className=\"text-xs text-muted-foreground\">\n                  Actions provide suggested follow-ups so teams can unblock customers quickly.\n                </p>\n              </div>\n              <Tag className=\"shrink-0\" variant=\"default\">\n                {filtered.length} showing\n              </Tag>\n            </div>\n            <div\n              role=\"status\"\n              aria-live=\"polite\"\n              aria-atomic=\"true\"\n              data-testid=\"ra-announce\"\n              data-cy=\"ra-announce\"\n              className=\"sr-only\"\n            >\n              Showing {filtered.length} of {ras.length} return authorizations\n            </div>\n            <Stack gap={3}>\n              {filtered.map((ra) => {\n                const risk = classifyRisk(ra);\n                return (\n                  <Card\n                    key={ra.raId}\n                    data-testid=\"ra-card\"\n                    data-cy=\"ra-card\"\n                  className={cn(\n                    \"border border-border-1 bg-surface-2 text-foreground\",\n                    risk === \"high\" && \"border-danger/40\",\n                    risk === \"medium\" && \"border-warning/40\"\n                  )}\n                >\n                    <CardContent className=\"space-y-3 p-6\">\n                    <div className=\"flex flex-wrap items-start justify-between gap-3\">\n                      <div className=\"min-w-0 space-y-1\">\n                        <p className=\"text-sm font-semibold\">RA {ra.raId}</p>\n                        <p className=\"text-xs text-muted-foreground\">Order {ra.orderId}</p>\n                      </div>\n                      <div className=\"flex shrink-0 flex-wrap gap-2\">\n                        <Tag variant={statusVariant(ra.status)}>{ra.status}</Tag>\n                        <Tag variant={riskVariant(risk)}>Risk: {risk}</Tag>\n                      </div>\n                    </div>\n                    {ra.inspectionNotes && (\n                      <p className=\"text-sm text-muted-foreground\">{ra.inspectionNotes}</p>\n                    )}\n                    <div className=\"flex flex-wrap gap-3\">\n                      <Button\n                        asChild\n                        className=\"h-9 rounded-lg bg-primary px-4 text-sm font-semibold text-primary-foreground hover:bg-primary/90\"\n                      >\n                        <Link href={`/cms/orders/${ra.orderId}`}>View order</Link>\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        className=\"h-9 rounded-lg border-border-2 bg-surface-2 text-sm text-foreground hover:bg-surface-3\"\n                      >\n                        Mark for follow-up\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n            {filtered.length === 0 && (\n              <Card className=\"border border-border-1 bg-surface-2 text-foreground\">\n                <CardContent className=\"space-y-3 px-6 py-6 text-center text-sm text-muted-foreground\">\n                  <Tag variant=\"warning\">\n                    No matches\n                  </Tag>\n                  <p>\n                    Try clearing filters or widening your search to surface more return authorizations.\n                  </p>\n                </CardContent>\n              </Card>\n            )}\n            </Stack>\n            </CardContent>\n          </Card>\n        </Sidebar>\n      </section>\n    </div>\n  );\n}\n\nexport default RaDashboard;\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/InviteUserForm.tsx","messages":[{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":39,"column":55,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":39,"endColumn":68},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":60,"column":59,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":60,"endColumn":77},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":74,"column":12,"nodeType":"JSXText","messageId":"hardcodedCopy","endLine":76,"endColumn":11},{"ruleId":"ds/no-hardcoded-copy","severity":2,"message":"Hardcoded copy detected. Wrap in t()/useTranslations() or add // i18n-exempt with justification.","line":112,"column":27,"nodeType":"Literal","messageId":"hardcodedCopy","endLine":112,"endColumn":44}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Button, Card, CardContent, Input, Tag } from \"@/components/atoms/shadcn\";\nimport { Tooltip } from \"@/components/atoms\";\nimport { Cluster } from \"@ui/components/atoms/primitives/Cluster\";\nimport { Inline } from \"@ui/components/atoms/primitives/Inline\";\n\nimport type { Role } from \"@cms/auth/roles\";\n\nimport type { InviteFormState } from \"./useRbacManagementPanel\";\nimport type { RoleDetail } from \"../components/roleDetails\";\n\ntype InviteUserFormProps = {\n  roles: Role[];\n  roleDetails: Record<Role, RoleDetail>;\n  form: InviteFormState;\n  helperText: string;\n  isInviting: boolean;\n  onFieldChange: (field: \"name\" | \"email\" | \"password\", value: string) => void;\n  onToggleRole: (role: Role) => void;\n  onSubmit: () => void;\n  onReset: () => void;\n};\n\nexport default function InviteUserForm({\n  roles,\n  roleDetails,\n  form,\n  helperText,\n  isInviting,\n  onFieldChange,\n  onToggleRole,\n  onSubmit,\n  onReset,\n}: InviteUserFormProps) {\n  return (\n    <Card>\n      <CardContent className=\"space-y-4\">\n        <Cluster gap={2} alignY=\"center\" justify=\"between\">\n          <h3 className=\"min-w-0 text-base font-semibold text-foreground\">Invite User</h3>\n          <Tag className=\"shrink-0\" variant=\"warning\">Manual invite</Tag>\n        </Cluster>\n        <div className=\"grid gap-3 sm:grid-cols-2\">\n          <label className=\"flex flex-col gap-1 text-sm\">\n            <span className=\"font-medium text-foreground\">Name</span>\n            <Input\n              name=\"name\"\n              value={form.name}\n              onChange={(event) => onFieldChange(\"name\", event.target.value)}\n            />\n          </label>\n          <label className=\"flex flex-col gap-1 text-sm\">\n            <span className=\"font-medium text-foreground\">Email</span>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              value={form.email}\n              onChange={(event) => onFieldChange(\"email\", event.target.value)}\n            />\n          </label>\n          <label className=\"flex flex-col gap-1 text-sm sm:col-span-2\">\n            <span className=\"font-medium text-foreground\">Temporary password</span>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              value={form.password}\n              onChange={(event) => onFieldChange(\"password\", event.target.value)}\n            />\n          </label>\n        </div>\n\n        <section className=\"space-y-3\" aria-labelledby=\"invite-roles\">\n          <p\n            id=\"invite-roles\"\n            className=\"text-xs font-semibold uppercase tracking-wide text-muted-foreground\"\n          >\n            Assign starter roles\n          </p>\n          <Cluster gap={2} role=\"group\" aria-label=\"Assign roles for the invitation\">\n            {roles.map((role) => {\n              const detail = roleDetails[role];\n              const isSelected = form.roles.includes(role);\n              return (\n                <Button\n                  key={role}\n                  type=\"button\"\n                  variant={isSelected ? \"default\" : \"outline\"}\n                  aria-pressed={isSelected}\n                  onClick={() => onToggleRole(role)}\n                  className=\"h-auto px-3 py-2 text-sm\"\n                >\n                  <Inline gap={2} alignY=\"center\">\n                    <span className=\"font-medium\">{detail?.title ?? role}</span>\n                    {detail && (\n                      <Tooltip text={detail.description}>\n                        <span\n                          aria-hidden=\"true\"\n                          className=\"text-xs text-muted-foreground underline decoration-dotted\"\n                        >\n                          ?\n                        </span>\n                      </Tooltip>\n                    )}\n                  </Inline>\n                </Button>\n              );\n            })}\n          </Cluster>\n          <p className=\"text-xs text-muted-foreground\">{helperText}</p>\n        </section>\n\n        <div className=\"flex flex-col gap-2 sm:flex-row\">\n          <Button type=\"button\" onClick={onSubmit} disabled={isInviting} className=\"flex-1\">\n            {isInviting ? \"Sending inviteâ¦\" : \"Send invite\"}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onReset}\n            disabled={isInviting}\n            className=\"flex-1\"\n          >\n            Clear form\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","usedDeprecatedRules":[]}]
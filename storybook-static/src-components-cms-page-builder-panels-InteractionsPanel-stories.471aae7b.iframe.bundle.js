"use strict";(self.webpackChunkcms_monorepo=self.webpackChunkcms_monorepo||[]).push([[8738],{"./packages/ui/src/components/cms/page-builder/panels/InteractionsPanel.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.3.5_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.53.2_react-d_b38198e836dabfde367dfef63fafdf09/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.3.5_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.53.2_react-d_b38198e836dabfde367dfef63fafdf09/node_modules/next/dist/compiled/react/index.js"),_InteractionsPanel__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/ui/src/components/cms/page-builder/panels/InteractionsPanel.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"CMS/Page Builder/Animations & Interactions",component:_InteractionsPanel__WEBPACK_IMPORTED_MODULE_2__.A,parameters:{docs:{description:{component:"Configurator for animations and interaction triggers on a selected page component."}}}},Basic={render:()=>{function StoryContent(){const[comp,setComp]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({id:"txt",type:"Text"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"max-w-md",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractionsPanel__WEBPACK_IMPORTED_MODULE_2__.A,{component:comp,handleInput:(k,v)=>setComp(c=>({...c,[k]:v}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"mt-2 text-xs font-mono",children:JSON.stringify(comp,null,2)})]})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryContent,{})}},__namedExportsOrder=["Basic"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    function StoryContent() {\n      // Use a known atom type to avoid `any` casts\n      const [comp, setComp] = useState<PageComponent>({\n        id: "txt",\n        type: "Text"\n      });\n      return <div className="max-w-md">\n          <InteractionsPanel component={comp} handleInput={(k, v) => setComp(c => ({\n          ...c,\n          [k]: v\n        }))} />\n          <pre className="mt-2 text-xs font-mono">{JSON.stringify(comp, null, 2)}</pre>\n        </div>;\n    }\n    return <StoryContent />;\n  }\n}',...Basic.parameters?.docs?.source}}}}}]);
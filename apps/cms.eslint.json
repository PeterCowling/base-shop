[{"filePath":"/Users/petercowling/base-shop/apps/cms/dev-hooks/stackdump.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/instrumentation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/jest.env.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/load-tests/cart.k6.js","messages":[{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Unexpected default export of anonymous function","line":23,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":60,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Load test for cart API.\n * Usage:\n *   API_BASE_URL=http://localhost:8788 k6 run cart.k6.js\n */\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\n\nexport const options = {\n  scenarios: {\n    cart: {\n      executor: 'constant-vus',\n      vus: 5,\n      duration: '30s',\n    },\n  },\n  thresholds: {\n    http_req_duration: ['p(95)<300'],\n    http_req_failed: ['rate<0.01'],\n  },\n};\n\nexport default function () {\n  const baseUrl = __ENV.API_BASE_URL;\n  const params = { headers: { 'Content-Type': 'application/json' } };\n\n  const getRes = http.get(`${baseUrl}/api/cart`);\n  check(getRes, {\n    'GET status 200': (r) => r.status === 200,\n  });\n\n  const postPayload = JSON.stringify({\n    sku: { id: 'green-sneaker' },\n    qty: 1,\n    size: '42',\n  });\n  const postRes = http.post(`${baseUrl}/api/cart`, postPayload, params);\n  check(postRes, {\n    'POST status 200': (r) => r.status === 200,\n  });\n\n  const cart = postRes.json('cart') || {};\n  const itemId = Object.keys(cart)[0];\n\n  if (itemId) {\n    const patchPayload = JSON.stringify({ id: itemId, qty: 2 });\n    const patchRes = http.patch(`${baseUrl}/api/cart`, patchPayload, params);\n    check(patchRes, {\n      'PATCH status 200': (r) => r.status === 200,\n    });\n\n    const deletePayload = JSON.stringify({ id: itemId });\n    const deleteRes = http.del(`${baseUrl}/api/cart`, deletePayload, params);\n    check(deleteRes, {\n      'DELETE status 200': (r) => r.status === 200,\n    });\n  }\n\n  sleep(1);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/load-tests/media-upload.k6.js","messages":[{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Unexpected default export of anonymous function","line":26,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":32,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Load test for CMS media upload.\n * Usage:\n *   CMS_BASE_URL=http://localhost:8789 k6 run media-upload.k6.js\n */\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\nimport encoding from 'k6/encoding';\n\nexport const options = {\n  scenarios: {\n    upload: {\n      executor: 'constant-vus',\n      vus: 5,\n      duration: '30s',\n    },\n  },\n  thresholds: {\n    http_req_duration: ['p(95)<2000'],\n    http_req_failed: ['rate<0.01'],\n  },\n};\n\nconst imgBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg==';\n\nexport default function () {\n  const bin = encoding.b64decode(imgBase64, 'binary');\n  const data = { file: http.file(bin, 'pixel.png', 'image/png') };\n  const res = http.post(`${__ENV.CMS_BASE_URL}/cms/api/media?shop=test`, data);\n  check(res, { 'status 200': (r) => r.status === 200 });\n  sleep(1);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/load-tests/upload-csv.k6.js","messages":[{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Unexpected default export of anonymous function","line":35,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":41,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Load test for uploading CSV product data to the CMS.\n * Usage:\n *   CMS_BASE_URL=http://localhost:8789 k6 run upload-csv.k6.js\n */\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\n\nexport const options = {\n  scenarios: {\n    upload: {\n      executor: 'constant-vus',\n      vus: 10,\n      duration: '30s',\n    },\n  },\n  thresholds: {\n    http_req_duration: ['p(95)<2000'],\n    http_req_failed: ['rate<0.01'],\n  },\n};\n\nfunction generateCsv(sizeBytes) {\n  const header = 'id,name,price\\n';\n  const row = '1,Sample Product,9.99\\n';\n  let data = header;\n  while (data.length < sizeBytes) {\n    data += row;\n  }\n  return data.slice(0, sizeBytes);\n}\n\nconst csvContent = generateCsv(5 * 1024 * 1024);\n\nexport default function () {\n  const url = `${__ENV.CMS_BASE_URL}/cms/api/upload-csv/test-shop`;\n  const payload = { file: http.file(csvContent, 'products.csv', 'text/csv') };\n  const res = http.post(url, payload);\n  check(res, { 'status 200': (r) => r.status === 200 });\n  sleep(1);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/next.config.mjs","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"node:fs\" with non literal argument at index 0","line":92,"column":9,"nodeType":"CallExpression","endLine":92,"endColumn":30},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found realpathSync from package \"node:fs\" with non literal argument at index 0","line":208,"column":39,"nodeType":"CallExpression","endLine":210,"endColumn":10},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"node:fs\" with non literal argument at index 0","line":255,"column":13,"nodeType":"CallExpression","endLine":255,"endColumn":34}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/next.config.mjs\nimport { existsSync, readdirSync, realpathSync } from \"node:fs\";\nimport { createRequire } from \"node:module\";\nimport path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\n\nconst require = createRequire(import.meta.url);\n\nlet hashGuardApplied = false;\nfunction ensureSafeWebpackHash(webpack) {\n  if (hashGuardApplied) return;\n  const util = webpack?.util;\n  if (!util?.createHash) return;\n\n  const guardPrototypeChain = (hash) => {\n    if (!hash || typeof hash !== \"object\") return;\n    let proto = hash;\n    const seen = new Set();\n    while (proto && proto !== Object.prototype) {\n      if (seen.has(proto)) break;\n      seen.add(proto);\n      const desc = Object.getOwnPropertyDescriptor(proto, \"update\");\n      if (desc?.value && typeof desc.value === \"function\" && !desc.value.__safeGuarded) {\n        const originalUpdate = desc.value;\n        const wrapped = function safeUpdate(data, encoding) {\n          if (data === undefined) return this;\n          return originalUpdate.call(this, data, encoding);\n        };\n        wrapped.__safeGuarded = true;\n        Object.defineProperty(proto, \"update\", { ...desc, value: wrapped });\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n  };\n\n  try {\n    guardPrototypeChain(util.createHash(\"xxhash64\"));\n  } catch {\n    /* ignore */\n  }\n  try {\n    guardPrototypeChain(util.createHash(\"sha256\"));\n  } catch {\n    /* ignore */\n  }\n\n  hashGuardApplied = true;\n}\n\n// Provide strong development defaults compatible with tightened validation\nconst DEV_NEXTAUTH = \"dev-nextauth-secret-32-chars-long-string!\";\nconst DEV_SESSION = \"dev-session-secret-32-chars-long-string!\";\nfunction ensureStrong(name, fallback) {\n  const val = process.env[name];\n  if (!val || val.length < 32) process.env[name] = fallback;\n}\nensureStrong(\"NEXTAUTH_SECRET\", DEV_NEXTAUTH);\nensureStrong(\"SESSION_SECRET\", DEV_SESSION);\n// Provide base URL for NextAuth callbacks in dev if missing\nprocess.env.NEXTAUTH_URL ??= \"http://localhost:3006\";\nprocess.env.CART_COOKIE_SECRET ??= \"dev-cart-secret\";\nprocess.env.CMS_SPACE_URL ??= \"https://cms.example.com\";\nprocess.env.CMS_ACCESS_TOKEN ??= \"placeholder-token\";\nprocess.env.SANITY_API_VERSION ??= \"2021-10-21\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst PNPM_VIRTUAL_STORE = path.resolve(__dirname, \"../../node_modules/.pnpm\");\n\nconst resolveFromPnpmStore = (pkg, subpath) => {\n  if (!existsSync(PNPM_VIRTUAL_STORE)) return null;\n  let entries = [];\n  try {\n    entries = readdirSync(PNPM_VIRTUAL_STORE, { withFileTypes: true });\n  } catch {\n    return null;\n  }\n\n  for (const entry of entries) {\n    if (!entry.isDirectory()) continue;\n    if (!entry.name.startsWith(`${pkg}@`)) continue;\n\n    const candidate = path.join(\n      PNPM_VIRTUAL_STORE,\n      entry.name,\n      \"node_modules\",\n      pkg,\n      subpath,\n    );\n\n    if (existsSync(candidate)) return candidate;\n  }\n\n  return null;\n};\n\nconst ENTITIES_DECODE_PATH =\n  resolveFromPnpmStore(\"entities\", \"dist/commonjs/decode.js\") ?? \"entities/lib/decode.js\";\nconst ENTITIES_ESCAPE_PATH =\n  resolveFromPnpmStore(\"entities\", \"dist/commonjs/escape.js\") ?? \"entities/lib/escape.js\";\n\n// Resolve concrete entry files once so every build target uses the same instance.\nconst REACT_INDEX = require.resolve(\"react\");\nconst REACT_DOM_INDEX = require.resolve(\"react-dom\");\nconst REACT_DOM_CLIENT = require.resolve(\"react-dom/client\");\nconst REACT_DOM_SERVER = require.resolve(\"react-dom/server\");\n\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  experimental: {\n    externalDir: true,\n  },\n  eslint: {\n    // Speed up CI and avoid blocking builds on lint-only rules\n    ignoreDuringBuilds: true,\n  },\n\n  // Keep heavy Node-only libs external on the server bundle\n  serverExternalPackages: [\n    \"lighthouse\",\n    \"puppeteer\",\n    \"yargs\",\n    \"resend\",\n    \"@react-email/render\",\n    \"html-to-text\",\n  ],\n\n  // Transpile workspace packages that ship TS/modern syntax\n  transpilePackages: [\n    \"@themes/base\",\n    \"@themes/bcd\",\n    \"@themes/brandx\",\n    \"@themes/dark\",\n    \"@acme/platform-core\",\n    \"@acme/ui\",\n    \"@acme/date-utils\",\n    \"@acme/lib\",\n    \"@acme/shared-utils\",\n    \"@acme/types\",\n    \"@acme/tailwind-config\",\n    \"@acme/design-tokens\",\n    \"@acme/configurator\",\n    \"@acme/telemetry\",\n    \"@acme/config\",\n    // NEW: transpile the theme package itself so Next can parse its TS\n    \"@acme/theme\",\n  ],\n\n  images: {\n    remotePatterns: [{ protocol: \"https\", hostname: \"**\" }],\n  },\n\n  webpack: (config, { dev, isServer, webpack }) => {\n    ensureSafeWebpackHash(webpack);\n    config.output ||= {};\n    // Webpack feeds `undefined` segments into the chunk hasher in dev; fall back\n    // to its tolerant default so compilation doesn't explode with crypto errors.\n    config.output.hashFunction = \"xxhash64\";\n\n    if (dev) {\n      // Re-enable persistent caching so navigation between steps isn't throttled by\n      // 60s recompiles on every edit. The hash guard above keeps the cache stable.\n      const cacheDir = path.join(__dirname, \".next\", \"cache\", \"webpack\");\n      config.cache = {\n        type: \"filesystem\",\n        cacheDirectory: cacheDir,\n        buildDependencies: {\n          config: [__filename],\n        },\n      };\n    }\n\n    config.resolve ||= {};\n    // Allow webpack to follow pnpm's symlinks so nested dependencies resolve correctly.\n    config.resolve.symlinks = true;\n    config.resolve.alias = {\n      ...(config.resolve.alias ?? {}),\n      \"@\": path.resolve(__dirname, \"src\"),\n      \"@acme/configurator\": path.resolve(\n        __dirname,\n        \"../../packages/configurator/src\",\n      ),\n      \"@acme/configurator/providers\": path.resolve(\n        __dirname,\n        \"../../packages/configurator/src/providers.ts\",\n      ),\n      \"drizzle-orm\": false,\n      \"entities/decode\": ENTITIES_DECODE_PATH,\n      \"entities/lib/decode.js\": ENTITIES_DECODE_PATH,\n      \"entities/escape\": ENTITIES_ESCAPE_PATH,\n      \"entities/lib/escape.js\": ENTITIES_ESCAPE_PATH,\n\n      // EXACT-MATCH ALIASES — do NOT shadow subpaths like `react/jsx-runtime`\n      react$: REACT_INDEX,\n      \"react-dom$\": REACT_DOM_INDEX,\n\n      // Useful concrete entries (do not use `$` here, these are explicit subpaths)\n      \"react-dom/client\": REACT_DOM_CLIENT,\n      \"react-dom/server\": REACT_DOM_SERVER,\n    };\n\n    if (config.resolve.alias[\"oidc-token-hash\"] === undefined) {\n      try {\n        const nextAuthEntry = require.resolve(\"next-auth\");\n        const nextAuthRequire = createRequire(nextAuthEntry);\n        const resolvedOidcTokenHash = realpathSync(\n          nextAuthRequire.resolve(\"oidc-token-hash\"),\n        );\n\n        config.resolve.alias[\"oidc-token-hash\"] = resolvedOidcTokenHash;\n      } catch {\n        // next-auth is optional for some builds; skip aliasing when absent.\n      }\n    }\n\n    if (!isServer) {\n      config.resolve.alias[\"@sentry/node\"] = false;\n      config.resolve.alias[\"@sentry/opentelemetry\"] = false;\n    }\n\n    const sharedUtilsPinoSymlink = path.resolve(\n      __dirname,\n      \"../../packages/shared-utils/node_modules/pino\",\n    );\n\n    // Turbopack keeps `resolve.symlinks` disabled for better pnpm support, but\n    // that prevents it from following the symlinked copy of `pino` to the\n    // virtual store. Manually alias the runtime dependencies so both the Edge\n    // and Node bundles can resolve them without needing to mutate pnpm's lock\n    // file during development.\n\n    if (existsSync(sharedUtilsPinoSymlink)) {\n      const pinoRealDir = realpathSync(sharedUtilsPinoSymlink);\n      const pinoDepsRoot = path.dirname(pinoRealDir);\n      const pinoRuntimeDeps = [\n        \"atomic-sleep\",\n        \"fast-redact\",\n        \"on-exit-leak-free\",\n        \"pino-abstract-transport\",\n        \"pino-std-serializers\",\n        \"process-warning\",\n        \"quick-format-unescaped\",\n        \"real-require\",\n        \"safe-stable-stringify\",\n        \"sonic-boom\",\n        \"thread-stream\",\n      ];\n\n      for (const dep of pinoRuntimeDeps) {\n        if (config.resolve.alias[dep] !== undefined) continue;\n\n        const candidate = path.join(pinoDepsRoot, dep);\n        if (existsSync(candidate)) {\n          config.resolve.alias[dep] = candidate;\n        }\n      }\n    }\n\n    // Map node: built-ins consistently\n    for (const mod of [\n      \"assert\",\n      \"buffer\",\n      \"child_process\",\n      \"crypto\",\n      \"fs\",\n      \"http\",\n      \"https\",\n      \"module\",\n      \"path\",\n      \"stream\",\n      \"string_decoder\",\n      \"timers\",\n      \"url\",\n      \"util\",\n      \"vm\",\n      \"zlib\",\n    ]) {\n      config.resolve.alias[`node:${mod}`] = mod;\n    }\n\n    return config;\n  },\n};\n\nexport default nextConfig;\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/accounts.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/blog.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/cloudflare.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/common/auth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/createShop.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/deleteSanityConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/deployShop.server.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs/promises\" with non literal argument at index 0","line":25,"column":27,"nodeType":"CallExpression","endLine":25,"endColumn":52},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs/promises\" with non literal argument at index 0","line":45,"column":30,"nodeType":"CallExpression","endLine":45,"endColumn":55}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/actions/deployShop.server.ts\n\"use server\";\n\nimport { deployShop, type DeployShopResult } from \"@platform-core/createShop\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport { writeJsonFile, withFileLock } from \"@/lib/server/jsonIO\";\nimport { ensureAuthorized } from \"./common/auth\";\n\nexport async function deployShopHosting(\n  id: string,\n  domain?: string\n): Promise<DeployShopResult> {\n  await ensureAuthorized();\n  return deployShop(id, domain);\n}\n\nexport async function getDeployStatus(\n  id: string\n): Promise<DeployShopResult | { status: \"pending\"; error?: string }> {\n  await ensureAuthorized();\n  try {\n    const file = path.join(resolveDataRoot(), id, \"deploy.json\");\n    const content = await fs.readFile(file, \"utf8\");\n    return JSON.parse(content) as DeployShopResult;\n  } catch (err) {\n    console.error(\"Failed to read deploy status\", err);\n    return { status: \"pending\", error: (err as Error).message };\n  }\n}\n\nexport async function updateDeployStatus(\n  id: string,\n  data: Partial<DeployShopResult> & {\n    domain?: string;\n    domainStatus?: string;\n    certificateStatus?: string;\n  }\n): Promise<void> {\n  await ensureAuthorized();\n  const file = path.join(resolveDataRoot(), id, \"deploy.json\");\n  try {\n    await withFileLock(file, async () => {\n      const existing = await fs.readFile(file, \"utf8\").catch(() => \"{}\");\n      const parsed = JSON.parse(existing) as Record<string, unknown>;\n      const updated = { ...parsed, ...data };\n      await writeJsonFile(file, updated);\n    });\n  } catch (err) {\n    console.error(\"Failed to write deploy status\", err);\n  }\n\n  if (data.domain) {\n    try {\n      const { updateShopInRepo } = await import(\n        \"@platform-core/repositories/shop.server\"\n      );\n      await updateShopInRepo(id, {\n        id,\n        domain: {\n          name: data.domain,\n          status: data.domainStatus,\n          certificateStatus: data.certificateStatus,\n        },\n      });\n    } catch (err) {\n      console.error(\"Failed to update shop domain\", err);\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/maintenance.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/media.helpers.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":74,"column":24,"nodeType":"CallExpression","endLine":74,"endColumn":63}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/actions/media.helpers.ts\n\nimport { validateShopName } from \"@platform-core/shops\";\nimport { promises as fs } from \"fs\";\nimport * as path from \"path\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\nimport { normalizeTagsInput } from \"./media/tagUtils\";\n\nexport type MediaMetadataEntry = {\n  title?: string;\n  altText?: string;\n  type?: \"image\" | \"video\";\n  tags?: string[];\n  uploadedAt?: string;\n  size?: number;\n};\n\nexport type MediaMetadata = Record<string, MediaMetadataEntry>;\n\nexport function uploadsDir(shop: string): string {\n  const safeShop = validateShopName(shop);\n  return path.join(process.cwd(), \"public\", \"uploads\", safeShop);\n}\n\nexport function metadataPath(shop: string): string {\n  return path.join(uploadsDir(shop), \"metadata.json\");\n}\n\nfunction sanitizeMetadataEntry(value: unknown): MediaMetadataEntry {\n  if (typeof value === \"string\") {\n    return { title: value };\n  }\n\n  if (!value || typeof value !== \"object\") {\n    return {};\n  }\n\n  const record = value as Record<string, unknown>;\n  const entry: MediaMetadataEntry = {};\n\n  if (typeof record.title === \"string\") {\n    entry.title = record.title;\n  }\n  if (typeof record.altText === \"string\") {\n    entry.altText = record.altText;\n  }\n\n  if (record.type === \"video\") {\n    entry.type = \"video\";\n  } else if (record.type === \"image\") {\n    entry.type = \"image\";\n  }\n\n  const tags = normalizeTagsInput(record.tags);\n  if (tags) {\n    entry.tags = tags;\n  } else if (Array.isArray(record.tags) && record.tags.length === 0) {\n    entry.tags = [];\n  }\n\n  if (typeof record.uploadedAt === \"string\") {\n    entry.uploadedAt = record.uploadedAt;\n  }\n\n  if (typeof record.size === \"number\" && Number.isFinite(record.size)) {\n    entry.size = record.size;\n  }\n\n  return entry;\n}\n\nexport async function readMetadata(shop: string): Promise<MediaMetadata> {\n  try {\n    const data = await fs.readFile(metadataPath(shop), \"utf8\");\n    const parsed = JSON.parse(data) as unknown;\n\n    if (!parsed || typeof parsed !== \"object\") {\n      return {};\n    }\n\n    return Object.fromEntries(\n      Object.entries(parsed as Record<string, unknown>).map(([key, value]) => [\n        key,\n        sanitizeMetadataEntry(value),\n      ])\n    );\n  } catch {\n    return {};\n  }\n}\n\nexport async function writeMetadata(\n  shop: string,\n  data: MediaMetadata\n): Promise<void> {\n  await writeJsonFile(metadataPath(shop), data);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/media.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/media/mediaFileService.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found stat from package \"fs\" with non literal argument at index 0","line":53,"column":26,"nodeType":"CallExpression","endLine":53,"endColumn":59},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs\" with non literal argument at index 0","line":75,"column":23,"nodeType":"CallExpression","endLine":75,"endColumn":38},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs\" with non literal argument at index 0","line":109,"column":9,"nodeType":"CallExpression","endLine":109,"endColumn":43},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":159,"column":9,"nodeType":"CallExpression","endLine":159,"endColumn":55},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found unlink from package \"fs\" with non literal argument at index 0","line":216,"column":9,"nodeType":"CallExpression","endLine":216,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/actions/media/mediaFileService.ts\n\nimport { validateShopName } from \"@platform-core/shops\";\nimport type { ImageOrientation, MediaItem } from \"@acme/types\";\nimport { promises as fs } from \"fs\";\nimport type { Stats } from \"fs\";\nimport * as path from \"path\";\nimport sharp from \"sharp\";\nimport { ulid } from \"ulid\";\n\nimport {\n  readMetadata,\n  uploadsDir,\n  writeMetadata,\n} from \"../media.helpers\";\nimport type { MediaMetadataEntry } from \"../media.helpers\";\nimport { normalizeTagsForStorage } from \"./tagUtils\";\n\nconst VIDEO_EXTENSIONS = new Set([\n  \".mp4\",\n  \".mov\",\n  \".mkv\",\n  \".webm\",\n  \".avi\",\n  \".m4v\",\n]);\n\nexport function inferMediaType(\n  filename: string,\n  declaredType?: MediaMetadataEntry[\"type\"]\n): \"image\" | \"video\" {\n  if (declaredType === \"video\") return \"video\";\n  if (declaredType === \"image\") return \"image\";\n  const ext = path.extname(filename).toLowerCase();\n  return VIDEO_EXTENSIONS.has(ext) ? \"video\" : \"image\";\n}\n\nexport async function buildMediaItem(\n  shop: string,\n  dir: string,\n  filename: string,\n  entry?: MediaMetadataEntry,\n  stats?: Stats\n): Promise<MediaItem> {\n  let size = entry?.size;\n  let uploadedAt = entry?.uploadedAt;\n\n  if (stats) {\n    if (size == null) size = stats.size;\n    if (uploadedAt == null) uploadedAt = stats.mtime.toISOString();\n  } else if (size == null || uploadedAt == null) {\n    try {\n      const stat = await fs.stat(path.join(dir, filename));\n      if (size == null) size = stat.size;\n      if (uploadedAt == null) uploadedAt = stat.mtime.toISOString();\n    } catch {\n      /* ignore missing stat information */\n    }\n  }\n\n  return {\n    url: path.posix.join(\"/uploads\", shop, filename),\n    title: entry?.title,\n    altText: entry?.altText,\n    tags: entry?.tags,\n    type: inferMediaType(filename, entry?.type),\n    size,\n    uploadedAt,\n  };\n}\n\nasync function collectMediaItems(shop: string): Promise<MediaItem[]> {\n  const safeShop = validateShopName(shop);\n  const dir = uploadsDir(safeShop);\n  const files = await fs.readdir(dir);\n  const meta = await readMetadata(safeShop);\n\n  const mediaFiles = files.filter((f) => f !== \"metadata.json\");\n  const items = await Promise.all(\n    mediaFiles.map((filename) => buildMediaItem(safeShop, dir, filename, meta[filename]))\n  );\n\n  return items;\n}\n\nexport async function listMediaFiles(shop: string): Promise<MediaItem[]> {\n  return collectMediaItems(shop);\n}\n\nexport type UploadMediaFileParams = {\n  shop: string;\n  file: File;\n  title?: string;\n  altText?: string;\n  tags?: string[];\n  requiredOrientation?: ImageOrientation;\n};\n\nexport async function uploadMediaFile({\n  shop,\n  file,\n  title,\n  altText,\n  tags,\n  requiredOrientation = \"landscape\",\n}: UploadMediaFileParams): Promise<MediaItem> {\n  const safeShop = validateShopName(shop);\n  const dir = uploadsDir(safeShop);\n  await fs.mkdir(dir, { recursive: true });\n\n  let type: \"image\" | \"video\";\n  let buffer: Buffer;\n\n  if (file.type.startsWith(\"image/\")) {\n    type = \"image\";\n    const maxSize = 5 * 1024 * 1024; // 5 MB\n    if (file.size > maxSize) throw new Error(\"File too large\");\n\n    buffer = Buffer.from(await file.arrayBuffer());\n    const { width, height } = await sharp(buffer).metadata();\n\n    if (\n      width &&\n      height &&\n      requiredOrientation === \"landscape\" &&\n      width < height\n    ) {\n      throw new Error(\"Image orientation must be landscape\");\n    }\n\n    if (\n      width &&\n      height &&\n      requiredOrientation === \"portrait\" &&\n      width >= height\n    ) {\n      throw new Error(\"Image orientation must be portrait\");\n    }\n\n    try {\n      await sharp(buffer).toBuffer();\n    } catch (err) {\n      if (err instanceof Error && /orientation must be/i.test(err.message)) {\n        throw err;\n      }\n      throw new Error(\"Failed to process image\");\n    }\n  } else if (file.type.startsWith(\"video/\")) {\n    type = \"video\";\n    const maxSize = 50 * 1024 * 1024; // 50 MB\n    if (file.size > maxSize) throw new Error(\"File too large\");\n    buffer = Buffer.from(await file.arrayBuffer());\n  } else {\n    throw new Error(\"Invalid file type\");\n  }\n\n  const ext = path.extname(file.name) || (type === \"video\" ? \".mp4\" : \".jpg\");\n  const filename = `${ulid()}${ext}`;\n  await fs.writeFile(path.join(dir, filename), buffer);\n\n  const size = typeof file.size === \"number\" ? file.size : buffer.byteLength;\n  const uploadedAt = new Date().toISOString();\n\n  const meta = await readMetadata(safeShop);\n  const entry: MediaMetadataEntry = {\n    title,\n    altText,\n    type,\n    size,\n    uploadedAt,\n  };\n\n  const normalizedTags = normalizeTagsForStorage(tags);\n  if (normalizedTags !== undefined) {\n    entry.tags = normalizedTags;\n  }\n\n  meta[filename] = entry;\n  await writeMetadata(safeShop, meta);\n\n  const result: MediaItem = {\n    url: path.posix.join(\"/uploads\", safeShop, filename),\n    title,\n    altText,\n    type,\n    size,\n    uploadedAt,\n  };\n\n  if (normalizedTags !== undefined) {\n    result.tags = normalizedTags;\n  }\n\n  return result;\n}\n\nexport async function deleteMediaFile(\n  shop: string,\n  filePath: string\n): Promise<void> {\n  const safeShop = validateShopName(shop);\n  const prefix = path.posix.join(\"/uploads\", safeShop) + \"/\";\n  const normalized = path.posix.normalize(filePath);\n\n  if (!normalized.startsWith(prefix)) throw new Error(\"Invalid file path\");\n\n  const filename = normalized.slice(prefix.length);\n  const dir = uploadsDir(safeShop);\n  const fullPath = path.join(dir, filename);\n\n  const relative = path.relative(dir, fullPath);\n  if (relative.startsWith(\"..\") || path.isAbsolute(relative)) {\n    throw new Error(\"Invalid file path\");\n  }\n\n  await fs.unlink(fullPath).catch(() => {\n    /* ignore – file might already be gone */\n  });\n\n  const meta = await readMetadata(safeShop);\n  if (meta[filename]) {\n    delete meta[filename];\n    await writeMetadata(safeShop, meta);\n  }\n}\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/media/mediaMetadataService.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found stat from package \"fs\" with non literal argument at index 0","line":75,"column":19,"nodeType":"CallExpression","endLine":75,"endColumn":36}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/actions/media/mediaMetadataService.ts\n\nimport { validateShopName } from \"@platform-core/shops\";\nimport type { MediaItem } from \"@acme/types\";\nimport { promises as fs } from \"fs\";\nimport type { Stats } from \"fs\";\nimport * as path from \"path\";\n\nimport { readMetadata, uploadsDir, writeMetadata } from \"../media.helpers\";\nimport type { MediaMetadataEntry } from \"../media.helpers\";\nimport { normalizeTagsForStorage } from \"./tagUtils\";\nimport { buildMediaItem, listMediaFiles, inferMediaType } from \"./mediaFileService\";\n\nfunction buildOverview(files: MediaItem[]) {\n  const totalBytes = files.reduce((sum, file) => sum + (file.size ?? 0), 0);\n  let imageCount = 0;\n  let videoCount = 0;\n  for (const file of files) {\n    if (file.type === \"video\") {\n      videoCount += 1;\n    } else {\n      imageCount += 1;\n    }\n  }\n\n  const recentUploads = [...files]\n    .sort((a, b) => {\n      const aTime = a.uploadedAt ? Date.parse(a.uploadedAt) : 0;\n      const bTime = b.uploadedAt ? Date.parse(b.uploadedAt) : 0;\n      const safeA = Number.isFinite(aTime) ? aTime : 0;\n      const safeB = Number.isFinite(bTime) ? bTime : 0;\n      return safeB - safeA;\n    })\n    .slice(0, 5);\n\n  return { files, totalBytes, imageCount, videoCount, recentUploads };\n}\n\nexport type MediaOverview = ReturnType<typeof buildOverview>;\n\nexport type UpdateMediaMetadataFields = {\n  title?: string | null;\n  altText?: string | null;\n  tags?: string[] | null;\n};\n\nexport type UpdateMediaMetadataParams = {\n  shop: string;\n  fileUrl: string;\n  fields: UpdateMediaMetadataFields;\n};\n\nexport async function updateMediaMetadataEntry({\n  shop,\n  fileUrl,\n  fields,\n}: UpdateMediaMetadataParams): Promise<MediaItem> {\n  const safeShop = validateShopName(shop);\n  const prefix = path.posix.join(\"/uploads\", safeShop) + \"/\";\n  const normalized = path.posix.normalize(fileUrl);\n\n  if (!normalized.startsWith(prefix)) throw new Error(\"Invalid file path\");\n\n  const filename = normalized.slice(prefix.length);\n  const dir = uploadsDir(safeShop);\n  const fullPath = path.join(dir, filename);\n\n  const relative = path.relative(dir, fullPath);\n  if (relative.startsWith(\"..\") || path.isAbsolute(relative)) {\n    throw new Error(\"Invalid file path\");\n  }\n\n  let stats: Stats | undefined;\n  try {\n    stats = await fs.stat(fullPath);\n  } catch (err) {\n    if ((err as NodeJS.ErrnoException)?.code === \"ENOENT\") {\n      throw new Error(\"Media file not found\");\n    }\n    throw err;\n  }\n\n  const meta = await readMetadata(safeShop);\n  const existing = meta[filename] ?? {};\n  const updated: MediaMetadataEntry = { ...existing };\n\n  if (\"title\" in fields) {\n    if (fields.title == null) {\n      delete updated.title;\n    } else {\n      updated.title = fields.title;\n    }\n  }\n\n  if (\"altText\" in fields) {\n    if (fields.altText == null) {\n      delete updated.altText;\n    } else {\n      updated.altText = fields.altText;\n    }\n  }\n\n  if (\"tags\" in fields) {\n    const normalizedTags = normalizeTagsForStorage(fields.tags);\n    if (normalizedTags === undefined) {\n      delete updated.tags;\n    } else {\n      updated.tags = normalizedTags;\n    }\n  }\n\n  if (!updated.type) {\n    updated.type = inferMediaType(filename, existing.type);\n  }\n\n  if (updated.size == null && stats) {\n    updated.size = stats.size;\n  }\n\n  if (!updated.uploadedAt) {\n    updated.uploadedAt = existing.uploadedAt ?? stats?.mtime.toISOString();\n  }\n\n  meta[filename] = updated;\n  await writeMetadata(safeShop, meta);\n\n  return buildMediaItem(safeShop, dir, filename, updated, stats);\n}\n\nexport async function getMediaOverviewForShop(\n  shop: string\n): Promise<MediaOverview> {\n  try {\n    const files = await listMediaFiles(shop);\n    return buildOverview(files);\n  } catch (err) {\n    if ((err as NodeJS.ErrnoException)?.code === \"ENOENT\") {\n      return buildOverview([]);\n    }\n    throw err;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/media/tagUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/create.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/delete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/draft.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/update.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/pages/validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/products.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/rbac.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/sanity.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/saveSanityConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/schemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/setupSanityBlog.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/shops.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/stockScheduler.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/actions/updateProduct.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/(auth)/login/LoginForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/(auth)/login/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/(auth)/signup/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/403/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/checkout/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/generateStaticParams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/page.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/product/[slug]/PdpClient.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/product/[slug]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/shop/ShopClient.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/[lang]/shop/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/auth/[...nextauth]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/blog/slug/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/campaigns/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/delete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/get.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/patch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/post.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/put.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/handlers/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cart/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/categories/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/cloudflare/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configurator-progress/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":49,"column":9,"nodeType":"CallExpression","endLine":49,"endColumn":40},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":52,"column":12,"nodeType":"CallExpression","endLine":52,"endColumn":38},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":52,"column":42,"nodeType":"CallExpression","endLine":52,"endColumn":68},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found renameSync from package \"fs\" with non literal argument at index 0,1","line":53,"column":9,"nodeType":"CallExpression","endLine":53,"endColumn":44},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":74,"column":23,"nodeType":"CallExpression","endLine":74,"endColumn":48},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found rename from package \"fs\" with non literal argument at index 0,1","line":99,"column":9,"nodeType":"CallExpression","endLine":99,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/app/api/configurator-progress/route.ts\nimport \"@acme/zod-utils/initZod\";\nimport { authOptions } from \"@cms/auth/options\";\nimport { getServerSession } from \"next-auth\";\nimport { NextResponse } from \"next/server\";\nimport { promises as fs } from \"fs\";\nimport * as fsSync from \"fs\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\nimport path from \"path\";\nimport {\n  configuratorStateSchema,\n  stepStatusSchema,\n  type StepStatus,\n} from \"@cms/app/cms/wizard/schema\";\nimport { z } from \"zod\";\n\ninterface UserRecord {\n  state: unknown;\n  completed: Record<string, StepStatus>;\n}\n\ninterface DB {\n  [userId: string]: UserRecord | unknown;\n}\n\nconst dbSchema = z.record(z.unknown());\n\nconst putBodySchema = z\n  .object({\n    stepId: z.string().nullish(),\n    data: configuratorStateSchema.partial().optional(),\n    completed: z\n      .union([stepStatusSchema, z.record(stepStatusSchema)])\n      .optional(),\n  })\n  .strict();\n\nconst patchBodySchema = z\n  .object({\n    stepId: z.string(),\n    completed: stepStatusSchema,\n  })\n  .strict();\n\nfunction resolveFile(): string {\n  let dir = process.cwd();\n  while (true) {\n    const candidateDir = path.join(dir, \"data\", \"cms\");\n    if (fsSync.existsSync(candidateDir)) {\n      const newFile = path.join(candidateDir, \"configurator-progress.json\");\n      const oldFile = path.join(candidateDir, \"wizard-progress.json\");\n      if (!fsSync.existsSync(newFile) && fsSync.existsSync(oldFile)) {\n        fsSync.renameSync(oldFile, newFile);\n      }\n      return newFile;\n    }\n    const parent = path.dirname(dir);\n    if (parent === dir) break;\n    dir = parent;\n  }\n  const candidateDir = path.resolve(process.cwd(), \"data\", \"cms\");\n  const newFile = path.join(candidateDir, \"configurator-progress.json\");\n  const oldFile = path.join(candidateDir, \"wizard-progress.json\");\n  if (!fsSync.existsSync(newFile) && fsSync.existsSync(oldFile)) {\n    fsSync.renameSync(oldFile, newFile);\n  }\n  return newFile;\n}\n\nconst FILE = resolveFile();\n\nasync function readDb(): Promise<DB> {\n  try {\n    const buf = await fs.readFile(FILE, \"utf8\");\n    const parsed = JSON.parse(buf) as DB;\n    if (parsed && typeof parsed === \"object\") return parsed;\n  } catch {\n    /* ignore */\n  }\n  return {};\n}\n\nasync function writeDb(db: unknown): Promise<void> {\n  const parsed = dbSchema.safeParse(db ?? {});\n  if (!parsed.success) {\n    throw new TypeError(\"Invalid DB value\");\n  }\n  const payload = parsed.data;\n  const json = JSON.stringify(payload, null, 2);\n  const tmp = `${FILE}.${Date.now()}.tmp`;\n  try {\n    console.log(\"[configurator-progress] write\", {\n      file: FILE,\n      tmp,\n      bytes: Buffer.byteLength(json, \"utf8\"),\n    });\n  } catch {}\n  await writeJsonFile(tmp, payload);\n  await fs.rename(tmp, FILE);\n}\n\nexport async function GET(): Promise<NextResponse> {\n  const session = await getServerSession(authOptions);\n  const userId = (session?.user as { id?: string })?.id;\n  if (!session || !userId) {\n    return NextResponse.json({}, { status: 401 });\n  }\n  const db = await readDb();\n  const entry = db[userId];\n  if (entry && typeof entry === \"object\" && \"state\" in entry) {\n    return NextResponse.json(entry as UserRecord);\n  }\n  return NextResponse.json({ state: entry ?? {}, completed: {} });\n}\n\nexport async function PUT(req: Request): Promise<NextResponse> {\n  const session = await getServerSession(authOptions);\n  const userId = (session?.user as { id?: string })?.id;\n  if (!session || !userId) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n  try {\n    const body = await req.json().catch(() => ({}));\n    const parsed = putBodySchema.safeParse(body);\n    if (!parsed.success) {\n      return NextResponse.json({ error: \"Invalid request\" }, { status: 400 });\n    }\n    const { stepId, data, completed } = parsed.data;\n    const db = await readDb();\n    let record: UserRecord = { state: {}, completed: {} };\n    const existing = db[userId];\n    if (existing && typeof existing === \"object\" && \"state\" in existing) {\n      record = existing as UserRecord;\n    } else if (existing) {\n      record.state = existing;\n    }\n    if (!stepId) {\n      record = { state: {}, completed: {} };\n    } else {\n      record.state = { ...(record.state as object), ...(data ?? {}) };\n      if (typeof completed === \"string\" && stepId) {\n        record.completed[stepId] = completed;\n      }\n    }\n    if (completed && typeof completed === \"object\" && !stepId) {\n      record.completed = completed as Record<string, StepStatus>;\n    }\n    db[userId] = record;\n    await writeDb(db);\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    if (err instanceof TypeError) {\n      return NextResponse.json({ error: err.message }, { status: 500 });\n    }\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n\nexport async function PATCH(req: Request): Promise<NextResponse> {\n  const session = await getServerSession(authOptions);\n  const userId = (session?.user as { id?: string })?.id;\n  if (!session || !userId) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n  try {\n    const body = await req.json().catch(() => ({}));\n    const parsed = patchBodySchema.safeParse(body);\n    if (!parsed.success) {\n      return NextResponse.json({ error: \"Invalid request\" }, { status: 400 });\n    }\n    const { stepId, completed } = parsed.data;\n    const db = await readDb();\n    let record: UserRecord = { state: {}, completed: {} };\n    const existing = db[userId];\n    if (existing && typeof existing === \"object\" && \"state\" in existing) {\n      record = existing as UserRecord;\n    } else if (existing) {\n      record.state = existing;\n    }\n    record.completed[stepId] = completed;\n    db[userId] = record;\n    await writeDb(db);\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    if (err instanceof TypeError) {\n      return NextResponse.json({ error: err.message }, { status: 500 });\n    }\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configurator/deploy-shop/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configurator/init-shop/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs\" with non literal argument at index 0","line":63,"column":11,"nodeType":"CallExpression","endLine":63,"endColumn":45},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":66,"column":13,"nodeType":"CallExpression","endLine":66,"endColumn":62}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import \"@acme/zod-utils/initZod\";\nimport { authOptions } from \"@cms/auth/options\";\nimport { getServerSession } from \"next-auth\";\nimport { NextResponse } from \"next/server\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport { validateShopName } from \"@platform-core/shops\";\nimport { z } from \"zod\";\nimport { parseJsonBody } from \"@shared-utils\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\n\n/**\n * POST /cms/api/configurator/init-shop\n * Body: { id: string; csv?: string; categories?: string[] }\n * Seeds categories and product CSV for a shop.\n */\nexport async function POST(req: Request) {\n  const session = await getServerSession(authOptions);\n  if (!session || ![\"admin\", \"ShopAdmin\"].includes(session.user.role)) {\n    return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\n  }\n\n  try {\n    const schema = z\n      .object({\n        id: z\n          .string()\n          .transform((s) => validateShopName(s)),\n        csv: z\n          .string()\n          .optional()\n          .transform((s) => (s ? s.replace(/\\s+/g, \"\") : s))\n          .refine(\n            (val) => {\n              if (!val) return true;\n              try {\n                return (\n                  Buffer.from(val, \"base64\").toString(\"base64\").replace(/=+$/, \"\") ===\n                  val.replace(/=+$/, \"\")\n                );\n              } catch {\n                return false;\n              }\n            },\n            { message: \"Invalid CSV encoding\" }\n          ),\n        categories: z.array(z.string()).optional(),\n      })\n      .strict();\n\n    const parsed = await parseJsonBody(\n      req as Request & { body: ReadableStream<Uint8Array> | null },\n      schema,\n      \"1mb\",\n    );\n    if (\"response\" in parsed) {\n      return parsed.response;\n    }\n\n    const { id, csv, categories } = parsed.data;\n    const dir = path.join(resolveDataRoot(), id);\n    await fs.mkdir(dir, { recursive: true });\n    if (csv) {\n      const buf = Buffer.from(csv, \"base64\");\n      await fs.writeFile(path.join(dir, \"products.csv\"), buf);\n    }\n    if (categories) {\n      await writeJsonFile(path.join(dir, \"categories.json\"), categories);\n    }\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configurator/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configurator/validate-env/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/configure-shop/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/create-shop/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/inventory/[sku]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/inventory/export/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/inventory/import/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/inventory/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/rental/pricing/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/data/[shop]/return-logistics/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/deploy-shop/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/ds/import/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/edit-changes/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/env/[shopId]/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs\" with non literal argument at index 0","line":31,"column":11,"nodeType":"CallExpression","endLine":31,"endColumn":45},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":43,"column":11,"nodeType":"CallExpression","endLine":43,"endColumn":64}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/app/api/env/[shopId]/route.ts\nimport \"@acme/zod-utils/initZod\";\nimport { authOptions } from \"@cms/auth/options\";\nimport { getServerSession } from \"next-auth\";\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { z } from \"zod\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport { setupSanityBlog } from \"@cms/actions/setupSanityBlog\";\nimport { parseJsonBody } from \"@shared-utils\";\n\nconst schema = z.record(z.string(), z.string());\n\nexport async function POST(\n  req: NextRequest,\n  context: { params: Promise<{ shopId: string }> }\n) {\n  const session = await getServerSession(authOptions);\n  if (!session || ![\"admin\", \"ShopAdmin\"].includes(session.user.role)) {\n    return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\n  }\n  try {\n    const parsed = await parseJsonBody(req, schema, \"1mb\");\n    if (\"response\" in parsed) {\n      return parsed.response;\n    }\n    const data = parsed.data;\n    const { shopId } = await context.params;\n    const dir = path.join(resolveDataRoot(), shopId);\n    await fs.mkdir(dir, { recursive: true });\n    const lines = Object.entries(data ?? {})\n      .map(([k, v]) => `${k}=${String(v)}`)\n      .join(\"\\n\");\n    const content = lines ?? \"\";\n    try {\n      console.log(\"[env] write .env\", {\n        shopId,\n        file: path.join(dir, \".env\"),\n        bytes: Buffer.byteLength(content, \"utf8\"),\n      });\n    } catch {}\n    await fs.writeFile(path.join(dir, \".env\"), content, \"utf8\");\n    if (\n      data.SANITY_PROJECT_ID &&\n      data.SANITY_DATASET &&\n      data.SANITY_TOKEN\n    ) {\n      await setupSanityBlog(\n        {\n          projectId: data.SANITY_PROJECT_ID,\n          dataset: data.SANITY_DATASET,\n          token: data.SANITY_TOKEN,\n        },\n        {\n          enabled: data.ENABLE_EDITORIAL === \"true\",\n          ...(data.PROMOTE_SCHEDULE\n            ? { promoteSchedule: data.PROMOTE_SCHEDULE }\n            : {}),\n        },\n      ).catch((err) => {\n        console.error(\"[env] failed to setup Sanity blog\", err);\n      });\n    }\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/git/export/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/import-products/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/launch-shop/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/discounts/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":31,"column":23,"nodeType":"CallExpression","endLine":31,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { authOptions } from \"@cms/auth/options\";\nimport { getServerSession } from \"next-auth\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport { listEvents } from \"@platform-core/repositories/analytics.server\";\nimport { coreEnv as env } from \"@acme/config/env/core\";\nimport type { Coupon } from \"@acme/types\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\n\ninterface Discount extends Coupon {\n  active?: boolean;\n}\n\nfunction getShop(req: NextRequest): string {\n  const { searchParams } = new URL(req.url);\n  const fromQuery = searchParams.get(\"shop\");\n  if (fromQuery) return fromQuery;\n  return (\n    (env.NEXT_PUBLIC_DEFAULT_SHOP as string | undefined) ?? \"bcd\"\n  );\n}\n\nfunction filePath(shop: string): string {\n  return path.join(resolveDataRoot(), shop, \"discounts.json\");\n}\n\nasync function readDiscounts(shop: string): Promise<Discount[]> {\n  try {\n    const buf = await fs.readFile(filePath(shop), \"utf8\");\n    const parsed = JSON.parse(buf) as Discount[];\n    return Array.isArray(parsed) ? parsed : [];\n  } catch {\n    return [];\n  }\n}\n\nasync function writeDiscounts(shop: string, discounts: Discount[]): Promise<void> {\n  const fp = filePath(shop);\n  await writeJsonFile(fp, discounts);\n}\n\nasync function requireAdmin() {\n  const session = await getServerSession(authOptions);\n  if (!session || ![\"admin\", \"ShopAdmin\"].includes(session.user.role)) {\n    return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\n  }\n  return null;\n}\n\nexport async function GET(req: NextRequest) {\n  const shop = getShop(req);\n  const [discounts, events] = await Promise.all([\n    readDiscounts(shop),\n    listEvents(),\n  ]);\n  const counts: Record<string, number> = {};\n  for (const e of events) {\n    if (e.type === \"discount_redeemed\" && typeof e.code === \"string\") {\n      const code = e.code;\n      counts[code] = (counts[code] || 0) + 1;\n    }\n  }\n  return NextResponse.json(\n    discounts.map((d) => ({ ...d, redemptions: counts[d.code] || 0 }))\n  );\n}\n\nexport async function POST(req: NextRequest) {\n  const forbidden = await requireAdmin();\n  if (forbidden) return forbidden;\n  const shop = getShop(req);\n  try {\n    const { code, description, discountPercent } = (await req.json()) as Discount;\n    if (!code || typeof discountPercent !== \"number\") {\n      return NextResponse.json({ error: \"Invalid\" }, { status: 400 });\n    }\n    const discounts = await readDiscounts(shop);\n    const idx = discounts.findIndex(\n      (d) => d.code.toLowerCase() === code.toLowerCase()\n    );\n    const entry: Discount = { code, description, discountPercent, active: true };\n    if (idx >= 0) discounts[idx] = entry;\n    else discounts.push(entry);\n    await writeDiscounts(shop, discounts);\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n\nexport async function PUT(req: NextRequest) {\n  const forbidden = await requireAdmin();\n  if (forbidden) return forbidden;\n  const shop = getShop(req);\n  try {\n    const { code, ...rest } = (await req.json()) as Partial<Discount> & {\n      code: string;\n    };\n    if (!code) {\n      return NextResponse.json({ error: \"Missing code\" }, { status: 400 });\n    }\n    const discounts = await readDiscounts(shop);\n    const idx = discounts.findIndex(\n      (d) => d.code.toLowerCase() === code.toLowerCase()\n    );\n    if (idx < 0) {\n      return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n    }\n    discounts[idx] = { ...discounts[idx], ...rest };\n    await writeDiscounts(shop, discounts);\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n\nexport async function DELETE(req: NextRequest) {\n  const forbidden = await requireAdmin();\n  if (forbidden) return forbidden;\n  const shop = getShop(req);\n  try {\n    const { searchParams } = new URL(req.url);\n    const code = searchParams.get(\"code\");\n    if (!code) {\n      return NextResponse.json({ error: \"Missing code\" }, { status: 400 });\n    }\n    const discounts = await readDiscounts(shop);\n    const filtered = discounts.filter(\n      (d) => d.code.toLowerCase() !== code.toLowerCase()\n    );\n    await writeDiscounts(shop, filtered);\n    return NextResponse.json({ success: true });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/click/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/open/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/provider-webhooks/resend/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/provider-webhooks/sendgrid/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/marketing/email/unsubscribe/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/media/probe/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/media/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/page-draft/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/page-templates/[name]/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":15,"column":11,"nodeType":"CallExpression","endLine":15,"endColumn":39},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":39,"column":23,"nodeType":"CallExpression","endLine":39,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/app/api/page-templates/[name]/route.ts\n\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport fsSync, { promises as fs } from \"fs\";\nimport path from \"path\";\n\nexport function resolveTemplatesRoot(): string {\n  let dir = process.cwd();\n  while (true) {\n    const candidates = [\n      path.join(dir, \"packages\", \"ui\", \"components\", \"templates\"),\n      path.join(dir, \"packages\", \"ui\", \"src\", \"components\", \"templates\"),\n    ];\n    for (const candidate of candidates) {\n      if (fsSync.existsSync(candidate)) return candidate;\n    }\n    const parent = path.dirname(dir);\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return path.resolve(\n    process.cwd(),\n    \"packages\",\n    \"ui\",\n    \"components\",\n    \"templates\"\n  );\n}\n\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ name: string }> }\n) {\n  try {\n    const { resolveTemplatesRoot } = await import(\"./route\");\n    const dir = resolveTemplatesRoot();\n    const { name } = await context.params;\n    const file = path.join(dir, `${name}.json`);\n    const buf = await fs.readFile(file, \"utf8\");\n    const data = JSON.parse(buf);\n    return NextResponse.json(data);\n  } catch {\n    return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/page-templates/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":15,"column":9,"nodeType":"CallExpression","endLine":15,"endColumn":37},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs\" with non literal argument at index 0","line":32,"column":27,"nodeType":"CallExpression","endLine":32,"endColumn":67},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":37,"column":39,"nodeType":"CallExpression","endLine":37,"endColumn":64}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextResponse } from \"next/server\";\nimport fsSync, { promises as fs } from \"fs\";\nimport path from \"path\";\n\nfunction resolveTemplatesRoot(): string {\n  let dir = process.cwd();\n  while (true) {\n    const candidate = path.join(\n      dir,\n      \"packages\",\n      \"ui\",\n      \"components\",\n      \"templates\"\n    );\n    if (fsSync.existsSync(candidate)) return candidate;\n    const parent = path.dirname(dir);\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return path.resolve(\n    process.cwd(),\n    \"packages\",\n    \"ui\",\n    \"components\",\n    \"templates\"\n  );\n}\n\nexport async function GET() {\n  try {\n    const dir = resolveTemplatesRoot();\n    const entries = await fs.readdir(dir, { withFileTypes: true });\n    const templates = [] as Array<{ name: string; components: unknown[] }>;\n    for (const e of entries) {\n      if (e.isFile() && e.name.endsWith(\".json\")) {\n        const file = path.join(dir, e.name);\n        const json = JSON.parse(await fs.readFile(file, \"utf8\"));\n        templates.push({\n          name: json.name ?? path.parse(e.name).name,\n          components: json.components ?? [],\n        });\n      }\n    }\n    return NextResponse.json(templates);\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 500 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/page/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/pages/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/products/[shop]/[id]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/products/[shop]/slugs/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/products/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/providers/[provider]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/providers/shop/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/publish-locations/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/sanity/verify/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/segments/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":19,"column":23,"nodeType":"CallExpression","endLine":19,"endColumn":62}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import \"@acme/zod-utils/initZod\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport path from \"path\";\nimport { promises as fs } from \"fs\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\nimport { DATA_ROOT } from \"@platform-core/dataRoot\";\nimport { validateShopName } from \"@acme/lib\";\nimport { z } from \"zod\";\nimport { parseJsonBody } from \"@shared-utils\";\nimport { segmentSchema, type Segment } from \"@acme/types\";\n\nfunction segmentsPath(shop: string): string {\n  shop = validateShopName(shop);\n  return path.join(DATA_ROOT, shop, \"segments.json\");\n}\n\nasync function readSegments(shop: string): Promise<Segment[]> {\n  try {\n    const buf = await fs.readFile(segmentsPath(shop), \"utf8\");\n    const json = JSON.parse(buf);\n    return Array.isArray(json) ? json : [];\n  } catch {\n    return [];\n  }\n}\n\nasync function writeSegments(shop: string, items: Segment[]): Promise<void> {\n  await writeJsonFile(segmentsPath(shop), items);\n}\n\nexport async function GET(req: NextRequest): Promise<NextResponse> {\n  const shopParam = req.nextUrl.searchParams.get(\"shop\");\n  const parsed = z.string().min(1).safeParse(shopParam);\n  if (!parsed.success) {\n    return NextResponse.json({ error: \"Missing shop\" }, { status: 400 });\n  }\n  const segments = await readSegments(parsed.data);\n  return NextResponse.json({ segments });\n}\n\nexport async function POST(req: NextRequest): Promise<NextResponse> {\n  const parsed = await parseJsonBody(\n    req,\n    segmentSchema.extend({ shop: z.string() }),\n    \"1mb\",\n  );\n  if (parsed.success === false) return parsed.response;\n  const { shop, id, name, filters } = parsed.data;\n  const segments = await readSegments(shop);\n  const def: Segment = { id, name: name ?? id, filters };\n  const idx = segments.findIndex((s) => s.id === id);\n  if (idx >= 0) segments[idx] = def;\n  else segments.push(def);\n  await writeSegments(shop, segments);\n  return NextResponse.json({ ok: true });\n}\n\nexport async function DELETE(req: NextRequest): Promise<NextResponse> {\n  const shopParam = req.nextUrl.searchParams.get(\"shop\");\n  const idParam = req.nextUrl.searchParams.get(\"id\");\n  const shopParsed = z.string().min(1).safeParse(shopParam);\n  if (!shopParsed.success) {\n    return NextResponse.json({ error: \"Missing shop\" }, { status: 400 });\n  }\n  const idParsed = z.string().min(1).safeParse(idParam);\n  if (!idParsed.success) {\n    return NextResponse.json({ error: \"Missing id\" }, { status: 400 });\n  }\n  const segments = await readSegments(shopParsed.data);\n  const idx = segments.findIndex((s) => s.id === idParsed.data);\n  if (idx >= 0) {\n    segments.splice(idx, 1);\n    await writeSegments(shopParsed.data, segments);\n  }\n  return NextResponse.json({ ok: true });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/seo/audit/[shop]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/seo/generate/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs/promises\" with non literal argument at index 0","line":34,"column":23,"nodeType":"CallExpression","endLine":34,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from \"next/server\";\nimport { DATA_ROOT } from \"@platform-core/dataRoot\";\nimport { validateShopName } from \"@acme/lib\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\n\ninterface Body {\n  shop: string;\n  id: string;\n  title: string;\n  description: string;\n}\n\nexport async function POST(req: NextRequest) {\n  const body = (await req.json().catch(() => ({}))) as Partial<Body>;\n  if (!body.shop || !body.id || !body.title || !body.description) {\n    return NextResponse.json({ error: \"Invalid request\" }, { status: 400 });\n  }\n\n  const shop = validateShopName(body.shop);\n\n  const { generateMeta } = await import(\"@acme/lib/generateMeta\");\n\n  const result = await generateMeta({\n    id: body.id,\n    title: body.title,\n    description: body.description,\n  });\n\n  const file = path.join(DATA_ROOT, shop, \"seo.json\");\n  let current: Record<string, unknown> = {};\n  try {\n    const buf = await fs.readFile(file, \"utf8\");\n    current = JSON.parse(buf) as Record<string, unknown>;\n  } catch {\n    /* ignore */\n  }\n  current[body.id] = result;\n  await writeJsonFile(file, current);\n\n  return NextResponse.json(result);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/shop/[shop]/rollback/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/shops/[shop]/theme/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/shops/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/themes/[themeId]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/themes/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/upgrade-shop/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/api/upload-csv/[shop]/route.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs/promises\" with non literal argument at index 0","line":39,"column":11,"nodeType":"CallExpression","endLine":39,"endColumn":42},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found createWriteStream from package \"fs\" with non literal argument at index 0","line":58,"column":29,"nodeType":"CallExpression","endLine":58,"endColumn":59},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found unlink from package \"fs/promises\" with non literal argument at index 0","line":69,"column":16,"nodeType":"CallExpression","endLine":69,"endColumn":32},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found unlink from package \"fs/promises\" with non literal argument at index 0","line":91,"column":22,"nodeType":"CallExpression","endLine":91,"endColumn":38},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found unlink from package \"fs/promises\" with non literal argument at index 0","line":113,"column":16,"nodeType":"CallExpression","endLine":113,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { authOptions } from \"@cms/auth/options\";\nimport { getServerSession } from \"next-auth\";\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport fs from \"fs\";\nimport { mkdir, unlink } from \"fs/promises\";\nimport path from \"path\";\nimport { Readable } from \"stream\";\nimport type { ReadableStream as NodeReadableStream } from \"stream/web\";\nimport Busboy, { type FileInfo } from \"busboy\";\nimport { fileTypeFromBuffer } from \"file-type/core\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport { validateShopName } from \"@platform-core/shops\";\n\nfunction isWebReadableStream(\n  stream: unknown,\n): stream is NodeReadableStream {\n  return (\n    typeof stream === \"object\" &&\n    stream !== null &&\n    typeof (stream as NodeReadableStream).getReader === \"function\"\n  );\n}\n\nconst MAX_SIZE = 5 * 1024 * 1024; // 5MB\n\nexport async function POST(\n  req: NextRequest,\n  context: { params: Promise<{ shop: string }> }\n): Promise<NextResponse> {\n  const session = await getServerSession(authOptions);\n  if (!session || ![\"admin\", \"ShopAdmin\"].includes(session.user.role)) {\n    return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\n  }\n\n  try {\n    const { shop: rawShop } = await context.params;\n    const shop = validateShopName(rawShop);\n    const dir = path.join(resolveDataRoot(), shop);\n    await mkdir(dir, { recursive: true });\n    const filePath = path.join(dir, \"products.csv\");\n\n    const headers: Record<string, string> = {};\n    req.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    const busboy = Busboy({\n      headers,\n      limits: { fileSize: MAX_SIZE, files: 1 },\n    });\n\n    return await new Promise<NextResponse>((resolve, reject) => {\n      let resolved = false;\n      let fileFound = false;\n\n      busboy.on(\"file\", (_name, file: NodeJS.ReadableStream, info: FileInfo) => {\n        fileFound = true;\n        const { mimeType } = info;\n        const writeStream = fs.createWriteStream(filePath);\n        let firstChunk: Buffer | undefined;\n\n        file.on(\"data\", (data: Buffer) => {\n          if (!firstChunk) firstChunk = data;\n        });\n\n        file.on(\"limit\", () => {\n          if (resolved) return;\n          resolved = true;\n          writeStream.destroy();\n          void unlink(filePath).catch(() => {});\n          resolve(\n            NextResponse.json({ error: \"File too large\" }, { status: 413 })\n          );\n        });\n\n        writeStream.on(\"finish\", () => {\n          if (resolved) return;\n          if (!firstChunk) {\n            resolved = true;\n            resolve(\n              NextResponse.json({ error: \"Missing file\" }, { status: 400 })\n            );\n            return;\n          }\n\n          fileTypeFromBuffer(firstChunk)\n            .then((type) => {\n              const isCsv =\n                (type && type.mime === \"text/csv\") ||\n                (!type && mimeType === \"text/csv\");\n              if (!isCsv) {\n                void unlink(filePath).catch(() => {});\n                resolved = true;\n                resolve(\n                  NextResponse.json(\n                    { error: \"Invalid file type\" },\n                    { status: 415 }\n                  )\n                );\n                return;\n              }\n              resolved = true;\n              resolve(NextResponse.json({ success: true }));\n            })\n            .catch((err) => {\n              resolved = true;\n              reject(err);\n            });\n        });\n\n        writeStream.on(\"error\", (err) => {\n          if (resolved) return;\n          resolved = true;\n          void unlink(filePath).catch(() => {});\n          reject(err);\n        });\n\n        file.pipe(writeStream);\n      });\n\n      busboy.on(\"finish\", () => {\n        if (!resolved && !fileFound) {\n          resolved = true;\n          resolve(NextResponse.json({ error: \"Missing file\" }, { status: 400 }));\n        }\n      });\n\n      busboy.on(\"error\", (err) => {\n        if (resolved) return;\n        resolved = true;\n        reject(err);\n      });\n\n      const body = req.body;\n      if (body) {\n        let stream: NodeJS.ReadableStream;\n        if (isWebReadableStream(body)) {\n          stream = Readable.fromWeb(body);\n        } else if (Buffer.isBuffer(body)) {\n          stream = Readable.from(body);\n        } else if (body instanceof Readable) {\n          stream = body as NodeJS.ReadableStream;\n        } else {\n          resolved = true;\n          resolve(\n            NextResponse.json({ error: \"Invalid body\" }, { status: 400 })\n          );\n          return;\n        }\n        stream.pipe(busboy);\n      } else {\n        resolved = true;\n        resolve(NextResponse.json({ error: \"No body\" }, { status: 400 }));\n      }\n    });\n  } catch (err) {\n    return NextResponse.json(\n      { error: (err as Error).message },\n      { status: 400 }\n    );\n  }\n}\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cancelled/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/ChunkReloadBoundary.client.tsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":47,"column":22,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[1333,1416],"text":"\n            We couldn&apos;t load a development chunk. Try a manual refresh.\n          "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[1333,1416],"text":"\n            We couldn&lsquo;t load a development chunk. Try a manual refresh.\n          "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[1333,1416],"text":"\n            We couldn&#39;t load a development chunk. Try a manual refresh.\n          "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[1333,1416],"text":"\n            We couldn&rsquo;t load a development chunk. Try a manual refresh.\n          "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport React from \"react\";\n\ntype Props = { children: React.ReactNode };\n\n/**\n * Catches transient Next/webpack ChunkLoadError during dev/HMR and reloads once.\n * If the error persists after one reload, shows a minimal fallback UI.\n */\nexport default class ChunkReloadBoundary extends React.Component<\n  Props,\n  { error: Error | null }\n> {\n  private static RELOAD_FLAG = \"cms:reloaded-on-chunk-error\";\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  componentDidCatch(error: Error) {\n    const isChunkError =\n      error?.name === \"ChunkLoadError\" || /ChunkLoadError|Loading chunk/i.test(error?.message || \"\");\n    if (typeof window !== \"undefined\" && isChunkError) {\n      const reloaded = sessionStorage.getItem(ChunkReloadBoundary.RELOAD_FLAG);\n      if (!reloaded) {\n        try {\n          sessionStorage.setItem(ChunkReloadBoundary.RELOAD_FLAG, \"1\");\n        } catch {}\n        window.location.reload();\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"mx-auto max-w-lg p-6 text-center\">\n          <h2 className=\"mb-2 text-lg font-semibold\">Something went wrong</h2>\n          <p className=\"mb-4 text-sm text-muted-foreground\">\n            We couldn't load a development chunk. Try a manual refresh.\n          </p>\n          <button\n            type=\"button\"\n            className=\"rounded bg-primary px-4 py-2 text-primary-fg\"\n            onClick={() => window.location.reload()}\n          >\n            Refresh\n          </button>\n        </div>\n      );\n    }\n    return this.props.children as React.ReactElement;\n  }\n}\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/LayoutClient.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/account-requests/AccountRequestsPanel.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/account-requests/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/DeleteButton.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/MainImageField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/PostForm.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/ProductPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/PublishButton.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/RichTextEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/UnpublishButton.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/[id]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/invalidProductContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/new/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/posts/schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/ConfirmationStep.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/ConnectForm.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/CredentialsStep.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/DatasetStep.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/blog/sanity/connect/useSanityConnection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/campaigns/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/components/JumpLinkButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/components/PendingRequestsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/components/actionResult.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/components/roleDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/ConfiguratorContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/ConfiguratorStatusBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/GuidedTour.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/[stepId]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/[stepId]/step-page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/ConfiguratorHero.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/ConfiguratorStepList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/DashboardPrimitives.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":41,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":41,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1237,1240],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1237,1240],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":42,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":42,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1268,1271],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1268,1271],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":43,"column":34,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":43,"endColumn":37,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1307,1310],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1307,1310],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":44,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":44,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1351,1354],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1351,1354],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport {\n  cloneElement,\n  isValidElement,\n  type ComponentProps,\n  type ElementType,\n} from \"react\";\nimport { Button, Card, CardContent } from \"@/components/atoms/shadcn\";\nimport { Progress, Tag } from \"@/components/atoms\";\nimport { cn } from \"@ui/utils/style\";\n\nexport const CardRoot: ElementType = Card ?? \"div\";\nexport const CardSection: ElementType = CardContent ?? \"div\";\nexport const ProgressBar: ElementType = Progress ?? \"div\";\nexport const TagElement: ElementType = Tag ?? \"span\";\n\ntype ButtonElementProps = ComponentProps<typeof Button> & {\n  asChild?: boolean;\n};\n\nconst isRealButton =\n  typeof Button === \"function\" &&\n  (Button as unknown as { $$typeof?: symbol }).$$typeof ===\n    Symbol.for(\"react.forward_ref\");\n\nexport function ButtonElement(props: ButtonElementProps) {\n  if (isRealButton) {\n    return <Button {...props} />;\n  }\n\n  const baseProps = (props ?? {}) as ButtonElementProps & Record<string, unknown>;\n  const { asChild, children, className, type, ...restProps } = baseProps;\n  const cleanProps: Record<string, unknown> = { ...restProps };\n\n  if (\"variant\" in cleanProps) {\n    delete cleanProps.variant;\n  }\n\n  if (asChild && isValidElement(children)) {\n    return cloneElement(children as any, {\n      ...(cleanProps as any),\n      className: cn((children as any).props?.className, className),\n    } as any);\n  }\n\n  return (\n    <button {...cleanProps} className={className} type={type ?? \"button\"}>\n      {children}\n    </button>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/LaunchPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/NavTemplateSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/TemplateSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/components/TrackProgressList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/hooks/useConfiguratorDashboardState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/hooks/useConfiguratorPersistence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/hooks/useLaunchShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/hooks/useStepCompletion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/hooks/useThemeLoader.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/lib/api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/lib/progress.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/PageLayoutSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/PageMetaForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/StepAdditionalPages.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/useNewPageState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepAdditionalPages/usePagesLoader.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepCheckoutPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepEnvVars.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepHomePage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepHosting.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepImportData.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepOptions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepProductPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepSeedData.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepShopDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepShopPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepSummary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepTheme.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/StepTokens.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/ThemeEditorForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/components/ShopPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/components/TemplateSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/hooks/useConfiguratorStep.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/hooks/useProductPageData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/hooks/useThemePalette.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/steps/hooks/useThemePreviewDevice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/configurator/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/dashboard/[shop]/components/CampaignFilter.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/dashboard/[shop]/components/Charts.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/dashboard/[shop]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/dashboard/page.tsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":85,"column":52,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[3705,3836],"text":"\n                  We keep an eye on each storefront&apos;s telemetry so you can hop in when something needs attention.\n                "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[3705,3836],"text":"\n                  We keep an eye on each storefront&lsquo;s telemetry so you can hop in when something needs attention.\n                "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[3705,3836],"text":"\n                  We keep an eye on each storefront&#39;s telemetry so you can hop in when something needs attention.\n                "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[3705,3836],"text":"\n                  We keep an eye on each storefront&rsquo;s telemetry so you can hop in when something needs attention.\n                "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Link from \"next/link\";\nimport { listShops } from \"../../../lib/listShops\";\nimport { Button, Card, CardContent, Progress, Tag } from \"@/components/atoms/shadcn\";\n\nexport default async function DashboardIndexPage() {\n  const shops = await listShops();\n  const quickStats = [\n    {\n      label: \"Total shops\",\n      value: shops.length,\n      caption:\n        shops.length === 0\n          ? \"No storefronts connected\"\n          : `${shops.length === 1 ? \"workspace\" : \"workspaces\"} active`,\n    },\n    {\n      label: \"Focus\",\n      value: shops.length === 0 ? \"Setup\" : \"Manage\",\n      caption:\n        shops.length === 0\n          ? \"Launch a new shop to enable dashboards\"\n          : \"Select a shop to view dashboards and insights\",\n    },\n  ];\n  const progressValue = shops.length === 0 ? 12 : 100;\n  const progressLabel =\n    shops.length === 0\n      ? \"Complete onboarding to unlock dashboards\"\n      : \"Dashboards ready\";\n\n  return (\n    <div className=\"space-y-10\">\n      <section className=\"relative overflow-hidden rounded-3xl border border-border/70 bg-slate-950 text-foreground shadow-xl\">\n        <div className=\"pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_top,_rgba(148,163,255,0.35),_transparent_55%)]\" />\n        <div className=\"relative grid gap-8 p-8 lg:grid-cols-[2fr,1fr] lg:gap-10\">\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <span className=\"text-xs font-semibold uppercase tracking-[0.35em] text-muted-foreground\">\n                Shop dashboards\n              </span>\n              <h1 className=\"text-3xl font-semibold md:text-4xl\">\n                Choose a storefront to inspect\n              </h1>\n              <p className=\"text-muted-foreground\">\n                Dive into operational analytics for each shop. Pick a workspace to review merchandising, traffic, and conversion trends.\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              <Progress value={progressValue} label={progressLabel} />\n              <div className=\"flex flex-wrap gap-3\">\n                <Button asChild className=\"h-11 px-5 text-sm font-semibold\">\n                  <Link href=\"/cms/configurator\">Launch new shop</Link>\n                </Button>\n                <Button\n                  asChild\n                  variant=\"outline\"\n                  className=\"h-11 px-5 text-sm font-semibold border-border/40 text-foreground hover:bg-muted/10\"\n                >\n                  <Link href=\"/cms\">Return to CMS home</Link>\n                </Button>\n              </div>\n            </div>\n            <div className=\"grid gap-3 sm:grid-cols-2\">\n              {quickStats.map((stat) => (\n                <Card\n                  key={stat.label}\n                  className=\"border border-border/15 bg-background/60 text-foreground backdrop-blur\"\n                >\n                  <CardContent className=\"space-y-1 p-4\">\n                    <p className=\"text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                      {stat.label}\n                    </p>\n                    <p className=\"text-xl font-semibold\">{stat.value}</p>\n                    <p className=\"text-xs text-muted-foreground\">{stat.caption}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n          <Card className=\"border border-border/20 bg-background/60 text-foreground shadow-2xl backdrop-blur\">\n            <CardContent className=\"space-y-5\">\n              <div className=\"space-y-1\">\n                <h2 className=\"text-lg font-semibold\">Status</h2>\n                <p className=\"text-sm text-muted-foreground\">\n                  We keep an eye on each storefront's telemetry so you can hop in when something needs attention.\n                </p>\n              </div>\n              <div className=\"flex items-center justify-between gap-3 rounded-xl border border-border/15 bg-background/60 px-4 py-3\">\n                <div>\n                  <p className=\"text-sm font-medium\">Workspace health</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {shops.length === 0\n                      ? \"No dashboards available\"\n                      : \"All dashboards ready\"}\n                  </p>\n                </div>\n                <Tag variant={shops.length === 0 ? \"warning\" : \"success\"}>\n                  {shops.length === 0 ? \"Action required\" : \"Ready\"}\n                </Tag>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      <Card className=\"border border-border/60\">\n        <CardContent className=\"space-y-6\">\n          <div className=\"flex items-center justify-between gap-3\">\n            <h2 className=\"text-lg font-semibold text-foreground\">Available shops</h2>\n            <Tag variant={shops.length === 0 ? \"warning\" : \"default\"}>\n              {shops.length === 0 ? \"No shops yet\" : `${shops.length} available`}\n            </Tag>\n          </div>\n          {shops.length === 0 ? (\n            <p className=\"text-sm text-muted-foreground\">\n              No shops found. Create a shop in the configurator to unlock dashboards.\n            </p>\n          ) : (\n            <div className=\"grid gap-3 sm:grid-cols-2\">\n              {shops.map((shop) => (\n                <Card key={shop} className=\"border border-border/60 bg-muted/10\">\n                  <CardContent className=\"flex items-center justify-between gap-3 p-4\">\n                    <div>\n                      <p className=\"text-sm font-semibold text-foreground\">{shop}</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        View orders, merchandising, and campaign performance for this shop.\n                      </p>\n                    </div>\n                    <Button asChild className=\"h-10 px-4 text-sm font-medium\">\n                      <Link href={`/cms/dashboard/${shop}`}>View dashboard</Link>\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/live/LivePreviewList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/live/page.tsx","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":17,"column":9,"nodeType":"CallExpression","endLine":17,"endColumn":36},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":36,"column":8,"nodeType":"CallExpression","endLine":36,"endColumn":33},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":39,"column":8,"nodeType":"CallExpression","endLine":39,"endColumn":34},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs/promises\" with non literal argument at index 0","line":44,"column":26,"nodeType":"CallExpression","endLine":44,"endColumn":54},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":124,"column":39,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[4022,4181],"text":"\n                Launch each storefront&apos;s development server directly from the CMS. Monitor availability before sharing links with stakeholders.\n              "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[4022,4181],"text":"\n                Launch each storefront&lsquo;s development server directly from the CMS. Monitor availability before sharing links with stakeholders.\n              "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[4022,4181],"text":"\n                Launch each storefront&#39;s development server directly from the CMS. Monitor availability before sharing links with stakeholders.\n              "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[4022,4181],"text":"\n                Launch each storefront&rsquo;s development server directly from the CMS. Monitor availability before sharing links with stakeholders.\n              "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fsSync from \"fs\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport { listShops } from \"../../../lib/listShops\";\nimport { Button, Card, CardContent, Progress, Tag } from \"@/components/atoms/shadcn\";\nimport { LivePreviewList } from \"./LivePreviewList\";\nimport Link from \"next/link\";\n\nexport const metadata = {\n  title: \"Live shops · Base-Shop\",\n};\n\nfunction resolveAppsRoot(): string {\n  let dir = process.cwd();\n  while (true) {\n    const appsPath = path.join(dir, \"apps\");\n    if (fsSync.existsSync(appsPath)) return appsPath;\n\n    const parent = path.dirname(dir);\n    if (parent === dir) break; // reached filesystem root\n    dir = parent;\n  }\n  return path.resolve(process.cwd(), \"apps\");\n}\n\nexport type PortInfo = {\n  port: number | null;\n  error?: string;\n};\n\nasync function findPort(shop: string): Promise<PortInfo> {\n  const root = resolveAppsRoot();\n  const appDir = path.join(root, `shop-${shop}`);\n  const pkgPath = path.join(appDir, \"package.json\");\n\n  if (!fsSync.existsSync(appDir)) {\n    return { port: null, error: \"app not found\" };\n  }\n  if (!fsSync.existsSync(pkgPath)) {\n    return { port: null, error: \"package.json not found\" };\n  }\n\n  try {\n    const pkgRaw = await fs.readFile(pkgPath, \"utf8\");\n    const pkg = JSON.parse(pkgRaw) as { scripts?: Record<string, string> };\n    const cmd = pkg.scripts?.dev ?? pkg.scripts?.start ?? \"\";\n    const match = cmd.match(/-p\\s*(\\d+)/);\n    return { port: match ? parseInt(match[1], 10) : null };\n  } catch (error) {\n    const message = error instanceof Error ? error.message : String(error);\n    return { port: null, error: message };\n  }\n}\n\nexport default async function LivePage() {\n  const shops = await listShops();\n\n  const portInfo: Record<string, PortInfo> = Object.fromEntries(\n    await Promise.all(\n      shops.map(async (shop) => {\n        const info = await findPort(shop);\n        return [shop, info] as const;\n      })\n    )\n  );\n\n  const previewsReady = shops.filter((shop) => Boolean(portInfo[shop]?.port)).length;\n  const previewsUnavailable = shops.filter((shop) => !portInfo[shop]?.port).length;\n\n  const progressValue = shops.length\n    ? Math.round((previewsReady / shops.length) * 100)\n    : 0;\n  const progressLabel = shops.length\n    ? `${previewsReady}/${shops.length} previews configured`\n    : \"No shops configured\";\n\n  const quickStats = [\n    {\n      label: \"Total shops\",\n      value: shops.length,\n      caption:\n        shops.length === 0\n          ? \"Connect a shop to enable previews\"\n          : `${shops.length === 1 ? \"workspace\" : \"workspaces\"} available`,\n    },\n    {\n      label: \"Previews ready\",\n      value: previewsReady,\n      caption:\n        previewsReady === 0\n          ? \"Run the dev server in each shop app\"\n          : \"Open previews launch instantly\",\n    },\n    {\n      label: \"Needs attention\",\n      value: previewsUnavailable,\n      caption:\n        previewsUnavailable === 0\n          ? \"Everything is wired up\"\n          : \"Start the missing dev servers to enable previews\",\n    },\n  ];\n\n  const items = shops.map((shop) => {\n    const info = portInfo[shop];\n    const url = info?.port ? `http://localhost:${info.port}` : null;\n    return { shop, url, error: info?.error };\n  });\n\n  return (\n    <div className=\"space-y-10\">\n      <section className=\"relative overflow-hidden rounded-3xl border border-border/70 bg-slate-950 text-white shadow-xl\">\n        <div className=\"pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_top,_rgba(148,163,255,0.35),_transparent_55%)]\" />\n        <div className=\"relative grid gap-8 p-8 lg:grid-cols-[2fr,1fr] lg:gap-10\">\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <span className=\"text-xs font-semibold uppercase tracking-[0.35em] text-white/70\">\n                Live previews\n              </span>\n              <h1 className=\"text-3xl font-semibold md:text-4xl\">\n                Validate storefronts in real time\n              </h1>\n              <p className=\"text-white/80\">\n                Launch each storefront's development server directly from the CMS. Monitor availability before sharing links with stakeholders.\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              <Progress value={progressValue} label={progressLabel} />\n              <div className=\"flex flex-wrap gap-3\">\n                <Button asChild className=\"h-11 px-5 text-sm font-semibold\">\n                  <Link href=\"/cms/dashboard\">View dashboards</Link>\n                </Button>\n                <Button\n                  asChild\n                  variant=\"outline\"\n                  className=\"h-11 px-5 text-sm font-semibold border-white/40 text-white hover:bg-white/10\"\n                >\n                  <Link href=\"/cms/maintenance\">Run maintenance scan</Link>\n                </Button>\n              </div>\n            </div>\n            <div className=\"grid gap-3 sm:grid-cols-3\">\n              {quickStats.map((stat) => (\n                <Card\n                  key={stat.label}\n                  className=\"border border-white/15 bg-white/5 text-white backdrop-blur\"\n                >\n                  <CardContent className=\"space-y-1 p-4\">\n                    <p className=\"text-xs font-semibold uppercase tracking-wide text-white/60\">\n                      {stat.label}\n                    </p>\n                    <p className=\"text-xl font-semibold\">{stat.value}</p>\n                    <p className=\"text-xs text-white/70\">{stat.caption}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n          <Card className=\"border border-white/20 bg-white/5 text-white shadow-2xl backdrop-blur\">\n            <CardContent className=\"space-y-5\">\n              <div className=\"space-y-1\">\n                <h2 className=\"text-lg font-semibold\">Preview readiness</h2>\n                <p className=\"text-sm text-white/70\">\n                  Keep development servers running so designers and QA can review changes instantly.\n                </p>\n              </div>\n              <div className=\"flex items-center justify-between gap-3 rounded-xl border border-white/15 bg-white/5 px-4 py-3\">\n                <div>\n                  <p className=\"text-sm font-medium\">Available previews</p>\n                  <p className=\"text-xs text-white/70\">\n                    {previewsReady === shops.length\n                      ? \"All previews online\"\n                      : `${previewsReady} of ${shops.length} available`}\n                  </p>\n                </div>\n                <Tag variant={previewsUnavailable === 0 ? \"success\" : \"warning\"}>\n                  {previewsUnavailable === 0 ? \"All good\" : \"Needs attention\"}\n                </Tag>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      <Card className=\"border border-border/60\">\n        <CardContent className=\"space-y-6\">\n          <div className=\"flex items-center justify-between gap-3\">\n            <h2 className=\"text-lg font-semibold text-foreground\">Shop previews</h2>\n            <Tag variant={previewsUnavailable === 0 ? \"success\" : \"warning\"}>\n              {shops.length === 0\n                ? \"No shops\"\n                : previewsUnavailable === 0\n                ? \"All ready\"\n                : `${previewsUnavailable} need setup`}\n            </Tag>\n          </div>\n          {shops.length === 0 ? (\n            <p className=\"text-sm text-muted-foreground\">\n              No shops found. Create a shop in the configurator to unlock live previews.\n            </p>\n          ) : (\n            <LivePreviewList items={items} />\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/maintenance/MaintenanceScanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/maintenance/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/maintenance/scan.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/CampaignSender.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/DiscountManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer/CampaignComposerForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer/CampaignComposerPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer/CampaignHistoryTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer/CampaignMetricsCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/EmailCampaignComposer/useEmailCampaignComposer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingOverview.types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingOverviewHero.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingRecentPerformance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingSummaryCards.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/MarketingToolsGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/SegmentDesigner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/components/useMarketingOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/discounts/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/email/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/lib/marketingOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/marketing/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/media/MediaShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/media/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/migrations/page.tsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":96,"column":88,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[4276,4429],"text":"\n            From the root of the repository, execute the migration tool to align a shop&apos;s theme tokens and templates with the latest release.\n          "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[4276,4429],"text":"\n            From the root of the repository, execute the migration tool to align a shop&lsquo;s theme tokens and templates with the latest release.\n          "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[4276,4429],"text":"\n            From the root of the repository, execute the migration tool to align a shop&#39;s theme tokens and templates with the latest release.\n          "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[4276,4429],"text":"\n            From the root of the repository, execute the migration tool to align a shop&rsquo;s theme tokens and templates with the latest release.\n          "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Link from \"next/link\";\nimport { Button, Card, CardContent, Progress, Tag } from \"@/components/atoms/shadcn\";\n\nexport default function MigrationsPage() {\n  const quickStats = [\n    {\n      label: \"Migration flow\",\n      value: \"CLI driven\",\n      caption: \"Run the migrate-shop tool to move themes and tokens\",\n    },\n    {\n      label: \"Primary focus\",\n      value: \"Design tokens\",\n      caption: \"Keeps typography, colors, and spacing in sync\",\n    },\n    {\n      label: \"Environment\",\n      value: \"Local workspace\",\n      caption: \"Execute inside the repo checkout with access to shops\",\n    },\n  ];\n\n  return (\n    <div className=\"space-y-10\">\n      <section className=\"relative overflow-hidden rounded-3xl border border-border/70 bg-slate-950 text-foreground shadow-xl\">\n        <div className=\"pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_top,_rgba(148,163,255,0.35),_transparent_55%)]\" />\n        <div className=\"relative grid gap-8 p-8 lg:grid-cols-[2fr,1fr] lg:gap-10\">\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <span className=\"text-xs font-semibold uppercase tracking-[0.35em] text-muted-foreground\">\n                Migrations\n              </span>\n              <h1 className=\"text-3xl font-semibold md:text-4xl\">\n                Upgrade storefronts to the latest tokens\n              </h1>\n              <p className=\"text-muted-foreground\">\n                Keep every storefront consistent by running the migration CLI whenever design tokens or templates evolve.\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              <Progress value={30} label=\"Run migrate-shop from your terminal\" />\n              <div className=\"flex flex-wrap gap-3\">\n                <Button asChild className=\"h-11 px-5 text-sm font-semibold\">\n                  <Link href=\"/cms/configurator\">Open configurator</Link>\n                </Button>\n                <Button\n                  asChild\n                  variant=\"outline\"\n                  className=\"h-11 px-5 text-sm font-semibold border-border/40 text-foreground hover:bg-muted/10\"\n                >\n                  <Link href=\"/cms\">Return to CMS home</Link>\n                </Button>\n              </div>\n            </div>\n            <div className=\"grid gap-3 sm:grid-cols-3\">\n              {quickStats.map((stat) => (\n                <Card\n                  key={stat.label}\n                  className=\"border border-border/15 bg-background/60 text-foreground backdrop-blur\"\n                >\n                  <CardContent className=\"space-y-1 p-4\">\n                    <p className=\"text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                      {stat.label}\n                    </p>\n                    <p className=\"text-xl font-semibold\">{stat.value}</p>\n                    <p className=\"text-xs text-muted-foreground\">{stat.caption}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n          <Card className=\"border border-border/20 bg-background/60 text-foreground shadow-2xl backdrop-blur\">\n            <CardContent className=\"space-y-5\">\n              <div className=\"space-y-1\">\n                <h2 className=\"text-lg font-semibold\">Status</h2>\n                <p className=\"text-sm text-muted-foreground\">\n                  Migrations are orchestrated manually today. Automation hooks will arrive in a future release.\n                </p>\n              </div>\n              <div className=\"flex items-center justify-between gap-3 rounded-xl border border-white/15 bg-white/5 px-4 py-3\">\n                <div>\n                  <p className=\"text-sm font-medium\">Automation</p>\n                  <p className=\"text-xs text-muted-foreground\">Scripted via migrate-shop CLI</p>\n                </div>\n                <Tag variant=\"warning\">Manual step</Tag>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      <Card className=\"border border-border/60\">\n        <CardContent className=\"space-y-4\">\n          <h2 className=\"text-lg font-semibold text-foreground\">Run the migrate-shop CLI</h2>\n          <p className=\"text-sm text-muted-foreground\">\n            From the root of the repository, execute the migration tool to align a shop's theme tokens and templates with the latest release.\n          </p>\n          <Card className=\"border border-border/60 bg-muted/10\">\n            <CardContent className=\"font-mono text-sm text-foreground\">\n              pnpm migrate-shop --shop &lt;shop-id&gt;\n            </CardContent>\n          </Card>\n          <p className=\"text-sm text-muted-foreground\">\n            After the script completes, verify the storefront locally and re-run the live preview to confirm the changes.\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/not-found.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/orders/OrdersShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/orders/[shop]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/orders/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/pages/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/plugins/PluginList.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/plugins/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/products/ProductsShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/products/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/ra/RaDashboardClient.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/ra/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/InviteUserForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/RbacManagementPanel.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/RbacUserCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/hooks/useInviteUserForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/hooks/useUserRoleSelections.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/permissions/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/rbac/useRbacManagementPanel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/segments/SegmentBuilder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/segments/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/settings/SettingsShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/settings/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/ShopIndexShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/RollbackCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/UpgradeButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/UpgradeSummary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/InventoryForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/InventoryRow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/InventoryTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/InventoryToolbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/hooks/useInventoryEditor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/hooks/useInventoryFileTransfer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/inventory/useInventoryValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/PricingCoverageSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/PricingDamageSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/PricingDurationSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/PricingForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'status' is assigned a value but never used.","line":40,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":40,"endColumn":11}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { Button, Input } from \"@/components/atoms/shadcn\";\nimport { Toast, Tag } from \"@/components/atoms\";\nimport { type PricingMatrix } from \"@acme/types\";\nimport { cn } from \"@ui/utils/style\";\nimport { useCallback, useState } from \"react\";\n\nimport PricingCoverageSection from \"./PricingCoverageSection\";\nimport PricingDamageSection from \"./PricingDamageSection\";\nimport PricingDurationSection from \"./PricingDurationSection\";\nimport PricingJsonEditor from \"./PricingJsonEditor\";\nimport { usePricingFormState, type PricingFormTab } from \"./usePricingFormState\";\n\ninterface Props {\n  shop: string;\n  initial: PricingMatrix;\n}\n\nconst tabs: { id: PricingFormTab; label: string }[] = [\n  { id: \"guided\", label: \"Guided form\" },\n  { id: \"json\", label: \"Advanced JSON\" },\n];\n\nexport default function PricingForm({ shop, initial }: Props) {\n  const [toast, setToast] = useState<{ open: boolean; message: string }>({ open: false, message: \"\" });\n\n  const emitToast = useCallback((message: string) => {\n    setToast({ open: true, message });\n  }, []);\n\n  const closeToast = useCallback(() => setToast({ open: false, message: \"\" }), []);\n\n  const {\n    refs: { fileInputRef },\n    baseRate,\n    baseRateError,\n    onBaseRateChange,\n    rootError,\n    status,\n    statusLabel,\n    statusVariant,\n    progressMessage,\n    activeTab,\n    handleTabChange,\n    json,\n    duration,\n    damage,\n    coverage,\n    handleFileChange,\n    handleImportClick,\n    handleExport,\n    onSubmit,\n  } = usePricingFormState({ initial, shop, onToast: emitToast });\n\n  const guidedTab = (\n    <div className=\"space-y-6\" role=\"tabpanel\" aria-labelledby=\"pricing-tab-guided\">\n      <section className=\"space-y-3\">\n        <div className=\"flex flex-col gap-1\">\n          <label className=\"text-sm font-medium text-foreground\" htmlFor=\"base-daily-rate\">\n            Base daily rate\n          </label>\n          <Input\n            id=\"base-daily-rate\"\n            type=\"number\"\n            min={0}\n            step=\"0.01\"\n            value={baseRate}\n            onChange={onBaseRateChange}\n            aria-invalid={baseRateError ? \"true\" : undefined}\n            aria-describedby={baseRateError ? \"base-daily-rate-error\" : undefined}\n            className=\"bg-slate-900/80 text-foreground\"\n          />\n          <p className=\"text-xs text-muted-foreground\">\n            This rate is used whenever a SKU does not specify its own price.\n          </p>\n          {baseRateError ? (\n            <p id=\"base-daily-rate-error\" className=\"text-xs text-rose-300\">\n              {baseRateError}\n            </p>\n          ) : null}\n        </div>\n      </section>\n\n      <PricingDurationSection\n        rows={duration.rows}\n        onAdd={duration.add}\n        onRemove={duration.remove}\n        onUpdate={duration.update}\n        getErrors={duration.getErrors}\n      />\n\n      <PricingDamageSection\n        rows={damage.rows}\n        onAdd={damage.add}\n        onRemove={damage.remove}\n        onUpdate={damage.update}\n        getErrors={damage.getErrors}\n      />\n\n      <PricingCoverageSection rows={coverage.rows} onUpdate={coverage.update} getErrors={coverage.getErrors} />\n\n      <section className=\"rounded-xl border border-border/10 bg-slate-900/60 p-4\">\n        <h3 className=\"text-sm font-semibold text-foreground\">Need a quick checklist?</h3>\n        <ul className=\"mt-2 list-disc space-y-1 pl-5 text-xs text-muted-foreground\">\n          <li>Verify base rate aligns with current merchandising calendar.</li>\n          <li>Mirror long-stay discounts shared by finance to avoid manual overrides.</li>\n          <li>Confirm damage codes match warehouse dispositions and deposit policy.</li>\n        </ul>\n      </section>\n    </div>\n  );\n\n  const jsonTab = (\n    <PricingJsonEditor\n      draft={json.draft}\n      error={json.error}\n      onDraftChange={json.onDraftChange}\n      onApply={json.applyJson}\n      onReturnToGuided={() => handleTabChange(\"guided\")}\n    />\n  );\n\n  return (\n    <form onSubmit={onSubmit} className=\"space-y-6 text-foreground\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".json,application/json\"\n        className=\"hidden\"\n        onChange={handleFileChange}\n      />\n      <div className=\"space-y-5 rounded-2xl border border-border/10 bg-background/60 p-5\">\n        <div className=\"flex flex-wrap items-start justify-between gap-4\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <Tag\n                variant={statusVariant}\n                className={cn(\"rounded-lg px-3 py-1 text-xs font-medium\")}\n              >\n                {statusLabel}\n              </Tag>\n              {progressMessage ? (\n                <span className=\"text-xs text-muted-foreground\" role=\"status\">\n                  {progressMessage}\n                </span>\n              ) : null}\n            </div>\n            {rootError ? <span className=\"text-xs text-rose-300\">{rootError}</span> : null}\n            <p className=\"text-xs text-muted-foreground\">\n              Save regularly to push updates to pricing services. Import JSON from finance or export to share with operations.\n            </p>\n          </div>\n          <div className=\"flex flex-wrap items-center gap-2\">\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              className=\"h-9 rounded-lg text-xs text-foreground hover:bg-muted/10\"\n              onClick={handleImportClick}\n            >\n              Import JSON\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              className=\"h-9 rounded-lg text-xs text-foreground hover:bg-muted/10\"\n              onClick={handleExport}\n            >\n              Export JSON\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"rounded-2xl border border-border/10 bg-slate-950/70\">\n          <div className=\"flex gap-2 border-b border-border/10 bg-slate-900/50 p-2\" role=\"tablist\">\n            {tabs.map((tab) => {\n              const isActive = activeTab === tab.id;\n              return (\n                <button\n                  key={tab.id}\n                  type=\"button\"\n                  role=\"tab\"\n                  id={`pricing-tab-${tab.id}`}\n                  aria-selected={isActive}\n                  aria-controls={`pricing-panel-${tab.id}`}\n                  onClick={() => handleTabChange(tab.id)}\n                  className={cn(\n                    \"flex-1 rounded-xl px-4 py-2 text-sm font-semibold transition\",\n                    isActive\n                      ? \"bg-emerald-500/20 text-foreground shadow-inner\"\n                      : \"text-muted-foreground hover:bg-muted/10\"\n                  )}\n                >\n                  {tab.label}\n                </button>\n              );\n            })}\n          </div>\n          <div\n            id={`pricing-panel-${activeTab}`}\n            className=\"space-y-4 p-5\"\n            role=\"tabpanel\"\n            aria-labelledby={`pricing-tab-${activeTab}`}\n          >\n            {activeTab === \"guided\" ? guidedTab : jsonTab}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-wrap items-center gap-3\">\n        <Button\n          type=\"submit\"\n          className=\"h-10 rounded-xl bg-emerald-500 px-5 text-sm font-semibold text-white shadow-lg shadow-emerald-500/30 hover:bg-emerald-400\"\n        >\n          Save pricing\n        </Button>\n        <span className=\"text-xs text-muted-foreground\">\n          Updates apply immediately to rental quotes after saving.\n        </span>\n      </div>\n\n      <Toast open={toast.open} message={toast.message} onClose={closeToast} />\n    </form>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/PricingJsonEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/pricingFormUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/useCoverageRows.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/useDamageRows.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/useDurationRows.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/usePricingFormState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/usePricingGridState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/usePricingJsonBridge.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/rental/pricing/usePricingJsonControls.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/return-logistics/ReturnLogisticsForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Card' is defined but never used.","line":3,"column":35,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardContent' is defined but never used.","line":3,"column":41,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":52},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Tag' is defined but never used.","line":7,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'cn' is defined but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":12}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { Button, Input, Checkbox, Card, CardContent } from \"@ui/components/atoms/shadcn\";\nimport { returnLogisticsSchema, type ReturnLogistics } from \"@acme/types\";\nimport { useState } from \"react\";\nimport type { FormEvent, ChangeEvent } from \"react\";\nimport { Tag } from \"@ui/components/atoms\";\nimport { cn } from \"@ui/utils/style\";\n\ntype FormState = Omit<ReturnLogistics, \"returnCarrier\"> & {\n  returnCarrier: string[];\n};\n\ninterface Props {\n  shop: string;\n  initial: ReturnLogistics;\n}\n\nexport default function ReturnLogisticsForm({ shop, initial }: Props) {\n  const [form, setForm] = useState<FormState>(() => ({\n    ...initial,\n    returnCarrier: initial.returnCarrier.length\n      ? initial.returnCarrier\n      : [\"\"],\n    homePickupZipCodes: initial.homePickupZipCodes.length\n      ? initial.homePickupZipCodes\n      : [\"\"],\n  }));\n  const [status, setStatus] = useState<\"idle\" | \"saved\" | \"error\">(\"idle\");\n  const [error, setError] = useState<string | null>(null);\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    const parsed = returnLogisticsSchema.safeParse({\n      ...form,\n      returnCarrier: form.returnCarrier.filter(Boolean),\n      homePickupZipCodes: form.homePickupZipCodes.filter(Boolean),\n    });\n    if (!parsed.success) {\n      setStatus(\"error\");\n      setError(parsed.error.issues.map((i) => i.message).join(\", \"));\n      return;\n    }\n    try {\n      setStatus(\"saved\");\n      setError(null);\n      const res = await fetch(`/api/data/${shop}/return-logistics`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(parsed.data),\n      });\n      if (!res.ok) {\n        const body = await res.json().catch(() => ({}));\n        setStatus(\"error\");\n        setError(body.error || \"Failed to save\");\n      }\n    } catch (err) {\n      setStatus(\"error\");\n      setError((err as Error).message);\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"space-y-4\">\n      <label className=\"flex flex-col gap-1\">\n        <span>Label Service</span>\n        <Input\n          value={form.labelService}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setForm((f) => ({\n              ...f,\n              labelService: e.target.value as FormState[\"labelService\"],\n            }))\n          }\n        />\n      </label>\n      <label className=\"flex items-center gap-2\">\n        <Checkbox\n          checked={form.inStore}\n          onCheckedChange={(v: boolean) =>\n            setForm((f) => ({ ...f, inStore: Boolean(v) }))\n          }\n        />\n        <span>Allow in-store returns</span>\n      </label>\n      <label className=\"flex flex-col gap-1\">\n        <span>Drop-off Provider</span>\n        <Input\n          value={form.dropOffProvider ?? \"\"}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setForm((f) => ({\n              ...f,\n              dropOffProvider: e.target.value || undefined,\n            }))\n          }\n        />\n      </label>\n      <label className=\"flex flex-col gap-1\">\n        <span>Bag Type</span>\n        <Input\n          value={form.bagType}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setForm((f) => ({\n              ...f,\n              bagType: e.target.value as FormState[\"bagType\"],\n            }))\n          }\n        />\n      </label>\n      <fieldset className=\"flex flex-col gap-2\">\n        <legend className=\"font-medium\">Return Carriers</legend>\n        {form.returnCarrier.map((carrier, i) => (\n          <div key={i} className=\"flex items-center gap-2\">\n            <Input\n              value={carrier}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setForm((f) => {\n                  const next = [...f.returnCarrier];\n                  next[i] = e.target.value;\n                  return { ...f, returnCarrier: next };\n                })\n              }\n            />\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() =>\n                setForm((f) => ({\n                  ...f,\n                  returnCarrier: f.returnCarrier.filter((_, idx) => idx !== i),\n                }))\n              }\n            >\n              Remove\n            </Button>\n          </div>\n        ))}\n        <Button\n          type=\"button\"\n          variant=\"ghost\"\n          onClick={() =>\n            setForm((f) => ({\n              ...f,\n              returnCarrier: [...f.returnCarrier, \"\"],\n            }))\n          }\n        >\n          Add carrier\n        </Button>\n      </fieldset>\n      <fieldset className=\"flex flex-col gap-2\">\n        <legend className=\"font-medium\">Home Pickup ZIPs</legend>\n        {form.homePickupZipCodes.map((zip, i) => (\n          <div key={i} className=\"flex items-center gap-2\">\n            <Input\n              value={zip}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setForm((f) => {\n                  const next = [...f.homePickupZipCodes];\n                  next[i] = e.target.value;\n                  return { ...f, homePickupZipCodes: next };\n                })\n              }\n            />\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() =>\n                setForm((f) => ({\n                  ...f,\n                  homePickupZipCodes: f.homePickupZipCodes.filter(\n                    (_, idx) => idx !== i\n                  ),\n                }))\n              }\n            >\n              Remove\n            </Button>\n          </div>\n        ))}\n        <Button\n          type=\"button\"\n          variant=\"ghost\"\n          onClick={() =>\n            setForm((f) => ({\n              ...f,\n              homePickupZipCodes: [...f.homePickupZipCodes, \"\"],\n            }))\n          }\n        >\n          Add ZIP\n        </Button>\n      </fieldset>\n      <label className=\"flex items-center gap-2\">\n        <Checkbox\n          checked={Boolean(form.tracking)}\n          onCheckedChange={(v: boolean) =>\n            setForm((f) => ({ ...f, tracking: Boolean(v) }))\n          }\n        />\n        <span>Enable tracking numbers</span>\n      </label>\n      <label className=\"flex items-center gap-2\">\n        <Checkbox\n          checked={form.requireTags}\n          onCheckedChange={(v: boolean) =>\n            setForm((f) => ({ ...f, requireTags: Boolean(v) }))\n          }\n        />\n        <span>Require tags for returns</span>\n      </label>\n      <label className=\"flex items-center gap-2\">\n        <Checkbox\n          checked={form.allowWear}\n          onCheckedChange={(v: boolean) =>\n            setForm((f) => ({ ...f, allowWear: Boolean(v) }))\n          }\n        />\n        <span>Allow signs of wear</span>\n      </label>\n      <label className=\"flex items-center gap-2\">\n        <Checkbox\n          checked={Boolean(form.mobileApp)}\n          onCheckedChange={(v: boolean) =>\n            setForm((f) => ({ ...f, mobileApp: Boolean(v) }))\n          }\n        />\n        <span>Enable mobile returns</span>\n      </label>\n      {status === \"saved\" && (\n        <p className=\"text-sm text-green-600\">Saved!</p>\n      )}\n      {status === \"error\" && error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      <Button type=\"submit\">Save</Button>\n    </form>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/data/return-logistics/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/edit-preview/EditPreviewPage.tsx","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":24,"column":23,"nodeType":"CallExpression","endLine":24,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { promises as fs } from \"fs\";\nimport path from \"path\";\n\ninterface UpgradeComponent {\n  file: string;\n  componentName: string;\n  oldChecksum?: string;\n  newChecksum?: string;\n}\n\nexport default async function EditPreviewPage({\n  shop,\n}: {\n  shop: string;\n}) {\n  const filePath = path.resolve(\n    process.cwd(),\n    \"..\",\n    `shop-${shop}`,\n    \"upgrade-changes.json\",\n  );\n  let components: UpgradeComponent[] = [];\n  try {\n    const raw = await fs.readFile(filePath, \"utf8\");\n    const data = JSON.parse(raw);\n    components = Array.isArray(data.components) ? data.components : [];\n  } catch {\n    // ignore errors if file not found or invalid\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4 text-xl font-semibold\">Edit Preview – {shop}</h2>\n      <ul className=\"list-disc pl-4\">\n        {components.map((c) => (\n          <li key={c.file}>{c.componentName}</li>\n        ))}\n        {components.length === 0 && <li>No changes.</li>}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/edit-preview/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/import/design-system/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/media/components/MediaOverviewHero.tsx","messages":[{"ruleId":"ds/no-raw-font","severity":2,"message":"Use typography tokens instead of raw font stack 'times'.","line":47,"column":12,"nodeType":"Literal","messageId":"noRawFont","endLine":47,"endColumn":35},{"ruleId":"ds/no-raw-font","severity":2,"message":"Use typography tokens instead of raw font stack 'times'.","line":52,"column":12,"nodeType":"Literal","messageId":"noRawFont","endLine":52,"endColumn":35}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport Image from \"next/image\";\nimport { useCallback } from \"react\";\nimport type { MediaItem } from \"@acme/types\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Progress,\n} from \"@/components/atoms/shadcn\";\nimport {\n  ClockIcon,\n  ImageIcon,\n  StackIcon,\n  UploadIcon,\n  VideoIcon,\n} from \"@radix-ui/react-icons\";\n\ninterface MediaOverviewHeroProps {\n  shop: string;\n  totalBytes: number;\n  assetCount: number;\n  recentUploads: MediaItem[];\n  uploaderTargetId?: string;\n  storageLimitBytes?: number | null;\n}\n\nfunction formatBytes(bytes: number): string {\n  if (!Number.isFinite(bytes) || bytes <= 0) {\n    return \"0 B\";\n  }\n\n  const units = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"] as const;\n  const exponent = Math.min(\n    Math.floor(Math.log(bytes) / Math.log(1024)),\n    units.length - 1\n  );\n  const size = bytes / 1024 ** exponent;\n  const precision = size >= 10 || exponent === 0 ? 0 : 1;\n\n  return `${size.toFixed(precision)} ${units[exponent]}`;\n}\n\nfunction formatTimestamp(value?: string): string {\n  if (!value) {\n    return \"Timestamp unavailable\";\n  }\n\n  const date = new Date(value);\n  if (Number.isNaN(date.getTime())) {\n    return \"Timestamp unavailable\";\n  }\n\n  return new Intl.DateTimeFormat(undefined, {\n    dateStyle: \"medium\",\n    timeStyle: \"short\",\n  }).format(date);\n}\n\nfunction getDisplayName(item: MediaItem): string {\n  if (item.title && item.title.trim().length > 0) {\n    return item.title;\n  }\n\n  if (item.altText && item.altText.trim().length > 0) {\n    return item.altText;\n  }\n\n  try {\n    const decoded = decodeURIComponent(item.url.split(\"/\").pop() ?? item.url);\n    return decoded || item.url;\n  } catch {\n    return item.url;\n  }\n}\n\nexport default function MediaOverviewHero({\n  shop,\n  totalBytes,\n  assetCount,\n  recentUploads,\n  uploaderTargetId,\n  storageLimitBytes,\n}: MediaOverviewHeroProps) {\n  const usagePercent =\n    typeof storageLimitBytes === \"number\" && storageLimitBytes > 0\n      ? Math.min(100, Math.round((totalBytes / storageLimitBytes) * 100))\n      : null;\n  const storageSummary =\n    typeof storageLimitBytes === \"number\" && storageLimitBytes > 0\n      ? `${formatBytes(totalBytes)} of ${formatBytes(storageLimitBytes)}`\n      : formatBytes(totalBytes);\n\n  const mostRecentUpload = recentUploads[0];\n  const headingId = \"media-overview-heading\";\n\n  const handleUploadClick = useCallback(() => {\n    if (!uploaderTargetId) return;\n\n    const element = document.getElementById(uploaderTargetId);\n    if (element instanceof HTMLElement) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      element.focus({ preventScroll: true });\n    }\n  }, [uploaderTargetId]);\n\n  return (\n    <section aria-labelledby={headingId} role=\"region\">\n      <Card>\n        <CardContent className=\"flex flex-col gap-6 p-6\">\n          <div className=\"flex flex-wrap items-start justify-between gap-4\">\n            <div className=\"space-y-2\">\n              <p className=\"text-sm text-muted-foreground\">\n                Asset library · {shop}\n              </p>\n              <h1 id={headingId} className=\"text-2xl font-semibold\">\n                Manage your media library\n              </h1>\n              <p className=\"max-w-xl text-sm text-muted-foreground\">\n                Track storage usage, monitor recent uploads, and keep your asset\n                library ready for new campaigns.\n              </p>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              <Button\n                type=\"button\"\n                onClick={handleUploadClick}\n                className=\"inline-flex items-center gap-2\"\n              >\n                <UploadIcon className=\"h-4 w-4\" aria-hidden />\n                Upload media\n              </Button>\n            </div>\n          </div>\n\n          <dl className=\"grid gap-4 sm:grid-cols-3\" aria-label=\"Media usage statistics\">\n            <div className=\"rounded-lg border border-border/60 bg-muted/10 p-4\">\n              <dt className=\"flex items-center gap-2 text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                <StackIcon className=\"h-4 w-4\" aria-hidden />\n                Storage used\n              </dt>\n              <dd className=\"mt-2 text-lg font-semibold text-foreground\">\n                {storageSummary}\n              </dd>\n              {usagePercent !== null && (\n                <div className=\"mt-4 space-y-1\">\n                  <Progress value={usagePercent} aria-label=\"Storage usage\" />\n                  <p className=\"text-xs text-muted-foreground\">\n                    {usagePercent}% of plan capacity\n                  </p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"rounded-lg border border-border/60 bg-muted/10 p-4\">\n              <dt className=\"flex items-center gap-2 text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                <ImageIcon className=\"h-4 w-4\" aria-hidden />\n                Assets in library\n              </dt>\n              <dd className=\"mt-2 text-lg font-semibold text-foreground\">\n                {assetCount.toLocaleString()}\n              </dd>\n              <p className=\"text-xs text-muted-foreground\">\n                Includes images and videos stored in your workspace.\n              </p>\n            </div>\n\n            <div className=\"rounded-lg border border-border/60 bg-muted/10 p-4\">\n              <dt className=\"flex items-center gap-2 text-xs font-semibold uppercase tracking-wide text-muted-foreground\">\n                <ClockIcon className=\"h-4 w-4\" aria-hidden />\n                Last upload\n              </dt>\n              <dd className=\"mt-2 text-lg font-semibold text-foreground\">\n                {mostRecentUpload\n                  ? formatTimestamp(mostRecentUpload.uploadedAt)\n                  : \"No uploads yet\"}\n              </dd>\n              {mostRecentUpload && (\n                <p className=\"text-xs text-muted-foreground\">\n                  {getDisplayName(mostRecentUpload)}\n                </p>\n              )}\n            </div>\n          </dl>\n\n          <div className=\"space-y-3\">\n            <h2 className=\"text-lg font-semibold\">Recent uploads</h2>\n            {recentUploads.length > 0 ? (\n              <ul\n                className=\"flex gap-4 overflow-x-auto pb-2\"\n                aria-label=\"Recent media uploads\"\n              >\n                {recentUploads.map((item) => {\n                  const name = getDisplayName(item);\n                  const timestamp = formatTimestamp(item.uploadedAt);\n\n                  return (\n                    <li\n                      key={item.url}\n                      className=\"min-w-[11rem] flex-shrink-0\"\n                    >\n                      <div className=\"space-y-2\">\n                        <div className=\"relative h-28 w-full overflow-hidden rounded-md border border-border/60 bg-muted\">\n                          {item.url ? (\n                            <Image\n                              src={item.url}\n                              alt={name}\n                              width={160}\n                              height={160}\n                              className=\"h-full w-full object-cover\"\n                            />\n                          ) : (\n                            <div className=\"flex h-full items-center justify-center text-muted-foreground\">\n                              <ImageIcon className=\"h-6 w-6\" aria-hidden />\n                            </div>\n                          )}\n                          {item.type === \"video\" && (\n                            <span className=\"absolute left-2 top-2 inline-flex items-center gap-1 rounded-full bg-black/60 px-2 py-1 text-xs text-white\">\n                              <VideoIcon className=\"h-3 w-3\" aria-hidden />\n                              Video\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"space-y-1\">\n                          <p className=\"truncate text-sm font-medium text-foreground\">\n                            {name}\n                          </p>\n                          <p className=\"text-xs text-muted-foreground\">{timestamp}</p>\n                        </div>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <p className=\"text-sm text-muted-foreground\">\n                Upload images or videos to populate your media activity feed.\n              </p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/media/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/pages/PagesClient.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/pages/[page]/builder/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/pages/[page]/export/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/pages/new/builder/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/pages/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/products/[id]/edit/ProductEditHero.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/products/[id]/edit/ProductEditor.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/products/[id]/edit/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/products/new/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/products/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/CurrencyTaxEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/ShopEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/AdminTools.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/ConfigurationOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/EditorSectionsAccordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/ErrorChips.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/MappingListField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/MappingListRow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/ServiceAutomationGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/ServiceToggleField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/SettingsHero.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/StringCollectionField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/components/mappingListField.utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/deposits/DepositsEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/deposits/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/editorSections.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/hooks/useSettingsSaveForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/late-fees/LateFeesEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/late-fees/LateFeesTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/late-fees/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/lib/pageSections.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/maintenance-scan/MaintenanceSchedulerEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/maintenance-scan/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/premier-delivery/PremierDeliveryEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/premier-delivery/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/returns/ReturnsEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/returns/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/reverse-logistics/ReverseLogisticsEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/reverse-logistics/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopIdentitySection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopLocalizationSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopOverridesSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopProvidersSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopSeoSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/ShopThemeSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/sections/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/AiCatalogSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/AiFeedPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/PreviewPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoAdvancedSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoAuditPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoChart.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoEditorHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoForm.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoLanguageTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoProgressPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/SeoSharedFields.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/VersionTimeline.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/useSeoEditor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/seo/useSeoForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/stock-alerts/StockAlertsEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/stock-alerts/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/stock-scheduler/StockSchedulerEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/stock-scheduler/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/tableMappers.tsx","messages":[{"ruleId":"security/detect-unsafe-regex","severity":1,"message":"Unsafe Regular Expression","line":6,"column":16,"nodeType":"Literal","endLine":6,"endColumn":44},{"ruleId":"security/detect-unsafe-regex","severity":1,"message":"Unsafe Regular Expression","line":7,"column":16,"nodeType":"Literal","endLine":7,"endColumn":67}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { ReactNode } from \"react\";\nimport type { Column } from \"@ui/components/cms/DataTable\";\nimport type { ThemeTokenRow } from \"./lib/pageSections\";\nexport type { ThemeTokenRow } from \"./lib/pageSections\";\n\nconst HEX_RE = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\nconst HSL_RE = /^\\d+(?:\\.\\d+)?\\s+\\d+(?:\\.\\d+)?%\\s+\\d+(?:\\.\\d+)?%$/;\n\nfunction isColor(value?: string): value is string {\n  if (!value) return false;\n  return HEX_RE.test(value) || HSL_RE.test(value);\n}\n\nfunction swatchColor(value: string) {\n  return HSL_RE.test(value) ? `hsl(${value})` : value;\n}\n\nexport function createThemeTokenColumns({\n  onReset,\n}: {\n  onReset?: (row: ThemeTokenRow) => ReactNode;\n} = {}): Column<ThemeTokenRow>[] {\n  const baseColumns: Column<ThemeTokenRow>[] = [\n    {\n      header: \"Token\",\n      width: \"25%\",\n      render: (row) => <span className=\"font-mono\">{row.token}</span>,\n    },\n    {\n      header: \"Values\",\n      render: (row) => (\n        <div className=\"flex flex-wrap items-center gap-4\">\n          <div className=\"flex items-center gap-1\">\n            <span className=\"font-mono\">{row.defaultValue ?? \"—\"}</span>\n            {isColor(row.defaultValue) && (\n              <span\n                aria-hidden\n                className=\"ml-1 inline-block h-4 w-4 rounded border align-middle\"\n                style={{ backgroundColor: swatchColor(row.defaultValue) }}\n              />\n            )}\n            <span className=\"text-xs text-muted-foreground\">default</span>\n          </div>\n          {row.hasOverride && (\n            <div className=\"flex items-center gap-1\">\n              <span className=\"font-mono\">{row.overrideValue ?? \"—\"}</span>\n              {isColor(row.overrideValue) && (\n                <span\n                  aria-hidden\n                  className=\"ml-1 inline-block h-4 w-4 rounded border align-middle\"\n                  style={{ backgroundColor: swatchColor(row.overrideValue) }}\n                />\n              )}\n              <span className=\"text-xs text-muted-foreground\">override</span>\n            </div>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  if (!onReset) return baseColumns;\n\n  return [\n    ...baseColumns,\n    {\n      header: \"Actions\",\n      width: \"120px\",\n      render: (row) => (row.hasOverride ? onReset(row) : null),\n    },\n  ];\n}\n\nexport function themeTokenRowClassName(row: ThemeTokenRow) {\n  return row.changed ? \"bg-yellow-50\" : undefined;\n}\n\nexport interface SchedulerHistoryRow {\n  timestamp: number;\n  alerts: number;\n  runAt: string;\n}\n\nexport function mapSchedulerHistoryRows(\n  history: { timestamp: number; alerts: number }[],\n): SchedulerHistoryRow[] {\n  return history\n    .slice()\n    .reverse()\n    .map((entry) => ({\n      timestamp: entry.timestamp,\n      alerts: entry.alerts,\n      runAt: new Date(entry.timestamp).toLocaleString(),\n    }));\n}\n\nexport const schedulerHistoryColumns: Column<SchedulerHistoryRow>[] = [\n  {\n    header: \"Time\",\n    render: (row) => row.runAt,\n  },\n  {\n    header: \"Alerts\",\n    width: \"96px\",\n    render: (row) => row.alerts,\n  },\n];\n\nexport interface LateFeeRow {\n  orderId: string;\n  amount: number;\n  formattedAmount: string;\n}\n\nexport function mapLateFeeRows(\n  charges: { sessionId: string; lateFeeCharged?: number | null }[],\n): LateFeeRow[] {\n  return charges.map((order) => {\n    const amount = order.lateFeeCharged ?? 0;\n    return {\n      orderId: order.sessionId,\n      amount,\n      formattedAmount: `$${amount.toFixed(2)}`,\n    } satisfies LateFeeRow;\n  });\n}\n\nexport const lateFeeColumns: Column<LateFeeRow>[] = [\n  {\n    header: \"Order\",\n    render: (row) => row.orderId,\n  },\n  {\n    header: \"Amount\",\n    width: \"120px\",\n    render: (row) => <span className=\"tabular-nums\">{row.formattedAmount}</span>,\n  },\n];\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/useShopEditorErrors.ts","messages":[{"ruleId":"security/detect-non-literal-regexp","severity":1,"message":"Found non-literal argument to RegExp Constructor","line":47,"column":22,"nodeType":"NewExpression","endLine":47,"endColumn":82},{"ruleId":"security/detect-non-literal-regexp","severity":1,"message":"Found non-literal argument to RegExp Constructor","line":48,"column":26,"nodeType":"NewExpression","endLine":50,"endColumn":4}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useMemo } from \"react\";\n\nimport type {\n  ShopIdentitySectionErrors,\n  ShopLocalizationSectionErrors,\n  ShopOverridesSectionErrors,\n  ShopProvidersSectionErrors,\n  ShopSeoSectionErrors,\n  ShopThemeSectionErrors,\n} from \"./sections\";\nimport type {\n  MappingListFieldErrors,\n  MappingListFieldRowErrors,\n} from \"./components/MappingListField\";\n\nconst LUXURY_FEATURE_ERROR_KEYS = [\n  \"blog\",\n  \"contentMerchandising\",\n  \"raTicketing\",\n  \"requireStrongCustomerAuth\",\n  \"strictReturnConditions\",\n  \"trackingDashboard\",\n  \"premierDelivery\",\n] as const;\n\ntype MappingListFieldName =\n  | \"filterMappings\"\n  | \"priceOverrides\"\n  | \"localeOverrides\";\n\nexport interface ShopEditorErrorBags {\n  readonly identity?: ShopIdentitySectionErrors;\n  readonly providers?: ShopProvidersSectionErrors;\n  readonly overrides?: ShopOverridesSectionErrors;\n  readonly localization?: ShopLocalizationSectionErrors;\n  readonly seo?: ShopSeoSectionErrors;\n  readonly theme?: ShopThemeSectionErrors;\n}\n\nfunction buildMappingListErrors(\n  errors: Readonly<Record<string, string[]>>,\n  field: MappingListFieldName,\n): MappingListFieldErrors | undefined {\n  const general = errors[field];\n  const rowEntries = new Map<number, MappingListFieldRowErrors>();\n\n  const dotPattern = new RegExp(`^${field}\\\\.(\\\\d+)(?:\\\\.(key|value|general))?$`);\n  const bracketPattern = new RegExp(\n    `^${field}\\\\[(\\\\d+)](?:\\\\.(key|value|general))?$`,\n  );\n\n  for (const [errorKey, messages] of Object.entries(errors)) {\n    const dotMatch = errorKey.match(dotPattern);\n    const bracketMatch = errorKey.match(bracketPattern);\n    const match = dotMatch ?? bracketMatch;\n    if (!match) {\n      continue;\n    }\n\n    const index = Number(match[1]);\n    if (Number.isNaN(index)) {\n      continue;\n    }\n\n    const fieldName = (match[2] as \"key\" | \"value\" | \"general\" | undefined) ?? \"general\";\n    const current = rowEntries.get(index) ?? {};\n\n    if (fieldName === \"general\") {\n      rowEntries.set(index, { ...current, general: messages });\n    } else {\n      rowEntries.set(index, { ...current, [fieldName]: messages });\n    }\n  }\n\n  const rows =\n    rowEntries.size > 0\n      ? Array.from(rowEntries.entries())\n          .sort(([left], [right]) => left - right)\n          .map(([, value]) => value)\n      : undefined;\n\n  if (!general && !rows) {\n    return undefined;\n  }\n\n  return { general, rows };\n}\n\nexport function useShopEditorErrors(\n  errors: Readonly<Record<string, string[]>>,\n): ShopEditorErrorBags {\n  return useMemo(() => {\n    const identityErrors: ShopIdentitySectionErrors = {};\n    if (errors.name) {\n      identityErrors.name = errors.name;\n    }\n    if (errors.themeId) {\n      identityErrors.themeId = errors.themeId;\n    }\n    if (errors.fraudReviewThreshold) {\n      identityErrors.fraudReviewThreshold = errors.fraudReviewThreshold;\n    }\n    if (errors.luxuryFeatures) {\n      identityErrors.luxuryFeatures = errors.luxuryFeatures;\n    }\n\n    for (const feature of LUXURY_FEATURE_ERROR_KEYS) {\n      const messages = errors[feature];\n      if (messages) {\n        const field = `luxuryFeatures.${feature}` as const;\n        identityErrors[field] = messages;\n      }\n    }\n\n    const identityBag =\n      Object.keys(identityErrors).length > 0 ? identityErrors : undefined;\n\n    const providersBag = errors.trackingProviders\n      ? { trackingProviders: errors.trackingProviders }\n      : undefined;\n\n    const filterMappingErrors = buildMappingListErrors(errors, \"filterMappings\");\n    const priceOverrideErrors = buildMappingListErrors(errors, \"priceOverrides\");\n\n    const overridesErrors: ShopOverridesSectionErrors = {};\n    if (filterMappingErrors) {\n      overridesErrors.filterMappings = filterMappingErrors;\n    }\n    if (priceOverrideErrors) {\n      overridesErrors.priceOverrides = priceOverrideErrors;\n    }\n    const overridesBag =\n      Object.keys(overridesErrors).length > 0 ? overridesErrors : undefined;\n\n    const localizationBag = (() => {\n      const localeOverrideErrors = buildMappingListErrors(errors, \"localeOverrides\");\n      if (!localeOverrideErrors) {\n        return undefined;\n      }\n      return { localeOverrides: localeOverrideErrors } satisfies ShopLocalizationSectionErrors;\n    })();\n\n    const seoBag = errors.catalogFilters\n      ? ({ catalogFilters: errors.catalogFilters } satisfies ShopSeoSectionErrors)\n      : undefined;\n\n    const themeBag = (() => {\n      const result: ShopThemeSectionErrors = {};\n      if (errors.themeDefaults) {\n        result.themeDefaults = errors.themeDefaults;\n      }\n      if (errors.themeOverrides) {\n        result.themeOverrides = errors.themeOverrides;\n      }\n      return Object.keys(result).length > 0 ? result : undefined;\n    })();\n\n    return {\n      identity: identityBag,\n      providers: providersBag,\n      overrides: overridesBag,\n      localization: localizationBag,\n      seo: seoBag,\n      theme: themeBag,\n    } satisfies ShopEditorErrorBags;\n  }, [errors]);\n}\n\nexport default useShopEditorErrors;\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/useShopEditorForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/settings/useShopEditorSubmit.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/ColorInput.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'checkContrast'. Either include it or remove the dependency array.","line":89,"column":6,"nodeType":"ArrayExpression","endLine":89,"endColumn":23,"suggestions":[{"desc":"Update the dependencies array to be: [checkContrast, current, tokens]","fix":{"range":[2639,2656],"text":"[checkContrast, current, tokens]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/InlineColorPicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/OverrideField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/PalettePicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/PresetControls.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/PreviewPane.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/ThemeEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/ThemePreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/ThemeSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/TokenGroup.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/TypographySettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/tokenGroups.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/useThemeEditor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/useThemePresetManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/useThemePresets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/themes/useThemeTokenSync.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'previewTokens'. Either include it or remove the dependency array.","line":87,"column":6,"nodeType":"ArrayExpression","endLine":87,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [previewTokens]","fix":{"range":[2529,2531],"text":"[previewTokens]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/upgrade-preview/UpgradePreviewClient.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/upgrade-preview/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/utils/formValidators.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/wizard/new/actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/wizard/new/components/PreviewPane.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/wizard/new/components/SpecForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/[shop]/wizard/new/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/shop/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/TelemetryEventTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/TelemetryFiltersPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/TelemetryHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/TelemetrySummaryCards.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/telemetry/telemetryUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/templates/HelloTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/templates/ProductListTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/themes/ThemesShopChooser.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/themes/library/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/themes/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/PreviewDeviceSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/TokenInspector.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":141,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":141,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4438,4441],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4438,4441],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/WizardPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/previewTokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/createShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/deployShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/initShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/patchTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/seedShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/services/submitShop.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/tokenUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/usePreviewTokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/cms/wizard/utils/page-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/app/success/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/auth/options.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'_pw' is assigned a value but never used.","line":79,"column":31,"nodeType":null,"messageId":"unusedVar","endLine":79,"endColumn":34,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/auth/roles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/auth/secret.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/auth/users.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/DashboardHero.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/PendingSummaryPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/ShopOverviewCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/cms/PageBuilder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/cms/media/MediaFileItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/components/cms/media/MediaManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/hooks/useMappingRows.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/instrumentation.node.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/analytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/cartCookie.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/dashboardData.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs/promises\" with non literal argument at index 0","line":25,"column":27,"nodeType":"CallExpression","endLine":25,"endColumn":72},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs/promises\" with non literal argument at index 0","line":36,"column":27,"nodeType":"CallExpression","endLine":36,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from \"fs/promises\";\nimport path from \"path\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\nimport { readRbac } from \"@cms/lib/server/rbacStore\";\n\nexport type Stats = {\n  users: number;\n  shops: number;\n  products: number;\n};\n\nexport type QuickStat = {\n  label: string;\n  value: string;\n  caption: string;\n};\n\nconst numberFormatter = new Intl.NumberFormat();\n\nexport async function collectStats(): Promise<Stats> {\n  const shopsDir = resolveDataRoot();\n\n  let shops: string[] = [];\n  try {\n    const entries = await fs.readdir(shopsDir, { withFileTypes: true });\n    shops = entries.filter((entry) => entry.isDirectory()).map((entry) => entry.name);\n  } catch {\n    shops = [];\n  }\n\n  let productCount = 0;\n  await Promise.all(\n    shops.map(async (shop) => {\n      const file = path.join(shopsDir, shop, \"products.json\");\n      try {\n        const buf = await fs.readFile(file, \"utf8\");\n        const json = JSON.parse(buf);\n        if (Array.isArray(json)) {\n          productCount += json.length;\n        }\n      } catch (err) {\n        if ((err as NodeJS.ErrnoException).code !== \"ENOENT\") {\n          console.error(`Failed reading ${file}`, err);\n        }\n      }\n    })\n  );\n\n  const { users: usersMap } = await readRbac();\n\n  return {\n    users: Object.keys(usersMap).length,\n    shops: shops.length,\n    products: productCount,\n  };\n}\n\nexport function buildQuickStats({ users, shops, products }: Stats): QuickStat[] {\n  return [\n    {\n      label: \"Active users\",\n      value: numberFormatter.format(users),\n      caption:\n        users === 0\n          ? \"Invite teammates to collaborate\"\n          : `${users === 1 ? \"person\" : \"people\"} with workspace access`,\n    },\n    {\n      label: \"Live shops\",\n      value: numberFormatter.format(shops),\n      caption:\n        shops === 0\n          ? \"Create your first shop to go live\"\n          : `${shops === 1 ? \"storefront\" : \"storefronts\"} active`,\n    },\n    {\n      label: \"Catalog size\",\n      value: numberFormatter.format(products),\n      caption:\n        products === 0\n          ? \"No products imported yet\"\n          : `${products === 1 ? \"product\" : \"products\"} across all shops`,\n    },\n  ];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/listShops.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs/promises\" with non literal argument at index 0","line":10,"column":27,"nodeType":"CallExpression","endLine":10,"endColumn":72}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// apps/cms/src/lib/listShops.ts\n\nimport fs from \"fs/promises\";\nimport { resolveDataRoot } from \"@platform-core/dataRoot\";\n\nexport async function listShops(): Promise<string[]> {\n  const shopsDir = resolveDataRoot();\n\n  try {\n    const entries = await fs.readdir(shopsDir, { withFileTypes: true });\n    return entries.filter((e) => e.isDirectory()).map((e) => e.name);\n  } catch (err: unknown) {\n    // If the shops directory hasn't been created yet, treat it as having\n    // no shops rather than throwing. This allows callers to handle the empty\n    // state gracefully.\n    if ((err as NodeJS.ErrnoException).code === \"ENOENT\") {\n      return [];\n    }\n    console.error(`Failed to list shops at ${shopsDir}:`, err);\n    throw err;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/server/jsonIO.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":29,"column":23,"nodeType":"CallExpression","endLine":29,"endColumn":48},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs\" with non literal argument at index 0","line":45,"column":9,"nodeType":"CallExpression","endLine":45,"endColumn":58},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":50,"column":11,"nodeType":"CallExpression","endLine":50,"endColumn":42},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found rename from package \"fs\" with non literal argument at index 0,1","line":51,"column":11,"nodeType":"CallExpression","endLine":51,"endColumn":31},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":53,"column":11,"nodeType":"CallExpression","endLine":53,"endColumn":43}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import \"server-only\";\n\nimport { promises as fs } from \"fs\";\nimport * as path from \"path\";\n\nconst fileLocks = new Map<string, Promise<void>>();\n\nasync function withFileLock<T>(file: string, fn: () => Promise<T>): Promise<T> {\n  const prev = fileLocks.get(file) ?? Promise.resolve();\n  let release: (() => void) | undefined;\n  const current = new Promise<void>((resolve) => {\n    release = resolve;\n  });\n  const next = prev.then(() => current);\n  fileLocks.set(file, next);\n  await prev;\n  try {\n    return await fn();\n  } finally {\n    release?.();\n    if (fileLocks.get(file) === next) {\n      fileLocks.delete(file);\n    }\n  }\n}\n\nexport async function readJsonFile<T>(file: string, fallback: T): Promise<T> {\n  try {\n    const buf = await fs.readFile(file, \"utf8\");\n    return JSON.parse(buf) as T;\n  } catch {\n    return fallback;\n  }\n}\n\nexport async function writeJsonFile(\n  file: string,\n  value: unknown,\n  indent?: number,\n): Promise<void> {\n  if (value === undefined || value === null || typeof value !== \"object\") {\n    throw new TypeError(\"Expected value to be a non-null object or array\");\n  }\n\n  await fs.mkdir(path.dirname(file), { recursive: true });\n  const data = JSON.stringify(value, null, indent ?? 2);\n\n  if (typeof fs.rename === \"function\") {\n    const tmp = `${file}.${process.pid}.${Date.now()}.tmp`;\n    await fs.writeFile(tmp, data, \"utf8\");\n    await fs.rename(tmp, file);\n  } else {\n    await fs.writeFile(file, data, \"utf8\");\n  }\n}\n\nexport { withFileLock };\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/lib/server/rbacStore.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":67,"column":9,"nodeType":"CallExpression","endLine":67,"endColumn":40},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":81,"column":23,"nodeType":"CallExpression","endLine":81,"endColumn":48},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdir from package \"fs\" with non literal argument at index 0","line":106,"column":9,"nodeType":"CallExpression","endLine":106,"endColumn":58},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found rename from package \"fs\" with non literal argument at index 0,1","line":110,"column":11,"nodeType":"CallExpression","endLine":110,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import \"server-only\";\n\n// apps/cms/src/lib/server/rbacStore.ts\n\nimport type { CmsUser } from \"@acme/types\";\nimport type { Permission } from \"@auth\";\nimport { ROLE_PERMISSIONS } from \"@auth/permissions\";\nimport * as fsSync from \"fs\";\nimport { promises as fs } from \"fs\";\nimport * as path from \"path\";\nimport { writeJsonFile } from \"@/lib/server/jsonIO\";\nimport type { Role } from \"../../auth/roles\";\n\nexport interface RbacDB {\n  users: Record<string, CmsUser>;\n  roles: Record<string, Role | Role[]>;\n  permissions: Record<Role, Permission[]>;\n}\n\nconst DEFAULT_DB: RbacDB = {\n  users: {\n    \"1\": {\n      id: \"1\",\n      name: \"Admin\",\n      email: \"admin@example.com\",\n      password: \"admin\",\n    },\n    \"2\": {\n      id: \"2\",\n      name: \"Viewer\",\n      email: \"viewer@example.com\",\n      password: \"$2b$10$zrw7b.7IguK2cWtM83jgKOKe0YiM6BTzGI.S60J1nlanjPw7G5dt6\",\n    },\n    \"3\": {\n      id: \"3\",\n      name: \"Shop Admin\",\n      email: \"shopadmin@example.com\",\n      password: \"$2b$10$iiBPVdzX6hr0R.9eOSN36uhBqt0iOIj6ecZlPA.NBpzswomxcTvfi\",\n    },\n    \"4\": {\n      id: \"4\",\n      name: \"Catalog Manager\",\n      email: \"catalogmanager@example.com\",\n      password: \"$2b$10$bXz7QTWvPrn7okbbk58uDOJKBPJfPU6RI8F5HV4M5DnBFwSIbXi/y\",\n    },\n    \"5\": {\n      id: \"5\",\n      name: \"Theme Editor\",\n      email: \"themeeditor@example.com\",\n      password: \"$2b$10$XCLdGULFzVh56kw/oRP2husM07I1fPe0NqjIUxk9d2/PZBTwVIruK\",\n    },\n  },\n  roles: {\n    \"1\": \"admin\",\n    \"2\": \"viewer\",\n    \"3\": \"ShopAdmin\",\n    \"4\": \"CatalogManager\",\n    \"5\": \"ThemeEditor\",\n  },\n  permissions: { ...ROLE_PERMISSIONS },\n};\n\nfunction resolveFile(): string {\n  let dir = process.cwd();\n  while (true) {\n    const candidateDir = path.join(dir, \"data\", \"cms\");\n    if (fsSync.existsSync(candidateDir)) {\n      return path.join(candidateDir, \"users.json\");\n    }\n    const parent = path.dirname(dir);\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return path.resolve(process.cwd(), \"data\", \"cms\", \"users.json\");\n}\n\nconst FILE = resolveFile();\n\nexport async function readRbac(): Promise<RbacDB> {\n  try {\n    const buf = await fs.readFile(FILE, \"utf8\");\n    const parsed = JSON.parse(buf) as RbacDB;\n    if (parsed && parsed.users && parsed.roles && parsed.permissions) {\n      const permissions: Record<Role, Permission[]> = {\n        ...DEFAULT_DB.permissions,\n      };\n      for (const role of Object.keys(parsed.permissions) as Role[]) {\n        permissions[role] = Array.from(\n          new Set([...(permissions[role] ?? []), ...parsed.permissions[role]])\n        );\n      }\n      return { ...DEFAULT_DB, ...parsed, permissions };\n    }\n  } catch {\n    /* ignore */\n  }\n  return { ...DEFAULT_DB };\n}\n\nexport async function writeRbac(\n  db: RbacDB | null | undefined\n): Promise<void> {\n  if (db == null) {\n    throw new TypeError(\"db must be defined\");\n  }\n  await fs.mkdir(path.dirname(FILE), { recursive: true });\n  const tmp = `${FILE}.${Date.now()}.tmp`;\n  await writeJsonFile(tmp, db);\n  try {\n    await fs.rename(tmp, FILE);\n  } catch (err) {\n    await fs.rm(tmp, { force: true }).catch(() => {});\n    throw err;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/middleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/create.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/delete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/get.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/list.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/publish.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/unpublish.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/blog/posts/update.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/authorization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/formData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/persistence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/seoService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/settingsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/themeService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseAiCatalogForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseCurrencyTaxForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseDepositForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseGenerateSeoForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseLateFeeForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parsePremierDeliveryForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseReverseLogisticsForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseSeoForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseShopForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseStockAlertForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/services/shops/validation/parseUpsReturnsForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/types/configurator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/types/i18n.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/utils/formData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/src/utils/sentry.server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/petercowling/base-shop/apps/cms/tailwind.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
